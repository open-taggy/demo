{"mappings":"AAEAA,QAAO,WAKL,IAAIC,EAAqBC,SAASC,eAAe,cAK7CC,EAAsBF,SAASC,eAAe,eAK9CE,EAAeH,SAASC,eAAe,eAGvCG,EAAgBJ,SAASC,eAAe,aAGxCI,EAAeL,SAASC,eAAe,YAGvCK,EAAYN,SAASC,eAAe,eAGpCM,EAAc,IAAIC,MACpBT,EACAG,EACAC,EACAC,EACAC,EACAC,GAKEG,EAAcC,OAAOC,KAAKJ,EAAYK,QAC1CC,QAAQC,IAAI,SAAUL,GAGtB,IAAIM,EAAeR,EAAYS,aAG/B,GAFAH,QAAQC,IAAI,eAAgBC,IAEvBE,EAAEC,cAAcH,GAAe,CAClCE,EAAE,eACCE,KAAK,KAAM,qBACXC,YAAY,2BAEfH,EAAE,sBAAsBI,OACtBJ,EAAE,eACCE,KAAK,KAAM,WACXA,KAAK,QAAS,aACdE,OACCJ,EAAE,aAAaE,KAAK,QAAS,yBAAyBG,KAAK,YAE5DD,OACCJ,EAAE,WACCE,KAAK,QAAS,WACdG,KAAK,wDAId,IAAIC,EAAcC,KAAKC,UAAUV,EAAc,KAAM,GACrDE,EAAE,YAAYI,OACZJ,EAAE,eACCS,SACC,0EAEDJ,KAAKC,GAIZ,CAGAN,EAAEU,KAAKlB,GAAa,SAAUmB,EAAOC,GACnC,IAAIC,EAAY,IAAMD,EAClBE,EAAcd,EAAER,GAAauB,GAAGJ,EAAQ,GACxCK,EAAc,KAKlB,GAJIF,EAAY,IAAMA,EAAY,GAAGG,SAAS,aAC5CD,EAAc1B,EAAYK,OAAOmB,EAAY,MAG1CF,EAAMK,SAAS,WAAY,CAC9B,IAAIC,EAAWlB,EAAE,sBACdI,OACCJ,EAAE,mBACCE,KAAK,OAAQ,YACbA,KAAK,KAAMU,GACXO,IAAIP,IAERR,OACCJ,EAAE,mBAAmBS,SAAS,qBAAqBJ,KAAKQ,IAExDG,GACFE,EAASd,OACPJ,EAAE,WAAWS,SAAS,wBAAwBJ,KAAKW,IAGvDE,EAASd,OAAO,SAEZd,EAAYK,OAAOiB,IACrBZ,EAAE,IAAMY,GAAOQ,KAAK,WAAW,EAEnC,CACF,IAEApB,EAAE,0BAA0BqB,OAAM,WACD,GAA3BrB,EAAEsB,MAAMF,KAAK,WACf9B,EAAYiC,UAAUvB,EAAEsB,MAAMH,OAAO,GAErC7B,EAAYiC,UAAUvB,EAAEsB,MAAMH,OAAO,EAEzC,IAGArC,EAAmB0C,iBAAiB,WAAW,SAAUC,GAEtC,SAAbA,EAAMC,KACRxC,EAAamC,OAEjB,GAWF","sources":["js/main.js"],"sourcesContent":["// import { Taggy } from \"../taggy-base/lib/main.js\";\n\njQuery(function () {\n  // create instance of taggy\n  // let taggyObject = new Taggy();\n\n  // set input field for taggy\n  let inputFieldForTaggy = document.getElementById(\"taggyInput\");\n  // taggyObject.setInputField(inputFieldForTaggy);\n  // console.log(inputFieldForTaggy);\n\n  // // set output field for taggy\n  let outputFieldForTaggy = document.getElementById(\"taggyOutput\");\n  // taggyObject.setOutputField(outputFieldForTaggy);\n  // console.log(outputFieldForTaggy);\n\n  // set submit button taggy (optional)\n  let submitButton = document.getElementById(\"taggySubmit\");\n\n  // get element for word count output (optional)\n  let frequencySpan = document.getElementById(\"frequency\");\n\n  // get element for override-possibility output (optional)\n  let overrideSpan = document.getElementById(\"override\");\n\n  // get loader element (optional)\n  let loaderDiv = document.getElementById(\"taggyLoader\");\n\n  // create taggy instance\n  let taggyObject = new Taggy(\n    inputFieldForTaggy,\n    outputFieldForTaggy,\n    submitButton,\n    frequencySpan,\n    overrideSpan,\n    loaderDiv\n  );\n\n  // console.log(taggyObject.config);\n\n  let taggyConfig = Object.keys(taggyObject.config);\n  console.log(\"CONFIG\", taggyConfig);\n\n  // create glossar visualization\n  let taggyGlossar = taggyObject.getGlossar();\n  console.log(\"taggyGlossar\", taggyGlossar);\n\n  if (!$.isEmptyObject(taggyGlossar)) {\n    $(\"<div></div>\")\n      .attr(\"id\", \"container-glossar\")\n      .insertAfter(\"#container-input-output\");\n\n    $(\"#container-glossar\").append(\n      $(\"<div></div>\")\n        .attr(\"id\", \"glossar\")\n        .attr(\"class\", \"space-y-2\")\n        .append(\n          $(\"<h3></h3>\").attr(\"class\", \"text-rose-700 text-xl\").text(\"Glossar\")\n        )\n        .append(\n          $(\"<p></p>\")\n            .attr(\"class\", \"text-sm\")\n            .text(\"taggy tags your input based on these trigger words\")\n        )\n    );\n\n    let glossarData = JSON.stringify(taggyGlossar, null, 2); // spacing level = 2\n    $(\"#glossar\").append(\n      $(\"<pre></pre>\")\n        .addClass(\n          \"rounded-md outline outline-offset-1 outline-2 outline-gray-400 text-xs\"\n        )\n        .text(glossarData)\n    );\n\n    // $.each(taggyGlossar, function (index, value) {});\n  }\n\n  // create options visualization\n  $.each(taggyConfig, function (index, value) {\n    let labelText = \" \" + value;\n    let nextElement = $(taggyConfig).eq(index + 1);\n    let commentText = null;\n    if (nextElement[0] && nextElement[0].includes(\"comment\")) {\n      commentText = taggyObject.config[nextElement[0]];\n    }\n\n    if (!value.includes(\"comment\")) {\n      let checkbox = $(\"#container-options\")\n        .append(\n          $(\"<input></input>\")\n            .attr(\"type\", \"checkbox\")\n            .attr(\"id\", value)\n            .val(value)\n        )\n        .append(\n          $(\"<label></label>\").addClass(\"text-sm font-bold\").text(labelText)\n        );\n      if (commentText) {\n        checkbox.append(\n          $(\"<p></p>\").addClass(\"text-justify text-xs\").text(commentText)\n        );\n      }\n      checkbox.append(\"</br>\");\n\n      if (taggyObject.config[value]) {\n        $(\"#\" + value).prop(\"checked\", true);\n      }\n    }\n  });\n\n  $('input[type=\"checkbox\"]').click(function () {\n    if ($(this).prop(\"checked\") == true) {\n      taggyObject.setOption($(this).val(), true);\n    } else {\n      taggyObject.setOption($(this).val(), false);\n    }\n  });\n\n  // trigger submit button on pressing 'enter' inside textfield\n  inputFieldForTaggy.addEventListener(\"keydown\", function (event) {\n    // click listener on button is called\n    if (event.key == \"Enter\") {\n      submitButton.click();\n    }\n  });\n\n  // give every new tag a random color\n  // $('div[type=\"checkbox\"]').click(function () {\n  //   if ($(this).prop(\"checked\") == true) {\n  //     taggyObject.setOption($(this).val(), true);\n  //   } else {\n  //     taggyObject.setOption($(this).val(), false);\n  //   }\n  // });\n\n});\n"],"names":["jQuery","inputFieldForTaggy","document","getElementById","outputFieldForTaggy","submitButton","frequencySpan","overrideSpan","loaderDiv","taggyObject","Taggy","taggyConfig","Object","keys","config","console","log","taggyGlossar","getGlossar","$","isEmptyObject","attr","insertAfter","append","text","glossarData","JSON","stringify","addClass","each","index","value","labelText","nextElement","eq","commentText","includes","checkbox","val","prop","click","this","setOption","addEventListener","event","key"],"version":3,"file":"index.3c387995.js.map"}