{"version":3,"sources":["../taggy-base/taggy/node_modules/emoji-regex/index.js","../taggy-base/taggy/node_modules/wink-tokenizer/src/eng-contractions.js","../taggy-base/taggy/node_modules/wink-tokenizer/src/wink-tokenizer.js","../taggy-base/taggy/node_modules/stopwords-iso/stopwords-iso.json","../taggy-base/taggy/node_modules/normalize-for-search/src/normalize.js","../taggy-base/taggy/node_modules/regenerator-runtime/runtime.js","../taggy-base/taggy/data/glossar.json","../taggy-base/taggy/node_modules/node-fetch/browser.js","../src/index.ts","node_modules/process/browser.js","../taggy-base/taggy/lib/index.js","js/main.js"],"names":["module","exports","af","ar","hy","eu","bn","br","bg","ca","zh","hr","cs","da","nl","en","eo","et","fi","fr","gl","de","el","gu","ha","he","hi","hu","id","ga","it","ja","ko","ku","la","lt","lv","ms","mr","no","fa","pl","pt","ro","ru","sk","sl","so","st","es","sw","sv","th","tl","tr","uk","ur","vi","yo","zu","tags","name","words","getGlobal","self","window","global","Error","fetch","default","bind","Headers","Request","Response","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","__importDefault","taggy","readline","require","wink_tokenizer_1","stopwords_iso_1","normalize_for_search_1","tagify","glossarData","openthesaurus","finalInput","glossarEnriched","processInput","input","winkTokenizer","stopwordsDE","tokenizedItems","tokenize","tokenizedWords","filter","item","tag","tokenizedWordsNoStop","includes","tokenizedValues","element","enrichedInputValues","word","console","log","then","response","baseforms","glossarTags","returnValues","enrichWithOpenThesaurus","inputArray","enrichedArray","taggyVanilla","createTagify","inputElement","Tagify","addTags","taggyCLI","rl","createInterface","stdin","output","stdout","question","close","divWrapper","document","createElement","outputField","appendChild","body","outputFieldForTagify","getElementById","myTaggy","taggyCreate","parent","inputField","setAttribute","addEventListener","event","addedTag"],"mappings":"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AAQ,KAAK,MAAM,OAAO,OAAO,MAAM,MAAM,QAAQ,SAAS,SAAS,QAAQ,UAAU,OAAO,OAAO,KAAK,QAAQ,KAAK,OAAO,QAAQ,SAAS,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,SAAS,QAAQ,OAAO,OAAO,QAAQ,IAAI,QAAQ,MAAM,MAAM,MAAM,OAAO,SAAS,MAAM,QAAQ,QAAQ,SAAS,OAAO,QAAQ,QAAQ,KAAK,OAAO,MAAM,SAAS,QAAQ,MAAM,UAAU,OAAO,QAAQ,SAAS,OAAO,OAAO,SAAS,UAAU,SAAS,OAAO,OAAO,QAAQ,SAAS,MAAM,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,SAAS,SAAS,QAAQ,MAAM,QAAQ,MAAM,OAAO,MAAM,KAAK,QAAQ,QAAQ,MAAM,OAAO,KAAK,MAAM,KAAK,OAAO,OAAO,OAAO,IAAI,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,MAAM,KAAK,MAAM,OAAO,MAAM,KAAK,MAAM,MAAM,QAAQ,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAM,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,MAAM,OAAO,QAAQ,KAAK,OAAO,SAAS,MAAM,MAAM,QAAQ,KAAK,MAAM,OAAO,QAAQ,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,QAAQ,MAAM,MAAM,MAAM,MAAM,KAAK,QAAQ,MAAM,MAAM,QAAQ,MAAM,OAAO,WAAW,SAAS,SAAS,MAAM,OAAO,MAAM,OAAO,KAAK,MAAM,MAAM,OAAO,OAAO,MAAM,OAAO,QAAQ,OAAO,KAAK,MAAM,QAAQ,QAAQ,MAAM,OAAO,SAAS,MAAM,MAAM,MAAM,MAAM,QAAQ,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,MAAM,QAAQ,MAAM,MAAM,QAAQ,WAAW,MAAM,OAAO,MAAM,WAAW,MAAM,OAAO,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,QAAQ,OAAO,KAAK,MAAM,QAAQ,MAAM,MAAM,SAAS,SAAS,MAAM,M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O,OAAO,MAAM,MAAM,OAAO,MAAM,OAAO,QAAQ,SAAS,QAAQ,SAAS,MAAM,QAAQ,KAAK,OAAO,OAAO,OAAO,UAAU,QAAQ,OAAO,SAAS,SAAS,UAAU,YAAY,KAAK,QAAQ,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,KAAK,QAAQ,SAAS,OAAO,QAAQ,WAAW,MAAM,MAAM,OAAO,OAAO,QAAQ,MAAM,QAAQ,OAAO,OAAO,QAAQ,OAAO,SAAS,QAAQ,OAAO,OAAO,QAAQ,OAAO,OAAO,OAAO,KAAK,QAAQ,QAAQ,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,QAAQ,OAAO,OAAO,MAAM,QAAQ,UAAU,WAAW,QAAQ,KAAK,MAAM,OAAO,OAAO,SAAS,UAAU,QAAQ,QAAQ,OAAO,OAAO,MAAM,OAAO,SAAS,MAAM,MAAM,QAAQ,OAAO,MAAM,KAAK,MAAM,OAAO,QAAQ,OAAO,OAAO,QAAQ,UAAU,QAAQ,OAAO,QAAQ,OAAO,MAAM,SAAS,UAAU,QAAQ,KAAK,QAAQ,KAAK,MAAM,OAAO,OAAO,UAAU,SAAS,MAAM,OAAO,OAAO,QAAQ,KAAK,QAAQ,SAAS,QAAQ,QAAQ,UAAU,UAAU,WAAW,SAAS,QAAQ,MAAM,OAAO,MAAM,UAAU,OAAO,KAAK,MAAM,OAAO,MAAM,QAAQ,MAAM,MAAM,SAAS,OAAO,MAAM,MAAM,KAAK,OAAO,MAAM,KAAK,OAAO,UAAU,QAAQ,UAAU,MAAM,OAAO,UAAU,WAAW,OAAO,QAAQ,MAAM,OAAO,WAAW,QAAQ,SAAS,SAAS,MAAM,QAAQ,UAAU,MAAM,QAAQ,MAAM,KAAK,OAAO,SAAS,MAAM,OAAO,KAAK,OAAO,QAAQ,SAAS,UAAU,QAAQ,OAAO,SAAS,OAAO,QAAQ,MAAM,OAAO,OAAO,MAAM,OAAO,OAAO,KAAK,SAAS,OAAO,MAAM,OAAO,IAAI,MAAM,SAAS,OAAO,OAAO,OAAO,OAAO,OAAO,QAAQ,SAAS,KAAK,OAAO,QAAQ,WAAW,KAAK,OAAO,SAAS,QAAQ,KAAK,SAAS,KAAK,MAAM,QAAQ,SAAS,OAAO,QAAQ,QAAQ,OAAO,SAAS,SAAS,OAAO,OAAO,QAAQ,QAAQ,UAAU,SAAS,QAAQ,KAAK,MAAM,OAAO,KAA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M,KAAK,MAAM,KAAK,KAAK,MAAM,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,UAAU,QAAQ,SAAS,QAAQ,SAAS,QAAQ,MAAM,QAAQ,QAAQ,OAAO,OAAO,UAAU,QAAQ,SAAS,QAAQ,SAAS,QAAQ,MAAM,MAAM,MAAM,UAAU,OAAO,OAAO,KAAK,OAAO,OAAO,WAAW,OAAO,UAAU,QAAQ,SAAS,SAAS,SAAS,QAAQ,SAAS,SAAS,QAAQ,QAAQ,OAAO,OAAO,QAAQ,MAAM,OAAO,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,QAAQ,KAAK,QAAQ,OAAO,MAAM,SAAS,KAAK,MAAM,SAAS,QAAQ,WAAW,OAAO,SAAS,MAAM,OAAO,OAAO,QAAQ,SAAS,UAAU,QAAQ,SAAS,OAAO,SAAS,WAAW,OAAO,UAAU,UAAU,OAAO,YAAY,OAAO,UAAU,UAAU,YAAY,QAAQ,QAAQ,UAAU,KAAK,KAAK,OAAO,QAAQ,MAAM,MAAM,eAAe,OAAO,QAAQ,OAAO,KAAK,SAAS,OAAO,UAAU,OAAO,UAAU,OAAO,OAAO,SAAS,KAAK,MAAM,MAAM,MAAM,OAAO,SAAS,OAAO,SAAS,QAAQ,QAAQ,MAAM,WAAW,QAAQ,YAAY,MAAM,QAAQ,UAAU,WAAW,MAAM,SAAS,WAAW,SAAS,MAAM,WAAW,QAAQ,QAAQ,SAAS,KAAK,MAAM,KAAK,QAAQ,OAAO,SAAS,KAAK,KAAK,OAAO,SAAS,SAAS,QAAQ,WAAW,KAAK,OAAO,KAAK,KAAK,KAAK,OAAO,MAAM,OAAO,MAAM,OAAO,UAAU,QAAQ,SAAS,QAAQ,SAAS,QAAQ,OAAO,OAAO,MAAM,QAAQ,QAAQ,OAAO,UAAU,QAAQ,SAAS,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,SAAS,KAAK,QAAQ,UAAU,OAAO,UAAU,QAAQ,SAAS,QAAQ,SAAS,QAAQ,QAAQ,OAAO,MAAM,OAAO,OAAO,OAAO,WAAW,WAAW,OAAO,QAAQ,KAAK,MAAM,MAAM,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,UAAU,SAAS,SAAS,SAAS,KAAK,SAAS,MAAM,SAAS,QAAQ,QAAQ,WAAW,UAAU,SAAS,SAAS,UAAU,OAAO,OAAO,SAAS,OAAO,KAAK,MAA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KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,SAAS,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,OAAO,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,MAAM,OAAO,KAAK,IAAI,OAAO,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,MAAM,KAAK,KAAK,IAAI,KAAK,OAAO,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,OAAO,OAAO,OAAO,OAAO,OAAO,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,OAAO,MAAM,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,KAAK,OAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI,MAAM,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,IAAI,MAAM,KAAK,KAAK,MAAM,MAAM,OAAO,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,MAAM,MAAM,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,GAAG,CAAC,IAAI,MAAM,MAAM,KAAK,MAAM,OAAO,OAAO,OAAO,MAAM,QAAQ,QAAQ,OAAO,OAAO,KAAK,KAAK,MAAM,KAAK,OAAO,SAAS,SAAS,QAAQ,OAAO,IAAI,OAAO,KAAK,MAAM,KAAK,KAAK,KAAK,QAAQ,QAAQ,QAAQ,MAAM,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO,MAAM,MAAM,MAAM,KAAK,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,SAAS,OAAO,OAAO,KAAK,KAAK,OAAO,OAAO,KAAK,OAAO,MAAM,OAAO,OAAO,KAAK,KAAK,MAAM,QAAQ,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,QAAQ,KAAK,OAAO,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAQ,OAAO,SAAS,SAAS,QAAQ,OAAO,QAAQ,KAAK,OAAO,SAAS,SAAS,SAAS,QAAQ,OAAO,QAAQ,QAAQ,OAAO,QAAQ,SAAS,UAAU,UAAU,QAAQ,SAAS,UAAU,UAAU,OAAO,SAAS,UAAU,UAAU,OAAO,QAAQ,OAAO,MAAM,KAAK,IAAI,KAAK,QAAQ,KAAK,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM,QAAQ,QAAQ,IAAI,KAAK,MAAM,OAAO,KAAK,OAAO,OAAO,KAAK,MAAM,MAAM,KAAK,MAAM,MAAM,OAAO,OAAO,QAAQ,QAAQ,OAAO,KAAK,OAAO,MAAM,OAAO,KAAK,OAAO,OAAO,KAAK,KAAK,MAAM,OAAO,KAAK,OAAO,QAAQ,QAAQ,IAAI,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,KAAK,OAAO,KAAK,MAAM,KAAK,OAAO,OAAO,MAAM,KAAK,OAAOC,GAAG,CAAC,IAAI,MAAM,OAAO,KAAK,MAAM,QAAQ,MAAM,OAAO,MAAM,MAAM,QAAQ,MAAM,MAAM,KAAK,SAAS,KAAK,MAAM,OAAO,SAAS,UAAU,OAAO,OAAO,QAAQ,SAAS,QAAQ,SAAS,QAAQ,QAAQ,OAAO,KAAK,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,QAAQ,OAAO,SAAS,SAAS,QAAQ,OAAO,QAAQ,SAAS,QAAQ,QAAQ,KAAK,SAAS,SAAS,SAAS,KAAK,MAAM,MAAM,KAAK,SAAS,QAAQ,QAAQ,MAAM,QAAQ,SAAS,aAAa,QAAQ,OAAO,KAAK,QAAQ,SAAS,MAAM,SAAS,UAAU,MAAM,MAAM,OAAO,UAAU,WAAW,SAAS,QAAQ,KAAK,QAAQ,IAAI,MAAM,UAAU,OAAO,QAAQ,MAAM,KAAK,QAAQ,WAAW,QAAQ,QAAQ,SAAS,QAAQ,OAAO,QAAQ,MAAM,OAAO,SAAS,OAAO,UAAU,OAAO,MAAM,QAAQ,OAAO,QAAQ,SAAS,WAAW,QAAQ,MAAM,KAAK,OAAO,OAAO,QAAQ,OAAO,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,KAAK,KAAK,MAAM,MAAM,OAAO,IAAI,MAAM,QAAQ,MAAM,MAAM,MAAM,OAAO,OAAO,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,KAAK,QAAQ,KAAK,OAAO,OAAO,KAAK,OAAO,KAAK,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,QAAQ,OAAO,OAAO,QAAQ,MAAM,OAAO,OAAO,KAAK,KAAK,OAAO,MAAM,OAAO,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM,OAAO,KAAK,MAAM,OAAO,MAAM,UAAU,UAAU,UAAU,MAAM,OAAO,QAAQ,OAAO,OAAO,KAAK,OAAO,QAAQ,SAAS,SAAS,SAAS,QAAQ,WAAW,SAAS,UAAU,WAAW,WAAW,UAAU,MAAM,QAAQ,SAAS,SAAS,SAAS,SAAS,QAAQ,OAAO,OAAO,UAAU,SAAS,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK,MAAM,OAAO,MAAM,MAAM,KAAK,MAAM,KAAK,OAAO,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,IAAI,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,UAAU,MAAM,UAAU,KAAK,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,OAAO,MAAM,MAAM,OAAO,SAAS,SAAS,QAAQ,QAAQ,UAAU,UAAU,OAAO,QAAQ,QAAQ,QAAQ,MAAM,MAAM,OAAO,QAAQ,OAAO,QAAQ,MAAM,UAAU,KAAK,QAAQ,IAAI,KAAK,OAAO,WAAW,KAAK,OAAO,QAAQ,MAAM,QAAQ,OAAO,QAAQ,MAAM,MAAM,SAAS,MAAM,MAAM,QAAQ,OAAO,QAAQ,MAAM,QAAQ,OAAO,QAAQ,OAAO,KAAK,OAAO,MAAM,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,MAAM,SAAS,WAAW,QAAQ,OAAO,KAAK,OAAO,QAAQ,OAAO,OAAO,OAAO,MAAM,QAAQ,OAAO,KAAK,MAAM,QAAQ,OAAO,QAAQ,SAAS,KAAK,OAAO,QAAQ,OAAO,SAAS,MAAM,QAAQ,OAAO,SAAS,OAAO,SAAS,KAAK,OAAO,QAAQ,MAAM,MAAM,OAAO,KAAK,OAAO,OAAO,OAAO,MAAM,QAAQ,KAAK,MAAM,OAAO,OAAO,QAAQ,MAA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O,SAAS,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAQ,QAAQ,MAAM,OAAO,OAAO,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,SAAS,SAAS,QAAQ,QAAQ,OAAO,QAAQ,KAAK,SAAS,UAAU,OAAO,OAAO,QAAQ,SAAS,KAAK,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,KAAK,SAAS,MAAM,OAAO,QAAQ,OAAO,SAAS,QAAQ,MAAM,QAAQ,OAAO,SAAS,QAAQ,KAAK,OAAO,OAAO,QAAQ,MAAM,OAAO,OAAO,MAAM,OAAO,KAAK,MAAM,MAAM,SAAS,SAAS,MAAM,MAAM,OAAO,OAAO,OAAO,QAAQ,QAAQ,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,QAAQ,OAAO,SAAS,UAAU,OAAO,QAAQ,UAAU,QAAQ,OAAO,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,KAAK,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,QAAQ,OAAO,KAAK,aAAa,MAAM,QAAQ,MAAM,MAAM,OAAO,QAAQ,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,SAAS,MAAM,OAAO,OAAO,MAAM,KAAK,KAAK,QAAQ,MAAM,OAAO,QAAQ,OAAO,OAAO,QAAQ,MAAM,OAAO,QAAQ,SAAS,QAAQ,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,QAAQ,OAAO,MAAM,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO,KAAK,QAAQ,OAAO,QAAQ,KAAK,MAAM,QAAQ,SAAS,QAAQ,WAAW,UAAU,MAAM,OAAO,OAAO,QAAQ,QAAQ,SAAS,QAAQ,OAAO,MAAM,QAAQ,OAAO,OAAO,UAAU,QAAQ,SAAS,SAAS,QAAQ,OAAO,KAAK,QAAQ,OAAO,QAAQ,KAAK,UAAU,SAAS,MAAM,KAAK,SAAS,OAAO,SAAS,SAAS,SAAS,UAAU,OAAO,MAAM,QAAQ,SAAS,UAAU,QAAQ,QAAQ,OAAO,OAAO,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,UAAU,QAA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S,SAAS,SAAS,KAAK,OAAO,OAAO,QAAQ,OAAO,MAAM,KAAK,SAAS,MAAM,IAAI,KAAK,OAAO,QAAQ,OAAO,IAAI,KAAK,MAAM,OAAO,QAAQ,OAAO,SAAS,SAAS,SAAS,MAAM,QAAQ,OAAO,KAAK,MAAM,OAAO,MAAM,WAAW,MAAM,OAAO,QAAQ,OAAO,QAAQ,KAAK,QAAQ,OAAO,OAAO,SAAS,MAAM,OAAO,OAAO,SAAS,OAAO,SAAS,UAAU,SAAS,KAAK,MAAM,MAAM,QAAQ,SAAS,SAAS,OAAO,MAAM,OAAO,QAAQ,OAAO,OAAO,MAAM,OAAO,QAAQ,OAAO,KAAK,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,IAAI,KAAK,OAAO,OAAO,MAAM,MAAM,WAAW,OAAO,MAAM,KAAK,WAAW,OAAO,QAAQ,UAAU,OAAO,WAAW,UAAU,OAAO,SAAS,OAAO,MAAM,YAAY,QAAQ,SAAS,SAAS,OAAO,MAAM,SAAS,OAAO,QAAQ,OAAO,OAAO,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,MAAM,OAAO,OAAO,KAAK,QAAQ,OAAO,IAAI,OAAO,OAAO,OAAO,MAAM,KAAK,MAAM,UAAU,MAAM,MAAM,MAAM,OAAO,SAAS,OAAO,SAAS,OAAO,IAAI,QAAQ,SAAS,IAAI,QAAQ,IAAI,KAAK,MAAM,OAAO,KAAK,KAAK,MAAM,KAAK,UAAU,SAAS,OAAO,QAAQ,OAAO,OAAO,QAAQ,MAAM,MAAM,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,MAAM,MAAM,QAAQ,QAAQ,IAAI,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO,QAAQ,MAAM,KAAK,MAAM,OAAO,MAAM,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,YAAY,QAAQ,QAAQ,KAAK,IAAI,KAAK,SAAS,KAAK,OAAO,YAAY,WAAW,SAAS,SAAS,QAAQ,QAAQ,QAAQ,UAAU,UAAU,MAAM,QAAQ,SAAS,SAAS,MAAM,OAAO,OAAO,SAAS,KAAK,QAAQ,IAAI,MAAM,KAAK,MAAM,UAAU,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,IAAI,MAAM,QAAQ,QAAQ,QAAQ,WAAW,KAAK,SAAS,QAAQ,MAAM,OAAO,OAAO,QAAQ,MAAM,OAA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AAO,KAAK,OAAO,QAAQ,OAAO,OAAO,MAAM,QAAQ,QAAQ,OAAO,SAAS,KAAK,QAAQ,OAAO,OAAO,UAAU,OAAO,KAAK,OAAO,QAAQ,SAAS,WAAW,KAAK,MAAM,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,UAAU,SAAS,SAAS,SAAS,QAAQ,SAAS,SAAS,KAAK,MAAM,OAAO,OAAO,OAAO,MAAM,OAAO,QAAQ,SAAS,QAAQ,SAAS,KAAK,IAAI,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,MAAM,MAAM,OAAO,QAAQ,WAAW,QAAQ,QAAQ,OAAO,OAAO,MAAM,MAAM,MAAM,IAAI,OAAO,OAAO,MAAM,QAAQ,QAAQ,OAAO,MAAM,MAAM,QAAQ,SAAS,QAAQ,MAAM,QAAQ,QAAQ,MAAM,OAAO,MAAM,OAAO,UAAU,SAAS,SAAS,IAAI,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,QAAQ,KAAK,OAAO,QAAQ,QAAQ,QAAQ,MAAM,OAAO,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,OAAO,QAAQ,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,KAAK,MAAM,OAAO,SAAS,QAAQ,QAAQ,MAAM,QAAQ,OAAO,IAAI,MAAM,OAAO,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,OAAO,MAAM,KAAK,OAAO,SAAS,KAAK,MAAM,KAAK,IAAI,MAAM,QAAQ,MAAM,MAAM,KAAK,QAAQ,KAAK,OAAO,OAAO,OAAO,QAAQ,OAAO,MAAM,QAAQ,QAAQ,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,MAAM,KAAK,MAAM,OAAO,MAAM,KAAK,IAAI,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,SAAS,OAAO,QAAQ,QAAQ,MAAM,OAAO,SAAS,QAAQ,QAAQ,MAAM,OAAO,MAAM,OAAO,MAAM,SAAS,OAAO,OAAO,OAAO,MAAM,IAAI,MAAM,OAAO,KAAK,MAAM,MAAM,KAAK,SAAS,SAAS,OAAO,OAAO,KAAK,SAAS,SAAS,OAAO,KAAK,OAAO,MAAM,KAAK,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,KAAK,QAAQ,OAAO,KAAK,OAAO,QAAQ,SAAS,SAAS,SAAS,QAAQ,SAAS,S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","file":"main.6491e009.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|(?:\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C\\uDFFB(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))?|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC)?|(?:\\uD83D\\uDC69(?:\\uD83C\\uDFFB\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83E\\uDDD1(?:\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83D\\uDC3B\\u200D\\u2744|(?:(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])\\u200D[\\u2640\\u2642]|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u2600-\\u2604\\u260E\\u2611\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26B0\\u26B1\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0\\u26F1\\u26F4\\u26F7\\u26F8\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]|\\uD83D[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3])\\uFE0F|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB|\\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83D\\uDC69(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79)|\\uD83D\\uDC41\\uFE0F|\\uD83C\\uDFF3\\uFE0F|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|\\u2764\\uFE0F|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDFF4|(?:[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270C\\u270D]|\\uD83D[\\uDD74\\uDD90])(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC08\\uDC15\\uDC3B\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE2E\\uDE35\\uDE36\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5]|\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD]|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF]|[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD1D\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78\\uDD7A-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCB\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6]|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","//     wink-tokenizer\n//     Multilingual tokenizer that automatically tags each token with its type.\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-tokenizer”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\nvar contractions = Object.create( null );\n\n// Tag - word.\nvar word = 'word';\n// Verbs.\ncontractions[ 'can\\'t' ] = [ { value: 'ca', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'CAN\\'T' ] = [ { value: 'CA', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Can\\'t' ] = [ { value: 'Ca', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'Couldn\\'t' ] = [ { value: 'could', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'COULDN\\'T' ] = [ { value: 'COULD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Couldn\\'t' ] = [ { value: 'Could', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'don\\'t' ] = [ { value: 'do', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DON\\'T' ] = [ { value: 'DO', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Don\\'t' ] = [ { value: 'Do', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'doesn\\'t' ] = [ { value: 'does', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DOESN\\'T' ] = [ { value: 'DOES', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Doesn\\'t' ] = [ { value: 'Does', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'didn\\'t' ] = [ { value: 'did', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DIDN\\'T' ] = [ { value: 'DID', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Didn\\'t' ] = [ { value: 'Did', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'hadn\\'t' ] = [ { value: 'had', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'HADN\\'T' ] = [ { value: 'HAD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Hadn\\'t' ] = [ { value: 'Had', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'mayn\\'t' ] = [ { value: 'may', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'MAYN\\'T' ] = [ { value: 'MAY', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Mayn\\'t' ] = [ { value: 'May', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'mightn\\'t' ] = [ { value: 'might', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'MIGHTN\\'T' ] = [ { value: 'MIGHT', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Mightn\\'t' ] = [ { value: 'Might', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'mustn\\'t' ] = [ { value: 'must', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'MUSTN\\'T' ] = [ { value: 'MUST', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Mustn\\'t' ] = [ { value: 'Must', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'needn\\'t' ] = [ { value: 'need', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'NEEDN\\'T' ] = [ { value: 'NEED', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Needn\\'t' ] = [ { value: 'Need', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'oughtn\\'t' ] = [ { value: 'ought', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'OUGHTN\\'T' ] = [ { value: 'OUGHT', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Oughtn\\'t' ] = [ { value: 'Ought', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'shan\\'t' ] = [ { value: 'sha', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'SHAN\\'T' ] = [ { value: 'SHA', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Shan\\'t' ] = [ { value: 'Sha', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'shouldn\\'t' ] = [ { value: 'should', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'SHOULDN\\'T' ] = [ { value: 'SHOULD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Shouldn\\'t' ] = [ { value: 'Should', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'won\\'t' ] = [ { value: 'wo', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WON\\'T' ] = [ { value: 'WO', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Won\\'t' ] = [ { value: 'Wo', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'wouldn\\'t' ] = [ { value: 'would', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WOULDN\\'T' ] = [ { value: 'WOULD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Wouldn\\'t' ] = [ { value: 'Would', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'ain\\'t' ] = [ { value: 'ai', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'AIN\\'T' ] = [ { value: 'AI', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Ain\\'t' ] = [ { value: 'Ai', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'aren\\'t' ] = [ { value: 'are', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'AREN\\'T' ] = [ { value: 'ARE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Aren\\'t' ] = [ { value: 'Are', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'isn\\'t' ] = [ { value: 'is', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'ISN\\'T' ] = [ { value: 'IS', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Isn\\'t' ] = [ { value: 'Is', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'wasn\\'t' ] = [ { value: 'was', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WASN\\'T' ] = [ { value: 'WAS', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Wasn\\'t' ] = [ { value: 'Was', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'weren\\'t' ] = [ { value: 'were', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WEREN\\'T' ] = [ { value: 'WERE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Weren\\'t' ] = [ { value: 'Were', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'haven\\'t' ] = [ { value: 'have', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'HAVEN\\'T' ] = [ { value: 'HAVE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Haven\\'t' ] = [ { value: 'Have', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'hasn\\'t' ] = [ { value: 'has', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'HASN\\'T' ] = [ { value: 'HAS', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Hasn\\'t' ] = [ { value: 'Has', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'daren\\'t' ] = [ { value: 'dare', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DAREN\\'T' ] = [ { value: 'DARE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Daren\\'t' ] = [ { value: 'Dare', tag: word }, { value: 'n\\'t', tag: word } ];\n\n\n// Pronouns like I, you, they, we, she, and he.\ncontractions[ 'i\\'m' ] = [ { value: 'i', tag: word }, { value: '\\'m', tag: word } ];\ncontractions[ 'I\\'M' ] = [ { value: 'I', tag: word }, { value: '\\'M', tag: word } ];\ncontractions[ 'I\\'m' ] = [ { value: 'I', tag: word }, { value: '\\'m', tag: word } ];\n\ncontractions[ 'i\\'ve' ] = [ { value: 'i', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'I\\'VE' ] = [ { value: 'I', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'I\\'ve' ] = [ { value: 'I', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'i\\'d' ] = [ { value: 'i', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'I\\'D' ] = [ { value: 'I', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'I\\'d' ] = [ { value: 'I', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'i\\'ll' ] = [ { value: 'i', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'I\\'LL' ] = [ { value: 'I', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'I\\'ll' ] = [ { value: 'I', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'you\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'d' ] = [ { value: 'you', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'YOU\\'D' ] = [ { value: 'YOU', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'You\\'d' ] = [ { value: 'You', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'you\\'ll' ] = [ { value: 'you', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'YOU\\'LL' ] = [ { value: 'YOU', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'You\\'ll' ] = [ { value: 'You', tag: word }, { value: '\\'ll', tag: word } ];\n\n// they - 've, 'd, 'll, 're\ncontractions[ 'they\\'ve' ] = [ { value: 'they', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THEY\\'VE' ] = [ { value: 'THEY', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'They\\'ve' ] = [ { value: 'They', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'they\\'d' ] = [ { value: 'they', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'THEY\\'D' ] = [ { value: 'THEY', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'They\\'d' ] = [ { value: 'They', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'they\\'ll' ] = [ { value: 'they', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'THEY\\'LL' ] = [ { value: 'THEY', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'They\\'ll' ] = [ { value: 'They', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'they\\'re' ] = [ { value: 'they', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'THEY\\'RE' ] = [ { value: 'THEY', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'They\\'re' ] = [ { value: 'They', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'we\\'ve' ] = [ { value: 'we', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WE\\'VE' ] = [ { value: 'WE', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'We\\'ve' ] = [ { value: 'We', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'we\\'d' ] = [ { value: 'we', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WE\\'D' ] = [ { value: 'WE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'We\\'d' ] = [ { value: 'We', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'we\\'ll' ] = [ { value: 'we', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WE\\'LL' ] = [ { value: 'WE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'We\\'ll' ] = [ { value: 'We', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'we\\'re' ] = [ { value: 'we', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WE\\'RE' ] = [ { value: 'WE', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'We\\'re' ] = [ { value: 'We', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'she\\'d' ] = [ { value: 'she', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'SHE\\'D' ] = [ { value: 'SHE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'She\\'d' ] = [ { value: 'She', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'she\\'ll' ] = [ { value: 'she', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'SHE\\'LL' ] = [ { value: 'SHE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'She\\'ll' ] = [ { value: 'She', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'she\\'s' ] = [ { value: 'she', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'SHE\\'S' ] = [ { value: 'SHE', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'She\\'s' ] = [ { value: 'She', tag: word }, { value: '\\'s', tag: word } ];\n\ncontractions[ 'he\\'d' ] = [ { value: 'he', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'HE\\'D' ] = [ { value: 'HE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'He\\'d' ] = [ { value: 'He', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'he\\'ll' ] = [ { value: 'he', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'HE\\'LL' ] = [ { value: 'HE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'He\\'ll' ] = [ { value: 'He', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'he\\'s' ] = [ { value: 'he', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'HE\\'S' ] = [ { value: 'HE', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'He\\'s' ] = [ { value: 'He', tag: word }, { value: '\\'s', tag: word } ];\n\ncontractions[ 'it\\'d' ] = [ { value: 'it', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'IT\\'D' ] = [ { value: 'IT', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'It\\'d' ] = [ { value: 'It', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'it\\'ll' ] = [ { value: 'it', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'IT\\'LL' ] = [ { value: 'IT', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'It\\'ll' ] = [ { value: 'It', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'it\\'s' ] = [ { value: 'it', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'IT\\'S' ] = [ { value: 'IT', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'It\\'s' ] = [ { value: 'It', tag: word }, { value: '\\'s', tag: word } ];\n\n// Wh Pronouns - what, who, when, where, why, how, there, that\ncontractions[ 'what\\'ve' ] = [ { value: 'what', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHAT\\'VE' ] = [ { value: 'WHAT', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'What\\'ve' ] = [ { value: 'What', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'what\\'d' ] = [ { value: 'what', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHAT\\'D' ] = [ { value: 'WHAT', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'What\\'d' ] = [ { value: 'What', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'what\\'ll' ] = [ { value: 'what', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHAT\\'LL' ] = [ { value: 'WHAT', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'What\\'ll' ] = [ { value: 'What', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'what\\'re' ] = [ { value: 'what', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHAT\\'RE' ] = [ { value: 'WHAT', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'What\\'re' ] = [ { value: 'What', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'who\\'ve' ] = [ { value: 'who', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHO\\'VE' ] = [ { value: 'WHO', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Who\\'ve' ] = [ { value: 'Who', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'who\\'d' ] = [ { value: 'who', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHO\\'D' ] = [ { value: 'WHO', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'Who\\'d' ] = [ { value: 'Who', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'who\\'ll' ] = [ { value: 'who', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHO\\'LL' ] = [ { value: 'WHO', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'Who\\'ll' ] = [ { value: 'Who', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'who\\'re' ] = [ { value: 'who', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHO\\'RE' ] = [ { value: 'WHO', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'Who\\'re' ] = [ { value: 'Who', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'when\\'ve' ] = [ { value: 'when', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHEN\\'VE' ] = [ { value: 'WHEN', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'When\\'ve' ] = [ { value: 'When', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'when\\'d' ] = [ { value: 'when', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHEN\\'D' ] = [ { value: 'WHEN', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'When\\'d' ] = [ { value: 'When', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'when\\'ll' ] = [ { value: 'when', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHEN\\'LL' ] = [ { value: 'WHEN', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'When\\'ll' ] = [ { value: 'When', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'when\\'re' ] = [ { value: 'when', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHEN\\'RE' ] = [ { value: 'WHEN', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'When\\'re' ] = [ { value: 'When', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'where\\'ve' ] = [ { value: 'where', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHERE\\'VE' ] = [ { value: 'WHERE', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Where\\'ve' ] = [ { value: 'Where', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'where\\'d' ] = [ { value: 'where', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHERE\\'D' ] = [ { value: 'WHERE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'Where\\'d' ] = [ { value: 'Where', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'where\\'ll' ] = [ { value: 'where', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHERE\\'LL' ] = [ { value: 'WHERE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'Where\\'ll' ] = [ { value: 'Where', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'where\\'re' ] = [ { value: 'where', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHERE\\'RE' ] = [ { value: 'WHERE', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'Where\\'re' ] = [ { value: 'Where', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'why\\'ve' ] = [ { value: 'why', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHY\\'VE' ] = [ { value: 'WHY', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Why\\'ve' ] = [ { value: 'Why', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'why\\'d' ] = [ { value: 'why', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHY\\'D' ] = [ { value: 'WHY', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'Why\\'d' ] = [ { value: 'Why', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'why\\'ll' ] = [ { value: 'why', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHY\\'LL' ] = [ { value: 'WHY', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'Why\\'ll' ] = [ { value: 'Why', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'why\\'re' ] = [ { value: 'why', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHY\\'RE' ] = [ { value: 'WHY', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'Why\\'re' ] = [ { value: 'Why', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'how\\'ve' ] = [ { value: 'how', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'HOW\\'VE' ] = [ { value: 'HOW', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'How\\'ve' ] = [ { value: 'How', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'how\\'d' ] = [ { value: 'how', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'HOW\\'D' ] = [ { value: 'HOW', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'How\\'d' ] = [ { value: 'How', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'how\\'ll' ] = [ { value: 'how', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'HOW\\'LL' ] = [ { value: 'HOW', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'How\\'ll' ] = [ { value: 'How', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'how\\'re' ] = [ { value: 'how', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'HOW\\'RE' ] = [ { value: 'HOW', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'How\\'re' ] = [ { value: 'How', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'there\\'ve' ] = [ { value: 'there', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THERE\\'VE' ] = [ { value: 'THERE', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'There\\'ve' ] = [ { value: 'There', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'there\\'d' ] = [ { value: 'there', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'THERE\\'D' ] = [ { value: 'THERE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'There\\'d' ] = [ { value: 'There', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'there\\'ll' ] = [ { value: 'there', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'THERE\\'LL' ] = [ { value: 'THERE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'There\\'ll' ] = [ { value: 'There', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'there\\'re' ] = [ { value: 'there', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'THERE\\'RE' ] = [ { value: 'THERE', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'There\\'re' ] = [ { value: 'There', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'that\\'ve' ] = [ { value: 'that', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THAT\\'VE' ] = [ { value: 'THAT', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'That\\'ve' ] = [ { value: 'That', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'that\\'d' ] = [ { value: 'that', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'THAT\\'D' ] = [ { value: 'THAT', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'That\\'d' ] = [ { value: 'That', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'that\\'ll' ] = [ { value: 'that', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'THAT\\'LL' ] = [ { value: 'THAT', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'That\\'ll' ] = [ { value: 'That', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'that\\'re' ] = [ { value: 'that', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'THAT\\'RE' ] = [ { value: 'THAT', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'That\\'re' ] = [ { value: 'That', tag: word }, { value: '\\'re', tag: word } ];\n\n// Let us!\ncontractions[ 'let\\'s' ] = [ { value: 'let', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'LET\\'S' ] = [ { value: 'THAT', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'Let\\'s' ] = [ { value: 'Let', tag: word }, { value: '\\'s', tag: word } ];\n\ncontractions[ 'could\\'ve' ] = [ { value: 'could', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'COULD\\'VE' ] = [ { value: 'COULD', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Could\\'ve' ] = [ { value: 'Could', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'should\\'ve' ] = [ { value: 'should', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHOULD\\'VE' ] = [ { value: 'SHOULD', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Should\\'ve' ] = [ { value: 'Should', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'would\\'ve' ] = [ { value: 'would', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WOULD\\'VE' ] = [ { value: 'WOULD', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Would\\'ve' ] = [ { value: 'Would', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'i\\'ll\\'ve' ] = [ { value: 'i', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'I\\'LL\\'VE' ] = [ { value: 'I', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'I\\'ll\\'ve' ] = [ { value: 'I', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'ll\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'LL\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'ll\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'they\\'ll\\'ve' ] = [ { value: 'they', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THEY\\'LL\\'VE' ] = [ { value: 'THEY', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'They\\'ll\\'ve' ] = [ { value: 'They', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'it\\'ll\\'ve' ] = [ { value: 'it', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'IT\\'LL\\'VE' ] = [ { value: 'IT', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'It\\'ll\\'ve' ] = [ { value: 'It', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'he\\'ll\\'ve' ] = [ { value: 'he', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'HE\\'LL\\'VE' ] = [ { value: 'HE', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'He\\'ll\\'ve' ] = [ { value: 'He', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'she\\'ll\\'ve' ] = [ { value: 'she', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHE\\'LL\\'VE' ] = [ { value: 'SHE', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'She\\'ll\\'ve' ] = [ { value: 'She', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'shouldn\\'t\\'ve' ] = [ { value: 'should', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHOULDN\\'T\\'VE' ] = [ { value: 'SHOULD', tag: word }, { value: 'N\\'T', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Shouldn\\'t\\'ve' ] = [ { value: 'Should', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'couldn\\'t\\'ve' ] = [ { value: 'could', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'COULDN\\'T\\'VE' ] = [ { value: 'COULD', tag: word }, { value: 'N\\'T', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Couldn\\'t\\'ve' ] = [ { value: 'Could', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'wouldn\\'t\\'ve' ] = [ { value: 'would', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WOULDN\\'T\\'VE' ] = [ { value: 'WOULD', tag: word }, { value: 'N\\'T', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Wouldn\\'t\\'ve' ] = [ { value: 'Would', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'i\\'d\\'ve' ] = [ { value: 'i', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'I\\'D\\'VE' ] = [ { value: 'I', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'I\\'d\\'ve' ] = [ { value: 'I', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'d\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'D\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'d\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'he\\'d\\'ve' ] = [ { value: 'he', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'HE\\'D\\'VE' ] = [ { value: 'HE', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'He\\'d\\'ve' ] = [ { value: 'He', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'she\\'d\\'ve' ] = [ { value: 'she', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHE\\'D\\'VE' ] = [ { value: 'SHE', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'She\\'d\\'ve' ] = [ { value: 'She', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'d\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'D\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'d\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'they\\'d\\'ve' ] = [ { value: 'they', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THEY\\'D\\'VE' ] = [ { value: 'THEY', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'They\\'d\\'ve' ] = [ { value: 'They', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'there\\'d\\'ve' ] = [ { value: 'there', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THERE\\'D\\'VE' ] = [ { value: 'THERE', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'There\\'d\\'ve' ] = [ { value: 'There', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'it\\'d\\'ve' ] = [ { value: 'it', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'IT\\'D\\'VE' ] = [ { value: 'IT', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'It\\'d\\'ve' ] = [ { value: 'It', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\nmodule.exports = contractions;\n","//     wink-tokenizer\n//     Multilingual tokenizer that automatically tags each token with its type.\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-tokenizer”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar emojiRegex = require( 'emoji-regex' );\nvar contractions = require( './eng-contractions.js' );\nvar rgxSpaces = /\\s+/g;\n// Ordinals only for Latin like 1st, 2nd or 12th or 33rd.\nvar rgxOrdinalL1 = /1\\dth|[04-9]th|1st|2nd|3rd|[02-9]1st|[02-9]2nd|[02-9]3rd|[02-9][04-9]th|\\d+\\d[04-9]th|\\d+\\d1st|\\d+\\d2nd|\\d+\\d3rd/g;\n// Apart from detecting pure integers or decimals, also detect numbers containing\n// `. - / ,` so that dates, ip address, fractions and things like codes or part\n// numbers are also detected as numbers only. These regex will therefore detected\n// 8.8.8.8 or 12-12-1924 or 1,1,1,1.00 or 1/4 or 1/4/66/777 as numbers.\n// Latin-1 Numbers.\nvar rgxNumberL1 = /\\d+\\/\\d+|\\d(?:[\\.,-\\/]?\\d)*(?:\\.\\d+)?/g;\n// Devanagari Numbers.\nvar rgxNumberDV = /[\\u0966-\\u096F]+\\/[\\u0966-\\u096F]+|[\\u0966-\\u096F](?:[\\.,-\\/]?[\\u0966-\\u096F])*(?:\\.[\\u0966-\\u096F]+)?/g;\nvar rgxMention = /@\\w+/g;\n// Latin-1 Hashtags.\n// Include entire Latin-1 script and not just English alphas.\nvar rgxHashtagL1 = /#[a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF_][a-z0-9\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF_]*/gi;\n// Devanagari Hashtags\nvar rgxHashtagDV = /#[\\u0900-\\u0963\\u0970-\\u097F_][\\u0900-\\u0963\\u0970-\\u097F\\u0966-\\u096F0-9_]*/gi;\n// EMail is EN character set.\nvar rgxEmail = /[-!#$%&'*+\\/=?^\\w{|}~](?:\\.?[-!#$%&'*+\\/=?^\\w`{|}~])*@[a-z0-9](?:-?\\.?[a-z0-9])*(?:\\.[a-z](?:-?[a-z0-9])*)+/gi;\n// Bitcoin, Ruble, Indian Rupee, Other Rupee, Dollar, Pound, Yen, Euro, Wong.\nvar rgxCurrency = /[₿₽₹₨$£¥€₩]/g;\n// These include both the punctuations: Latin-1 & Devanagari.\nvar rgxPunctuation = /[’'‘’`“”\"\\[\\]\\(\\){}…,\\.!;\\?\\-:\\u0964\\u0965]/g;\nvar rgxQuotedPhrase = /\"[^\"]*\"/g;\n// NOTE: URL will support only EN character set for now.\nvar rgxURL = /(?:https?:\\/\\/)(?:[\\da-z\\.-]+)\\.(?:[a-z\\.]{2,6})(?:[\\/\\w\\.\\-\\?#=]*)*\\/?/gi;\nvar rgxEmoji = emojiRegex();\nvar rgxEmoticon = /:-?[dps\\*\\/\\[\\]{}\\(\\)]|;-?[/(/)d]|<3/gi;\nvar rgxTime = /(?:\\d|[01]\\d|2[0-3]):?(?:[0-5][0-9])?\\s?(?:[ap]\\.?m\\.?|hours|hrs)/gi;\n// Inlcude [Latin-1 Supplement Unicode Block](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block))\nvar rgxWordL1 = /[a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF][a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF']*/gi;\n// Define [Devanagari Unicode Block](https://unicode.org/charts/PDF/U0900.pdf)\nvar rgxWordDV = /[\\u0900-\\u094F\\u0951-\\u0963\\u0970-\\u097F]+/gi;\n// Symbols go here; including Om.\nvar rgxSymbol = /[\\u0950~@#%\\^\\+=\\*\\|\\/<>&]/g;\n// For detecting if the word is a potential contraction.\nvar rgxContraction = /'/;\n// Singular & Plural possessive\nvar rgxPosSingular = /([a-z]+)('s)$/i;\nvar rgxPosPlural = /([a-z]+s)(')$/i;\n// Regexes and their categories; used for tokenizing via match/split. The\n// sequence is *critical* for correct tokenization.\nvar rgxsMaster = [\n  { regex: rgxQuotedPhrase, category: 'quoted_phrase' },\n  { regex: rgxURL, category: 'url' },\n  { regex: rgxEmail, category: 'email' },\n  { regex: rgxMention, category: 'mention' },\n  { regex: rgxHashtagL1, category: 'hashtag' },\n  { regex: rgxHashtagDV, category: 'hashtag' },\n  { regex: rgxEmoji, category: 'emoji' },\n  { regex: rgxEmoticon, category: 'emoticon' },\n  { regex: rgxTime, category: 'time' },\n  { regex: rgxOrdinalL1, category: 'ordinal' },\n  { regex: rgxNumberL1, category: 'number' },\n  { regex: rgxNumberDV, category: 'number' },\n  { regex: rgxCurrency, category: 'currency' },\n  { regex: rgxWordL1, category: 'word' },\n  { regex: rgxWordDV, category: 'word' },\n  { regex: rgxPunctuation, category: 'punctuation' },\n  { regex: rgxSymbol, category: 'symbol' }\n];\n\n// Used to generate finger print from the tokens.\n// NOTE: this variable is being reset in `defineConfig()`.\nvar fingerPrintCodes = {\n  emoticon: 'c',\n  email: 'e',\n  emoji: 'j',\n  hashtag: 'h',\n  mention: 'm',\n  number: 'n',\n  ordinal: 'o',\n  quoted_phrase: 'q', // eslint-disable-line camelcase\n  currency: 'r',\n  // symbol: 's',\n  time: 't',\n  url: 'u',\n  word: 'w',\n  alien: 'z'\n};\n\n// ### tokenizer\n/**\n *\n * Creates an instance of {@link Tokenizer}.\n *\n * @return {Tokenizer} object conatining set of API methods for tokenizing a sentence\n * and defining configuration, plugin etc.\n * @example\n * // Load wink tokenizer.\n * var tokenizer = require( 'wink-tokenizer' );\n * // Create your instance of wink tokenizer.\n * var myTokenizer = tokenizer();\n*/\nvar tokenizer = function () {\n  // Default configuration: most comprehensive tokenization. Make deep copy!\n  var rgxs = rgxsMaster.slice( 0 );\n  // The result of last call to `tokenize()` is retained here.\n  var finalTokens = [];\n  // Returned!\n\n  /**\n   * @classdesc Tokenizer class\n   * @class Tokenizer\n   * @hideconstructor\n   */\n  var methods = Object.create( null );\n\n  // ### manageContraction\n  /**\n   *\n   * Splits a contractions into words by first trying a lookup in strandard\n   * `contractions`; if the lookup fails, it checks for possessive in `'s` or\n   * `s'` forms and separates the possesive part from the word. Otherwise the\n   * contraction is treated as a normal word and no splitting occurs.\n   *\n   * @param {string} word that could be a potential conraction.\n   * @param {object[]} tokens where the outcome is pushed.\n   * @return {object[]} updated tokens according to the `word.`\n   * @private\n  */\n  var manageContraction = function ( word, tokens ) {\n    var ct = contractions[ word ];\n    var matches;\n    if ( ct === undefined ) {\n      // Try possesive of sigular & plural forms\n      matches = word.match( rgxPosSingular );\n      if ( matches ) {\n        tokens.push( { value: matches[ 1 ], tag: 'word' } );\n        tokens.push( { value: matches[ 2 ], tag: 'word' } );\n      } else {\n        matches = word.match( rgxPosPlural );\n        if ( matches ) {\n          tokens.push( { value: matches[ 1 ], tag: 'word' } );\n          tokens.push( { value: matches[ 2 ], tag: 'word' } );\n        } else tokens.push( { value: word, tag: 'word' } );\n      }\n    } else {\n      // Manage via lookup; ensure cloning!\n      tokens.push( Object.assign( {}, ct[ 0 ] ) );\n      tokens.push( Object.assign( {}, ct[ 1 ] ) );\n      if ( ct[ 2 ] ) tokens.push( Object.assign( {}, ct[ 2 ] ) );\n    }\n    return tokens;\n  }; // manageContraction()\n\n  // ### tokenizeTextUnit\n  /**\n   *\n   * Attempts to tokenize the input `text` using the `rgxSplit`. The tokenization\n   * is carried out by combining the regex matches and splits in the right sequence.\n   * The matches are the *real tokens*, whereas splits are text units that are\n   * tokenized in later rounds! The real tokens (i.e. matches) are pushed as\n   * `object` and splits as `string`.\n   *\n   * @param {string} text unit that is to be tokenized.\n   * @param {object} rgxSplit object containing the regex and it's category.\n   * @return {array} of tokens.\n   * @private\n  */\n  var tokenizeTextUnit = function ( text, rgxSplit ) {\n    // Regex matches go here; note each match is a token and has the same tag\n    // as of regex's category.\n    var matches = text.match( rgxSplit.regex );\n    // Balance is \"what needs to be tokenized\".\n    var balance = text.split( rgxSplit.regex );\n    // The result, in form of combination of tokens & matches, is captured here.\n    var tokens = [];\n    // The tag;\n    var tag = rgxSplit.category;\n    // Helper variables.\n    var aword,\n        i,\n        imax,\n        k = 0,\n        t;\n\n    // Combine tokens & matches in the following pattern [ b0 m0 b1 m1 ... ]\n    matches = ( matches ) ? matches : [];\n    for ( i = 0, imax = balance.length; i < imax; i += 1 ) {\n      t = balance[ i ];\n      t = t.trim();\n      if ( t ) tokens.push( t );\n      if ( k < matches.length ) {\n        if ( tag === 'word' ) {\n          // Tag type `word` token may have a contraction.\n          aword = matches[ k ];\n          if ( rgxContraction.test( aword ) ) {\n            tokens = manageContraction( aword, tokens );\n          } else {\n            // Means there is no contraction.\n            tokens.push( { value: aword, tag: tag } );\n          }\n        } else tokens.push( { value: matches[ k ], tag: tag } );\n      }\n      k += 1;\n    }\n\n    return ( tokens );\n  }; // tokenizeTextUnit()\n\n  // ### tokenizeTextRecursively\n  /**\n   *\n   * Tokenizes the input text recursively using the array of `regexes` and then\n   * the `tokenizeTextUnit()` function. If (or whenever) the `regexes` becomes\n   * empty, it simply splits the text on non-word characters instead of using\n   * the `tokenizeTextUnit()` function.\n   *\n   * @param {string} text unit that is to be tokenized.\n   * @param {object} regexes object containing the regex and it's category.\n   * @return {undefined} nothing!\n   * @private\n  */\n  var tokenizeTextRecursively = function ( text, regexes ) {\n    var sentence = text.trim();\n    var tokens = [];\n    var i, imax;\n\n    if ( !regexes.length ) {\n      // No regex left, split on `spaces` and tag every token as **alien**.\n      text.split( rgxSpaces ).forEach( function ( tkn ) {\n        finalTokens.push( { value: tkn.trim(), tag: 'alien' } );\n      } );\n      return;\n    }\n\n    var rgx = regexes[ 0 ];\n    tokens = tokenizeTextUnit( sentence, rgx );\n\n    for ( i = 0, imax = tokens.length; i < imax; i += 1 ) {\n      if ( typeof tokens[ i ] === 'string' ) {\n        // Strings become candidates for further tokenization.\n        tokenizeTextRecursively( tokens[ i ], regexes.slice( 1 ) );\n      } else {\n        finalTokens.push( tokens[ i ] );\n      }\n    }\n  }; // tokenizeTextRecursively()\n\n  // ### defineConfig\n  /**\n   *\n   * Defines the configuration in terms of the types of token that will be\n   * extracted by [`tokenize()`](#tokenize) method. Note by default, all types\n   * of tokens will be detected and tagged automatically.\n   *\n   * @method Tokenizer#defineConfig\n   * @param {object} config It defines 0 or more properties from the list of\n   * **14** properties. A true value for a property ensures tokenization\n   * for that type of text; whereas false value will mean that the tokenization of that\n   * type of text will not be attempted. It also **resets** the effect of any previous\n   * call(s) to the [`addRegex()`](#addregex) API.\n   *\n   * *An empty config object is equivalent to splitting on spaces. Whatever tokens\n   * are created like this are tagged as **alien** and **`z`** is the\n   * [finger print](#gettokensfp) code of this token type.*\n   *\n   * The table below gives the name of each property and it's description including\n   * examples. The character with in paranthesis is the [finger print](#gettokensfp) code for the\n   * token of that type.\n   * @param {boolean} [config.currency=true] such as **$** or **£** symbols (**`r`**)\n   * @param {boolean} [config.email=true] for example **john@acme.com** or **superman1@gmail.com** (**`e`**)\n   * @param {boolean} [config.emoji=true] any standard unicode emojis e.g. 😊 or 😂 or 🎉 (**`j`**)\n   * @param {boolean} [config.emoticon=true] common emoticons such as **`:-)`** or **`:D`** (**`c`**)\n   * @param {boolean} [config.hashtag=true] hash tags such as **`#happy`** or **`#followme`** (**`h`**)\n   * @param {boolean} [config.number=true] any integer, decimal number, fractions such as **19**, **2.718**\n   * or **1/4** and numerals containing \"**`, - / .`**\", for example 12-12-1924 (**`n`**)\n   * @param {boolean} [config.ordinal=true] ordinals like **1st**, **2nd**, **3rd**, **4th** or **12th** or **91st** (**`o`**)\n   * @param {boolean} [config.punctuation=true] common punctuation such as **`?`** or **`,`**\n   * ( token becomes fingerprint )\n   * @param {boolean} [config.quoted_phrase=false] any **\"quoted text\"** in the sentence. _Note: its default value is **false**._ (**`q`**)\n   * @param {boolean} [config.symbol=true] for example **`~`** or **`+`** or **`&`** or **`%`** or **`/`** ( token becomes fingerprint )\n   * @param {boolean} [config.time=true] common representation of time such as **4pm** or **16:00 hours** (**`t`**)\n   * @param {boolean} [config.mention=true] **@mention**  as in github or twitter (**`m`**)\n   * @param {boolean} [config.url=true] URL such as **https://github.com** (**`u`**)\n   * @param {boolean} [config.word=true] word such as **faster** or **résumé** or **prévenir** (**`w`**)\n   * @return {number} number of properties set to true from the list of above 13.\n   * @example\n   * // Do not tokenize & tag @mentions.\n   * var myTokenizer.defineConfig( { mention: false } );\n   * // -> 13\n   * // Only tokenize words as defined above.\n   * var myTokenizer.defineConfig( {} );\n   * // -> 0\n  */\n  var defineConfig = function ( config ) {\n    if ( typeof config === 'object' && Object.keys( config ).length ) {\n      rgxs = rgxsMaster.filter( function ( rgx ) {\n        // Config for the Category of `rgx`.\n        var cc = config[ rgx.category ];\n        // Means `undefined` & `null` values are taken as true; otherwise\n        // standard **truthy** and **falsy** interpretation applies!!\n        return ( cc === undefined || cc === null || !!cc );\n      } );\n    } else rgxs = [];\n    // Count normalized length i.e. ignore multi-script entries.\n    const uniqueCats = Object.create( null );\n    rgxs.forEach( function ( rgx ) {\n      uniqueCats[ rgx.category ] = true;\n    } );\n    // Reset the `fingerPrintCodes` variable.\n    fingerPrintCodes = {\n      emoticon: 'c',\n      email: 'e',\n      emoji: 'j',\n      hashtag: 'h',\n      mention: 'm',\n      number: 'n',\n      ordinal: 'o',\n      quoted_phrase: 'q', // eslint-disable-line camelcase\n      currency: 'r',\n      // symbol: 's',\n      time: 't',\n      url: 'u',\n      word: 'w',\n      alien: 'z'\n    };\n    return ( ( Object.keys( uniqueCats ) ).length );\n  }; // defineConfig()\n\n  // ### tokenize\n  /**\n   *\n   * Tokenizes the input `sentence` using the configuration specified via\n   * [`defineConfig()`](#defineconfig).\n   * Common contractions and possessive nouns are split into 2 separate tokens;\n   * for example **I'll** splits as `'I'` and `'\\'ll'` or **won't** splits as\n   * `'wo'` and `'n\\'t'`.\n   *\n   * @method Tokenizer#tokenize\n   * @param {string} sentence the input sentence.\n   * @return {object[]} of tokens; each one of them is an object with 2-keys viz.\n   * `value` and its `tag` identifying the type of the token.\n   * @example\n   * var s = 'For detailed API docs, check out http://winkjs.org/wink-regression-tree/ URL!';\n   * myTokenizer.tokenize( s );\n   * // -> [ { value: 'For', tag: 'word' },\n   * //      { value: 'detailed', tag: 'word' },\n   * //      { value: 'API', tag: 'word' },\n   * //      { value: 'docs', tag: 'word' },\n   * //      { value: ',', tag: 'punctuation' },\n   * //      { value: 'check', tag: 'word' },\n   * //      { value: 'out', tag: 'word' },\n   * //      { value: 'http://winkjs.org/wink-regression-tree/', tag: 'url' },\n   * //      { value: 'URL', tag: 'word' },\n   * //      { value: '!', tag: 'punctuation' } ]\n  */\n  var tokenize = function ( sentence ) {\n    finalTokens = [];\n    tokenizeTextRecursively( sentence, rgxs );\n    return finalTokens;\n  }; // tokenize()\n\n  // ### getTokensFP\n  /**\n   *\n   * Returns the finger print of the tokens generated by the last call to\n   * [`tokenize()`](#tokenize). A finger print is a string created by sequentially\n   * joining the unique code of each token's type. Refer to table given under\n   * [`defineConfig()`](#defineconfig) for values of these codes.\n   *\n   * A finger print is extremely useful in spotting patterns present in the sentence\n   * using `regexes`, which is otherwise a complex and time consuming task.\n   *\n   * @method Tokenizer#getTokensFP\n   * @return {string} finger print of tokens generated by the last call to `tokenize()`.\n   * @example\n   * // Generate finger print of sentence given in the previous example\n   * // under tokenize().\n   * myTokenizer.getTokensFP();\n   * // -> 'wwww,wwuw!'\n  */\n  var getTokensFP = function () {\n    var fp = [];\n    finalTokens.forEach( function ( t ) {\n      fp.push( ( fingerPrintCodes[ t.tag ] ) ? fingerPrintCodes[ t.tag ] : t.value );\n    } );\n    return fp.join( '' );\n  }; // getFingerprint()\n\n  // ### addTag\n  var addTag = function (name, fingerprintCode) {\n    if (fingerPrintCodes[name]) {\n      throw new Error( 'Tag ' + name + ' already exists' );\n    }\n\n    fingerPrintCodes[name] = fingerprintCode;\n  }; // addTag()\n\n  // ### addRegex\n  /**\n   * Adds a regex for parsing a new type of token. This regex can either be mapped\n   * to an existing tag or it allows creation of a new tag along with its finger print.\n   * The uniqueness of the [finger prints](#defineconfig) have to ensured by the user.\n   *\n   * *The added regex(s) will supersede the internal parsing.*\n   *\n   * @method Tokenizer#addRegex\n   * @param {RegExp} regex the new regular expression.\n   * @param {string} tag tokens matching the `regex` will be assigned this tag.\n   * @param {string} [fingerprintCode=undefined] required if adding a new\n   * tag; ignored if using an existing tag.\n   * @return {void} nothing!\n   * @example\n   * // Adding a regex for an existing tag\n   * myTokenizer.addRegex( /\\(oo\\)/gi, 'emoticon' );\n   * myTokenizer.tokenize( '(oo) Hi!' )\n   * // -> [ { value: '(oo)', tag: 'emoticon' },\n   * //      { value: 'Hi', tag: 'word' },\n   * //      { value: '!', tag: 'punctuation' } ]\n   *\n   * // Adding a regex to parse a new token type\n   * myTokenizer.addRegex( /hello/gi, 'greeting', 'g' );\n   * myTokenizer.tokenize( 'hello, how are you?' );\n   * // -> [ { value: 'hello', tag: 'greeting' },\n   * //      { value: ',', tag: 'punctuation' },\n   * //      { value: 'how', tag: 'word' },\n   * //      { value: 'are', tag: 'word' },\n   * //      { value: 'you', tag: 'word' },\n   * //      { value: '?', tag: 'punctuation' } ]\n   * // Notice how \"hello\" is now tagged as \"greeting\" and not as \"word\".\n   *\n   * // Using definConfig will reset the above!\n   * myTokenizer.defineConfig( { word: true } );\n   * myTokenizer.tokenize( 'hello, how are you?' );\n   * // -> [ { value: 'hello', tag: 'word' },\n   * //      { value: ',', tag: 'punctuation' },\n   * //      { value: 'how', tag: 'word' },\n   * //      { value: 'are', tag: 'word' },\n   * //      { value: 'you', tag: 'word' },\n   * //      { value: '?', tag: 'punctuation' } ]\n  */\n\n  var addRegex = function (regex, tag, fingerprintCode) {\n    if (!fingerPrintCodes[tag] && !fingerprintCode) {\n      throw new Error( 'Tag ' + tag + ' doesn\\'t exist; Provide a \\'fingerprintCode\\' to add it as a tag.' );\n    } else if (!fingerPrintCodes[tag]) {\n      addTag(tag, fingerprintCode);\n    }\n\n    rgxs.unshift( { regex: regex, category: tag } );\n  }; // addRegex()\n\n  // Set quoted_phrase as false becuase mostly it is not required.\n  defineConfig( { quoted_phrase: false } ); // eslint-disable-line camelcase\n  methods.defineConfig = defineConfig;\n  methods.tokenize = tokenize;\n  methods.getTokensFP = getTokensFP;\n  methods.addTag = addTag;\n  methods.addRegex = addRegex;\n  return methods;\n};\n\nmodule.exports = tokenizer;\n","module.exports={af:[\"'n\",\"aan\",\"af\",\"al\",\"as\",\"baie\",\"by\",\"daar\",\"dag\",\"dat\",\"die\",\"dit\",\"een\",\"ek\",\"en\",\"gaan\",\"gesê\",\"haar\",\"het\",\"hom\",\"hulle\",\"hy\",\"in\",\"is\",\"jou\",\"jy\",\"kan\",\"kom\",\"ma\",\"maar\",\"met\",\"my\",\"na\",\"nie\",\"om\",\"ons\",\"op\",\"saam\",\"sal\",\"se\",\"sien\",\"so\",\"sy\",\"te\",\"toe\",\"uit\",\"van\",\"vir\",\"was\",\"wat\",\"ŉ\"],ar:[\"،\",\"آض\",\"آمينَ\",\"آه\",\"آهاً\",\"آي\",\"أ\",\"أب\",\"أجل\",\"أجمع\",\"أخ\",\"أخذ\",\"أصبح\",\"أضحى\",\"أقبل\",\"أقل\",\"أكثر\",\"ألا\",\"أم\",\"أما\",\"أمامك\",\"أمامكَ\",\"أمسى\",\"أمّا\",\"أن\",\"أنا\",\"أنت\",\"أنتم\",\"أنتما\",\"أنتن\",\"أنتِ\",\"أنشأ\",\"أنّى\",\"أو\",\"أوشك\",\"أولئك\",\"أولئكم\",\"أولاء\",\"أولالك\",\"أوّهْ\",\"أي\",\"أيا\",\"أين\",\"أينما\",\"أيّ\",\"أَنَّ\",\"أََيُّ\",\"أُفٍّ\",\"إذ\",\"إذا\",\"إذاً\",\"إذما\",\"إذن\",\"إلى\",\"إليكم\",\"إليكما\",\"إليكنّ\",\"إليكَ\",\"إلَيْكَ\",\"إلّا\",\"إمّا\",\"إن\",\"إنّما\",\"إي\",\"إياك\",\"إياكم\",\"إياكما\",\"إياكن\",\"إيانا\",\"إياه\",\"إياها\",\"إياهم\",\"إياهما\",\"إياهن\",\"إياي\",\"إيهٍ\",\"إِنَّ\",\"ا\",\"ابتدأ\",\"اثر\",\"اجل\",\"احد\",\"اخرى\",\"اخلولق\",\"اذا\",\"اربعة\",\"ارتدّ\",\"استحال\",\"اطار\",\"اعادة\",\"اعلنت\",\"اف\",\"اكثر\",\"اكد\",\"الألاء\",\"الألى\",\"الا\",\"الاخيرة\",\"الان\",\"الاول\",\"الاولى\",\"التى\",\"التي\",\"الثاني\",\"الثانية\",\"الذاتي\",\"الذى\",\"الذي\",\"الذين\",\"السابق\",\"الف\",\"اللائي\",\"اللاتي\",\"اللتان\",\"اللتيا\",\"اللتين\",\"اللذان\",\"اللذين\",\"اللواتي\",\"الماضي\",\"المقبل\",\"الوقت\",\"الى\",\"اليوم\",\"اما\",\"امام\",\"امس\",\"ان\",\"انبرى\",\"انقلب\",\"انه\",\"انها\",\"او\",\"اول\",\"اي\",\"ايار\",\"ايام\",\"ايضا\",\"ب\",\"بات\",\"باسم\",\"بان\",\"بخٍ\",\"برس\",\"بسبب\",\"بسّ\",\"بشكل\",\"بضع\",\"بطآن\",\"بعد\",\"بعض\",\"بك\",\"بكم\",\"بكما\",\"بكن\",\"بل\",\"بلى\",\"بما\",\"بماذا\",\"بمن\",\"بن\",\"بنا\",\"به\",\"بها\",\"بي\",\"بيد\",\"بين\",\"بَسْ\",\"بَلْهَ\",\"بِئْسَ\",\"تانِ\",\"تانِك\",\"تبدّل\",\"تجاه\",\"تحوّل\",\"تلقاء\",\"تلك\",\"تلكم\",\"تلكما\",\"تم\",\"تينك\",\"تَيْنِ\",\"تِه\",\"تِي\",\"ثلاثة\",\"ثم\",\"ثمّ\",\"ثمّة\",\"ثُمَّ\",\"جعل\",\"جلل\",\"جميع\",\"جير\",\"حار\",\"حاشا\",\"حاليا\",\"حاي\",\"حتى\",\"حرى\",\"حسب\",\"حم\",\"حوالى\",\"حول\",\"حيث\",\"حيثما\",\"حين\",\"حيَّ\",\"حَبَّذَا\",\"حَتَّى\",\"حَذارِ\",\"خلا\",\"خلال\",\"دون\",\"دونك\",\"ذا\",\"ذات\",\"ذاك\",\"ذانك\",\"ذانِ\",\"ذلك\",\"ذلكم\",\"ذلكما\",\"ذلكن\",\"ذو\",\"ذوا\",\"ذواتا\",\"ذواتي\",\"ذيت\",\"ذينك\",\"ذَيْنِ\",\"ذِه\",\"ذِي\",\"راح\",\"رجع\",\"رويدك\",\"ريث\",\"رُبَّ\",\"زيارة\",\"سبحان\",\"سرعان\",\"سنة\",\"سنوات\",\"سوف\",\"سوى\",\"سَاءَ\",\"سَاءَمَا\",\"شبه\",\"شخصا\",\"شرع\",\"شَتَّانَ\",\"صار\",\"صباح\",\"صفر\",\"صهٍ\",\"صهْ\",\"ضد\",\"ضمن\",\"طاق\",\"طالما\",\"طفق\",\"طَق\",\"ظلّ\",\"عاد\",\"عام\",\"عاما\",\"عامة\",\"عدا\",\"عدة\",\"عدد\",\"عدم\",\"عسى\",\"عشر\",\"عشرة\",\"علق\",\"على\",\"عليك\",\"عليه\",\"عليها\",\"علًّ\",\"عن\",\"عند\",\"عندما\",\"عوض\",\"عين\",\"عَدَسْ\",\"عَمَّا\",\"غدا\",\"غير\",\"ـ\",\"ف\",\"فان\",\"فلان\",\"فو\",\"فى\",\"في\",\"فيم\",\"فيما\",\"فيه\",\"فيها\",\"قال\",\"قام\",\"قبل\",\"قد\",\"قطّ\",\"قلما\",\"قوة\",\"كأنّما\",\"كأين\",\"كأيّ\",\"كأيّن\",\"كاد\",\"كان\",\"كانت\",\"كذا\",\"كذلك\",\"كرب\",\"كل\",\"كلا\",\"كلاهما\",\"كلتا\",\"كلم\",\"كليكما\",\"كليهما\",\"كلّما\",\"كلَّا\",\"كم\",\"كما\",\"كي\",\"كيت\",\"كيف\",\"كيفما\",\"كَأَنَّ\",\"كِخ\",\"لئن\",\"لا\",\"لات\",\"لاسيما\",\"لدن\",\"لدى\",\"لعمر\",\"لقاء\",\"لك\",\"لكم\",\"لكما\",\"لكن\",\"لكنَّما\",\"لكي\",\"لكيلا\",\"للامم\",\"لم\",\"لما\",\"لمّا\",\"لن\",\"لنا\",\"له\",\"لها\",\"لو\",\"لوكالة\",\"لولا\",\"لوما\",\"لي\",\"لَسْتَ\",\"لَسْتُ\",\"لَسْتُم\",\"لَسْتُمَا\",\"لَسْتُنَّ\",\"لَسْتِ\",\"لَسْنَ\",\"لَعَلَّ\",\"لَكِنَّ\",\"لَيْتَ\",\"لَيْسَ\",\"لَيْسَا\",\"لَيْسَتَا\",\"لَيْسَتْ\",\"لَيْسُوا\",\"لَِسْنَا\",\"ما\",\"ماانفك\",\"مابرح\",\"مادام\",\"ماذا\",\"مازال\",\"مافتئ\",\"مايو\",\"متى\",\"مثل\",\"مذ\",\"مساء\",\"مع\",\"معاذ\",\"مقابل\",\"مكانكم\",\"مكانكما\",\"مكانكنّ\",\"مكانَك\",\"مليار\",\"مليون\",\"مما\",\"ممن\",\"من\",\"منذ\",\"منها\",\"مه\",\"مهما\",\"مَنْ\",\"مِن\",\"نحن\",\"نحو\",\"نعم\",\"نفس\",\"نفسه\",\"نهاية\",\"نَخْ\",\"نِعِمّا\",\"نِعْمَ\",\"ها\",\"هاؤم\",\"هاكَ\",\"هاهنا\",\"هبّ\",\"هذا\",\"هذه\",\"هكذا\",\"هل\",\"هلمَّ\",\"هلّا\",\"هم\",\"هما\",\"هن\",\"هنا\",\"هناك\",\"هنالك\",\"هو\",\"هي\",\"هيا\",\"هيت\",\"هيّا\",\"هَؤلاء\",\"هَاتانِ\",\"هَاتَيْنِ\",\"هَاتِه\",\"هَاتِي\",\"هَجْ\",\"هَذا\",\"هَذانِ\",\"هَذَيْنِ\",\"هَذِه\",\"هَذِي\",\"هَيْهَاتَ\",\"و\",\"و6\",\"وا\",\"واحد\",\"واضاف\",\"واضافت\",\"واكد\",\"وان\",\"واهاً\",\"واوضح\",\"وراءَك\",\"وفي\",\"وقال\",\"وقالت\",\"وقد\",\"وقف\",\"وكان\",\"وكانت\",\"ولا\",\"ولم\",\"ومن\",\"وهو\",\"وهي\",\"ويكأنّ\",\"وَيْ\",\"وُشْكَانََ\",\"يكون\",\"يمكن\",\"يوم\",\"ّأيّان\"],hy:[\"այդ\",\"այլ\",\"այն\",\"այս\",\"դու\",\"դուք\",\"եմ\",\"են\",\"ենք\",\"ես\",\"եք\",\"է\",\"էի\",\"էին\",\"էինք\",\"էիր\",\"էիք\",\"էր\",\"ըստ\",\"թ\",\"ի\",\"ին\",\"իսկ\",\"իր\",\"կամ\",\"համար\",\"հետ\",\"հետո\",\"մենք\",\"մեջ\",\"մի\",\"ն\",\"նա\",\"նաև\",\"նրա\",\"նրանք\",\"որ\",\"որը\",\"որոնք\",\"որպես\",\"ու\",\"ում\",\"պիտի\",\"վրա\",\"և\"],eu:[\"al\",\"anitz\",\"arabera\",\"asko\",\"baina\",\"bat\",\"batean\",\"batek\",\"bati\",\"batzuei\",\"batzuek\",\"batzuetan\",\"batzuk\",\"bera\",\"beraiek\",\"berau\",\"berauek\",\"bere\",\"berori\",\"beroriek\",\"beste\",\"bezala\",\"da\",\"dago\",\"dira\",\"ditu\",\"du\",\"dute\",\"edo\",\"egin\",\"ere\",\"eta\",\"eurak\",\"ez\",\"gainera\",\"gu\",\"gutxi\",\"guzti\",\"haiei\",\"haiek\",\"haietan\",\"hainbeste\",\"hala\",\"han\",\"handik\",\"hango\",\"hara\",\"hari\",\"hark\",\"hartan\",\"hau\",\"hauei\",\"hauek\",\"hauetan\",\"hemen\",\"hemendik\",\"hemengo\",\"hi\",\"hona\",\"honek\",\"honela\",\"honetan\",\"honi\",\"hor\",\"hori\",\"horiei\",\"horiek\",\"horietan\",\"horko\",\"horra\",\"horrek\",\"horrela\",\"horretan\",\"horri\",\"hortik\",\"hura\",\"izan\",\"ni\",\"noiz\",\"nola\",\"non\",\"nondik\",\"nongo\",\"nor\",\"nora\",\"ze\",\"zein\",\"zen\",\"zenbait\",\"zenbat\",\"zer\",\"zergatik\",\"ziren\",\"zituen\",\"zu\",\"zuek\",\"zuen\",\"zuten\"],bn:[\"অতএব\",\"অথচ\",\"অথবা\",\"অনুযায়ী\",\"অনেক\",\"অনেকে\",\"অনেকেই\",\"অন্তত\",\"অন্য\",\"অবধি\",\"অবশ্য\",\"অর্থাত\",\"আই\",\"আগামী\",\"আগে\",\"আগেই\",\"আছে\",\"আজ\",\"আদ্যভাগে\",\"আপনার\",\"আপনি\",\"আবার\",\"আমরা\",\"আমাকে\",\"আমাদের\",\"আমার\",\"আমি\",\"আর\",\"আরও\",\"ই\",\"ইত্যাদি\",\"ইহা\",\"উচিত\",\"উত্তর\",\"উনি\",\"উপর\",\"উপরে\",\"এ\",\"এঁদের\",\"এঁরা\",\"এই\",\"একই\",\"একটি\",\"একবার\",\"একে\",\"এক্\",\"এখন\",\"এখনও\",\"এখানে\",\"এখানেই\",\"এটা\",\"এটাই\",\"এটি\",\"এত\",\"এতটাই\",\"এতে\",\"এদের\",\"এব\",\"এবং\",\"এবার\",\"এমন\",\"এমনকী\",\"এমনি\",\"এর\",\"এরা\",\"এল\",\"এস\",\"এসে\",\"ঐ\",\"ও\",\"ওঁদের\",\"ওঁর\",\"ওঁরা\",\"ওই\",\"ওকে\",\"ওখানে\",\"ওদের\",\"ওর\",\"ওরা\",\"কখনও\",\"কত\",\"কবে\",\"কমনে\",\"কয়েক\",\"কয়েকটি\",\"করছে\",\"করছেন\",\"করতে\",\"করবে\",\"করবেন\",\"করলে\",\"করলেন\",\"করা\",\"করাই\",\"করায়\",\"করার\",\"করি\",\"করিতে\",\"করিয়া\",\"করিয়ে\",\"করে\",\"করেই\",\"করেছিলেন\",\"করেছে\",\"করেছেন\",\"করেন\",\"কাউকে\",\"কাছ\",\"কাছে\",\"কাজ\",\"কাজে\",\"কারও\",\"কারণ\",\"কি\",\"কিংবা\",\"কিছু\",\"কিছুই\",\"কিন্তু\",\"কী\",\"কে\",\"কেউ\",\"কেউই\",\"কেখা\",\"কেন\",\"কোটি\",\"কোন\",\"কোনও\",\"কোনো\",\"ক্ষেত্রে\",\"কয়েক\",\"খুব\",\"গিয়ে\",\"গিয়েছে\",\"গিয়ে\",\"গুলি\",\"গেছে\",\"গেল\",\"গেলে\",\"গোটা\",\"চলে\",\"চান\",\"চায়\",\"চার\",\"চালু\",\"চেয়ে\",\"চেষ্টা\",\"ছাড়া\",\"ছাড়াও\",\"ছিল\",\"ছিলেন\",\"জন\",\"জনকে\",\"জনের\",\"জন্য\",\"জন্যওজে\",\"জানতে\",\"জানা\",\"জানানো\",\"জানায়\",\"জানিয়ে\",\"জানিয়েছে\",\"জে\",\"জ্নজন\",\"টি\",\"ঠিক\",\"তখন\",\"তত\",\"তথা\",\"তবু\",\"তবে\",\"তা\",\"তাঁকে\",\"তাঁদের\",\"তাঁর\",\"তাঁরা\",\"তাঁাহারা\",\"তাই\",\"তাও\",\"তাকে\",\"তাতে\",\"তাদের\",\"তার\",\"তারপর\",\"তারা\",\"তারৈ\",\"তাহলে\",\"তাহা\",\"তাহাতে\",\"তাহার\",\"তিনঐ\",\"তিনি\",\"তিনিও\",\"তুমি\",\"তুলে\",\"তেমন\",\"তো\",\"তোমার\",\"থাকবে\",\"থাকবেন\",\"থাকা\",\"থাকায়\",\"থাকে\",\"থাকেন\",\"থেকে\",\"থেকেই\",\"থেকেও\",\"দিকে\",\"দিতে\",\"দিন\",\"দিয়ে\",\"দিয়েছে\",\"দিয়েছেন\",\"দিলেন\",\"দু\",\"দুই\",\"দুটি\",\"দুটো\",\"দেওয়া\",\"দেওয়ার\",\"দেওয়া\",\"দেখতে\",\"দেখা\",\"দেখে\",\"দেন\",\"দেয়\",\"দ্বারা\",\"ধরা\",\"ধরে\",\"ধামার\",\"নতুন\",\"নয়\",\"না\",\"নাই\",\"নাকি\",\"নাগাদ\",\"নানা\",\"নিজে\",\"নিজেই\",\"নিজেদের\",\"নিজের\",\"নিতে\",\"নিয়ে\",\"নিয়ে\",\"নেই\",\"নেওয়া\",\"নেওয়ার\",\"নেওয়া\",\"নয়\",\"পক্ষে\",\"পর\",\"পরে\",\"পরেই\",\"পরেও\",\"পর্যন্ত\",\"পাওয়া\",\"পাচ\",\"পারি\",\"পারে\",\"পারেন\",\"পি\",\"পেয়ে\",\"পেয়্র্\",\"প্রতি\",\"প্রথম\",\"প্রভৃতি\",\"প্রযন্ত\",\"প্রাথমিক\",\"প্রায়\",\"প্রায়\",\"ফলে\",\"ফিরে\",\"ফের\",\"বক্তব্য\",\"বদলে\",\"বন\",\"বরং\",\"বলতে\",\"বলল\",\"বললেন\",\"বলা\",\"বলে\",\"বলেছেন\",\"বলেন\",\"বসে\",\"বহু\",\"বা\",\"বাদে\",\"বার\",\"বি\",\"বিনা\",\"বিভিন্ন\",\"বিশেষ\",\"বিষয়টি\",\"বেশ\",\"বেশি\",\"ব্যবহার\",\"ব্যাপারে\",\"ভাবে\",\"ভাবেই\",\"মতো\",\"মতোই\",\"মধ্যভাগে\",\"মধ্যে\",\"মধ্যেই\",\"মধ্যেও\",\"মনে\",\"মাত্র\",\"মাধ্যমে\",\"মোট\",\"মোটেই\",\"যখন\",\"যত\",\"যতটা\",\"যথেষ্ট\",\"যদি\",\"যদিও\",\"যা\",\"যাঁর\",\"যাঁরা\",\"যাওয়া\",\"যাওয়ার\",\"যাওয়া\",\"যাকে\",\"যাচ্ছে\",\"যাতে\",\"যাদের\",\"যান\",\"যাবে\",\"যায়\",\"যার\",\"যারা\",\"যিনি\",\"যে\",\"যেখানে\",\"যেতে\",\"যেন\",\"যেমন\",\"র\",\"রকম\",\"রয়েছে\",\"রাখা\",\"রেখে\",\"লক্ষ\",\"শুধু\",\"শুরু\",\"সঙ্গে\",\"সঙ্গেও\",\"সব\",\"সবার\",\"সমস্ত\",\"সম্প্রতি\",\"সহ\",\"সহিত\",\"সাধারণ\",\"সামনে\",\"সি\",\"সুতরাং\",\"সে\",\"সেই\",\"সেখান\",\"সেখানে\",\"সেটা\",\"সেটাই\",\"সেটাও\",\"সেটি\",\"স্পষ্ট\",\"স্বয়ং\",\"হইতে\",\"হইবে\",\"হইয়া\",\"হওয়া\",\"হওয়ায়\",\"হওয়ার\",\"হচ্ছে\",\"হত\",\"হতে\",\"হতেই\",\"হন\",\"হবে\",\"হবেন\",\"হয়\",\"হয়তো\",\"হয়নি\",\"হয়ে\",\"হয়েই\",\"হয়েছিল\",\"হয়েছে\",\"হয়েছেন\",\"হল\",\"হলে\",\"হলেই\",\"হলেও\",\"হলো\",\"হাজার\",\"হিসাবে\",\"হৈলে\",\"হোক\",\"হয়\"],br:[\"'blam\",\"'d\",\"'m\",\"'r\",\"'ta\",\"'vat\",\"'z\",\"'zo\",\"a\",\"a:\",\"aba\",\"abalamour\",\"abaoe\",\"ac'hane\",\"ac'hanoc'h\",\"ac'hanomp\",\"ac'hanon\",\"ac'hanout\",\"adal\",\"adalek\",\"adarre\",\"ae\",\"aec'h\",\"aed\",\"aemp\",\"aen\",\"aent\",\"aes\",\"afe\",\"afec'h\",\"afed\",\"afemp\",\"afen\",\"afent\",\"afes\",\"ag\",\"ah\",\"aimp\",\"aint\",\"aio\",\"aiou\",\"aje\",\"ajec'h\",\"ajed\",\"ajemp\",\"ajen\",\"ajent\",\"ajes\",\"al\",\"alato\",\"alies\",\"aliesañ\",\"alkent\",\"all\",\"allas\",\"allo\",\"allô\",\"am\",\"amañ\",\"amzer\",\"an\",\"anezhañ\",\"anezhe\",\"anezhi\",\"anezho\",\"anvet\",\"aon\",\"aotren\",\"ar\",\"arall\",\"araok\",\"araoki\",\"araozañ\",\"araozo\",\"araozoc'h\",\"araozomp\",\"araozon\",\"araozor\",\"araozout\",\"arbenn\",\"arre\",\"atalek\",\"atav\",\"az\",\"azalek\",\"azirazañ\",\"azirazi\",\"azirazo\",\"azirazoc'h\",\"azirazomp\",\"azirazon\",\"azirazor\",\"azirazout\",\"b:\",\"ba\",\"ba'l\",\"ba'n\",\"ba'r\",\"bad\",\"bah\",\"bal\",\"ban\",\"bar\",\"bastañ\",\"befe\",\"bell\",\"benaos\",\"benn\",\"bennag\",\"bennak\",\"bennozh\",\"bep\",\"bepred\",\"berr\",\"berzh\",\"bet\",\"betek\",\"betra\",\"bev\",\"bevet\",\"bez\",\"bezañ\",\"beze\",\"bezent\",\"bezet\",\"bezh\",\"bezit\",\"bezomp\",\"bihan\",\"bije\",\"biou\",\"biskoazh\",\"blam\",\"bo\",\"boa\",\"bominapl\",\"boudoudom\",\"bouez\",\"boull\",\"boum\",\"bout\",\"bras\",\"brasañ\",\"brav\",\"bravo\",\"bremañ\",\"bres\",\"brokenn\",\"bronn\",\"brrr\",\"brutal\",\"buhezek\",\"c'h:\",\"c'haout\",\"c'he\",\"c'hem\",\"c'herz\",\"c'heñver\",\"c'hichen\",\"c'hiz\",\"c'hoazh\",\"c'horre\",\"c'houde\",\"c'houst\",\"c'hreiz\",\"c'hwec'h\",\"c'hwec'hvet\",\"c'hwezek\",\"c'hwi\",\"ch:\",\"chaous\",\"chik\",\"chit\",\"chom\",\"chut\",\"d'\",\"d'al\",\"d'an\",\"d'ar\",\"d'az\",\"d'e\",\"d'he\",\"d'ho\",\"d'hol\",\"d'hon\",\"d'hor\",\"d'o\",\"d'ober\",\"d'ul\",\"d'un\",\"d'ur\",\"d:\",\"da\",\"dak\",\"daka\",\"dal\",\"dalbezh\",\"dalc'hmat\",\"dalit\",\"damdost\",\"damheñvel\",\"damm\",\"dan\",\"danvez\",\"dao\",\"daol\",\"daonet\",\"daou\",\"daoust\",\"daouzek\",\"daouzekvet\",\"darn\",\"dastrewiñ\",\"dav\",\"davedoc'h\",\"davedomp\",\"davedon\",\"davedor\",\"davedout\",\"davet\",\"davetañ\",\"davete\",\"daveti\",\"daveto\",\"defe\",\"dehou\",\"dek\",\"dekvet\",\"den\",\"deoc'h\",\"deomp\",\"deor\",\"derc'hel\",\"deus\",\"dez\",\"deze\",\"dezhañ\",\"dezhe\",\"dezhi\",\"dezho\",\"di\",\"diabarzh\",\"diagent\",\"diar\",\"diaraok\",\"diavaez\",\"dibaoe\",\"dibaot\",\"dibar\",\"dic'halañ\",\"didiac'h\",\"dienn\",\"difer\",\"diganeoc'h\",\"diganeomp\",\"diganeor\",\"diganimp\",\"diganin\",\"diganit\",\"digant\",\"digantañ\",\"digante\",\"diganti\",\"diganto\",\"digemmesk\",\"diget\",\"digor\",\"digoret\",\"dija\",\"dije\",\"dimp\",\"din\",\"dinaou\",\"dindan\",\"dindanañ\",\"dindani\",\"dindano\",\"dindanoc'h\",\"dindanomp\",\"dindanon\",\"dindanor\",\"dindanout\",\"dioutañ\",\"dioute\",\"diouti\",\"diouto\",\"diouzh\",\"diouzhin\",\"diouzhit\",\"diouzhoc'h\",\"diouzhomp\",\"diouzhor\",\"dirak\",\"dirazañ\",\"dirazi\",\"dirazo\",\"dirazoc'h\",\"dirazomp\",\"dirazon\",\"dirazor\",\"dirazout\",\"disheñvel\",\"dispar\",\"distank\",\"dister\",\"disterañ\",\"disterig\",\"distro\",\"dit\",\"divaez\",\"diwar\",\"diwezhat\",\"diwezhañ\",\"do\",\"doa\",\"doare\",\"dont\",\"dost\",\"doue\",\"douetus\",\"douez\",\"doug\",\"draou\",\"draoñ\",\"dre\",\"drede\",\"dreist\",\"dreistañ\",\"dreisti\",\"dreisto\",\"dreistoc'h\",\"dreistomp\",\"dreiston\",\"dreistor\",\"dreistout\",\"drek\",\"dreñv\",\"dring\",\"dro\",\"du\",\"e\",\"e:\",\"eas\",\"ebet\",\"ec'h\",\"edo\",\"edoc'h\",\"edod\",\"edomp\",\"edon\",\"edont\",\"edos\",\"eer\",\"eeun\",\"efed\",\"egedoc'h\",\"egedomp\",\"egedon\",\"egedor\",\"egedout\",\"eget\",\"egetañ\",\"egete\",\"egeti\",\"egeto\",\"eh\",\"eil\",\"eilvet\",\"eizh\",\"eizhvet\",\"ejoc'h\",\"ejod\",\"ejomp\",\"ejont\",\"ejout\",\"el\",\"em\",\"emaint\",\"emaoc'h\",\"emaomp\",\"emaon\",\"emaout\",\"emañ\",\"eme\",\"emeur\",\"emezañ\",\"emezi\",\"emezo\",\"emezoc'h\",\"emezomp\",\"emezon\",\"emezout\",\"emporzhiañ\",\"en\",\"end\",\"endan\",\"endra\",\"enep\",\"ennañ\",\"enni\",\"enno\",\"ennoc'h\",\"ennomp\",\"ennon\",\"ennor\",\"ennout\",\"enta\",\"eo\",\"eomp\",\"eont\",\"eor\",\"eot\",\"er\",\"erbet\",\"erfin\",\"esa\",\"esae\",\"espar\",\"estlamm\",\"estrañj\",\"eta\",\"etre\",\"etreoc'h\",\"etrezo\",\"etrezoc'h\",\"etrezomp\",\"etrezor\",\"euh\",\"eur\",\"eus\",\"evel\",\"evelato\",\"eveldoc'h\",\"eveldomp\",\"eveldon\",\"eveldor\",\"eveldout\",\"evelkent\",\"eveltañ\",\"evelte\",\"evelti\",\"evelto\",\"evidoc'h\",\"evidomp\",\"evidon\",\"evidor\",\"evidout\",\"evit\",\"evitañ\",\"evite\",\"eviti\",\"evito\",\"ez\",\"eñ\",\"f:\",\"fac'h\",\"fall\",\"fed\",\"feiz\",\"fenn\",\"fezh\",\"fin\",\"finsalvet\",\"foei\",\"fouilhezañ\",\"g:\",\"gallout\",\"ganeoc'h\",\"ganeomp\",\"ganin\",\"ganit\",\"gant\",\"gantañ\",\"ganti\",\"ganto\",\"gaout\",\"gast\",\"gein\",\"gellout\",\"genndost\",\"gentañ\",\"ger\",\"gerz\",\"get\",\"geñver\",\"gichen\",\"gin\",\"giz\",\"glan\",\"gloev\",\"goll\",\"gorre\",\"goude\",\"gouez\",\"gouezit\",\"gouezomp\",\"goulz\",\"gounnar\",\"gour\",\"goust\",\"gouze\",\"gouzout\",\"gra\",\"grak\",\"grec'h\",\"greiz\",\"grenn\",\"greomp\",\"grit\",\"groñs\",\"gutez\",\"gwall\",\"gwashoc'h\",\"gwazh\",\"gwech\",\"gwechall\",\"gwechoù\",\"gwell\",\"gwezh\",\"gwezhall\",\"gwezharall\",\"gwezhoù\",\"gwig\",\"gwirionez\",\"gwitibunan\",\"gêr\",\"h:\",\"ha\",\"hag\",\"han\",\"hanter\",\"hanterc'hantad\",\"hanterkantved\",\"harz\",\"hañ\",\"hañval\",\"he\",\"hebioù\",\"hec'h\",\"hei\",\"hein\",\"hem\",\"hemañ\",\"hen\",\"hend\",\"henhont\",\"henn\",\"hennezh\",\"hent\",\"hep\",\"hervez\",\"hervezañ\",\"hervezi\",\"hervezo\",\"hervezoc'h\",\"hervezomp\",\"hervezon\",\"hervezor\",\"hervezout\",\"heul\",\"heuliañ\",\"hevelep\",\"heverk\",\"heñvel\",\"heñvelat\",\"heñvelañ\",\"heñveliñ\",\"heñveloc'h\",\"heñvelout\",\"hi\",\"hilh\",\"hini\",\"hirie\",\"hirio\",\"hiziv\",\"hiziviken\",\"ho\",\"hoaliñ\",\"hoc'h\",\"hogen\",\"hogos\",\"hogozik\",\"hol\",\"holl\",\"holà\",\"homañ\",\"hon\",\"honhont\",\"honnezh\",\"hont\",\"hop\",\"hopala\",\"hor\",\"hou\",\"houp\",\"hudu\",\"hue\",\"hui\",\"hum\",\"hurrah\",\"i\",\"i:\",\"in\",\"int\",\"is\",\"ispisial\",\"isurzhiet\",\"it\",\"ivez\",\"izelañ\",\"j:\",\"just\",\"k:\",\"kae\",\"kaer\",\"kalon\",\"kalz\",\"kant\",\"kaout\",\"kar\",\"kazi\",\"keid\",\"kein\",\"keit\",\"kel\",\"kellies\",\"keloù\",\"kement\",\"ken\",\"kenkent\",\"kenkoulz\",\"kenment\",\"kent\",\"kentañ\",\"kentizh\",\"kentoc'h\",\"kentre\",\"ker\",\"kerkent\",\"kerz\",\"kerzh\",\"ket\",\"keta\",\"keñver\",\"keñverel\",\"keñverius\",\"kichen\",\"kichenik\",\"kit\",\"kiz\",\"klak\",\"klek\",\"klik\",\"komprenet\",\"komz\",\"kont\",\"korf\",\"korre\",\"koulskoude\",\"koulz\",\"koust\",\"krak\",\"krampouezh\",\"krec'h\",\"kreiz\",\"kuit\",\"kwir\",\"l:\",\"la\",\"laez\",\"laoskel\",\"laouen\",\"lavar\",\"lavaret\",\"lavarout\",\"lec'h\",\"lein\",\"leizh\",\"lerc'h\",\"leun\",\"leuskel\",\"lew\",\"lies\",\"liesañ\",\"lod\",\"lusk\",\"lâr\",\"lârout\",\"m:\",\"ma\",\"ma'z\",\"mac'h\",\"mac'hat\",\"mac'hañ\",\"mac'hoc'h\",\"mad\",\"maez\",\"maksimal\",\"mann\",\"mar\",\"mard\",\"marg\",\"marzh\",\"mat\",\"mañ\",\"me\",\"memes\",\"memestra\",\"merkapl\",\"mersi\",\"mes\",\"mesk\",\"met\",\"meur\",\"mil\",\"minimal\",\"moan\",\"moaniaat\",\"mod\",\"mont\",\"mout\",\"mui\",\"muiañ\",\"muioc'h\",\"n\",\"n'\",\"n:\",\"na\",\"nag\",\"naontek\",\"naturel\",\"nav\",\"navet\",\"ne\",\"nebeudig\",\"nebeut\",\"nebeutañ\",\"nebeutoc'h\",\"neketa\",\"nemedoc'h\",\"nemedomp\",\"nemedon\",\"nemedor\",\"nemedout\",\"nemet\",\"nemetañ\",\"nemete\",\"nemeti\",\"nemeto\",\"nemeur\",\"neoac'h\",\"nepell\",\"nerzh\",\"nes\",\"neseser\",\"netra\",\"neubeudoù\",\"neuhe\",\"neuze\",\"nevez\",\"newazh\",\"nez\",\"ni\",\"nikun\",\"niverus\",\"nul\",\"o\",\"o:\",\"oa\",\"oac'h\",\"oad\",\"oamp\",\"oan\",\"oant\",\"oar\",\"oas\",\"ober\",\"oc'h\",\"oc'ho\",\"oc'hola\",\"oc'hpenn\",\"oh\",\"ohe\",\"ollé\",\"olole\",\"olé\",\"omp\",\"on\",\"ordin\",\"ordinal\",\"ouejoc'h\",\"ouejod\",\"ouejomp\",\"ouejont\",\"ouejout\",\"ouek\",\"ouezas\",\"ouezi\",\"ouezimp\",\"ouezin\",\"ouezint\",\"ouezis\",\"ouezo\",\"ouezoc'h\",\"ouezor\",\"ouf\",\"oufe\",\"oufec'h\",\"oufed\",\"oufemp\",\"oufen\",\"oufent\",\"oufes\",\"ouie\",\"ouiec'h\",\"ouied\",\"ouiemp\",\"ouien\",\"ouient\",\"ouies\",\"ouije\",\"ouijec'h\",\"ouijed\",\"ouijemp\",\"ouijen\",\"ouijent\",\"ouijes\",\"out\",\"outañ\",\"outi\",\"outo\",\"ouzer\",\"ouzh\",\"ouzhin\",\"ouzhit\",\"ouzhoc'h\",\"ouzhomp\",\"ouzhor\",\"ouzhpenn\",\"ouzhpennik\",\"ouzoc'h\",\"ouzomp\",\"ouzon\",\"ouzont\",\"ouzout\",\"p'\",\"p:\",\"pa\",\"pad\",\"padal\",\"paf\",\"pan\",\"panevedeoc'h\",\"panevedo\",\"panevedomp\",\"panevedon\",\"panevedout\",\"panevet\",\"panevetañ\",\"paneveti\",\"pas\",\"paseet\",\"pe\",\"peadra\",\"peder\",\"pedervet\",\"pedervetvet\",\"pefe\",\"pegeit\",\"pegement\",\"pegen\",\"pegiz\",\"pegoulz\",\"pehini\",\"pelec'h\",\"pell\",\"pemod\",\"pemp\",\"pempved\",\"pemzek\",\"penaos\",\"penn\",\"peogwir\",\"peotramant\",\"pep\",\"perak\",\"perc'hennañ\",\"pergen\",\"permetiñ\",\"peseurt\",\"pet\",\"petiaoul\",\"petoare\",\"petra\",\"peur\",\"peurgetket\",\"peurheñvel\",\"peurliesañ\",\"peurvuiañ\",\"peus\",\"peustost\",\"peuz\",\"pevar\",\"pevare\",\"pevarevet\",\"pevarzek\",\"pez\",\"peze\",\"pezh\",\"pff\",\"pfft\",\"pfut\",\"picher\",\"pif\",\"pife\",\"pign\",\"pije\",\"pikol\",\"pitiaoul\",\"piv\",\"plaouf\",\"plok\",\"plouf\",\"po\",\"poa\",\"poelladus\",\"pof\",\"pok\",\"posupl\",\"pouah\",\"pourc'henn\",\"prest\",\"prestik\",\"prim\",\"prin\",\"provostapl\",\"pst\",\"pu\",\"pur\",\"r:\",\"ra\",\"rae\",\"raec'h\",\"raed\",\"raemp\",\"raen\",\"raent\",\"raes\",\"rafe\",\"rafec'h\",\"rafed\",\"rafemp\",\"rafen\",\"rafent\",\"rafes\",\"rag\",\"raimp\",\"raint\",\"raio\",\"raje\",\"rajec'h\",\"rajed\",\"rajemp\",\"rajen\",\"rajent\",\"rajes\",\"rak\",\"ral\",\"ran\",\"rankout\",\"raok\",\"razh\",\"re\",\"reas\",\"reer\",\"regennoù\",\"reiñ\",\"rejoc'h\",\"rejod\",\"rejomp\",\"rejont\",\"rejout\",\"rener\",\"rentañ\",\"reoc'h\",\"reomp\",\"reont\",\"reor\",\"reot\",\"resis\",\"ret\",\"reve\",\"rez\",\"ri\",\"rik\",\"rin\",\"ris\",\"rit\",\"rouez\",\"s:\",\"sac'h\",\"sant\",\"sav\",\"sañset\",\"se\",\"sed\",\"seitek\",\"seizh\",\"seizhvet\",\"sell\",\"sellit\",\"ser\",\"setu\",\"seul\",\"seurt\",\"siwazh\",\"skignañ\",\"skoaz\",\"skouer\",\"sort\",\"souden\",\"souvitañ\",\"soñj\",\"speriañ\",\"spririñ\",\"stad\",\"stlabezañ\",\"stop\",\"stranañ\",\"strewiñ\",\"strishaat\",\"stumm\",\"sujed\",\"surtoud\",\"t:\",\"ta\",\"taer\",\"tailh\",\"tak\",\"tal\",\"talvoudegezh\",\"tamm\",\"tanav\",\"taol\",\"te\",\"techet\",\"teir\",\"teirvet\",\"telt\",\"teltenn\",\"teus\",\"teut\",\"teuteu\",\"ti\",\"tik\",\"toa\",\"tok\",\"tost\",\"tostig\",\"toud\",\"touesk\",\"touez\",\"toull\",\"tra\",\"trantenn\",\"traoñ\",\"trawalc'h\",\"tre\",\"trede\",\"tregont\",\"tremenet\",\"tri\",\"trivet\",\"triwec'h\",\"trizek\",\"tro\",\"trugarez\",\"trumm\",\"tsoin\",\"tsouin\",\"tu\",\"tud\",\"u:\",\"ugent\",\"uhel\",\"uhelañ\",\"ul\",\"un\",\"unan\",\"unanez\",\"unanig\",\"unnek\",\"unnekvet\",\"ur\",\"urzh\",\"us\",\"v:\",\"va\",\"vale\",\"van\",\"vare\",\"vat\",\"vefe\",\"vefec'h\",\"vefed\",\"vefemp\",\"vefen\",\"vefent\",\"vefes\",\"vesk\",\"vete\",\"vez\",\"vezan\",\"vezañ\",\"veze\",\"vezec'h\",\"vezed\",\"vezemp\",\"vezen\",\"vezent\",\"vezer\",\"vezes\",\"vezez\",\"vezit\",\"vezomp\",\"vezont\",\"vi\",\"vihan\",\"vihanañ\",\"vije\",\"vijec'h\",\"vijed\",\"vijemp\",\"vijen\",\"vijent\",\"vijes\",\"viken\",\"vimp\",\"vin\",\"vint\",\"vior\",\"viot\",\"virviken\",\"viskoazh\",\"vlan\",\"vlaou\",\"vo\",\"vod\",\"voe\",\"voec'h\",\"voed\",\"voemp\",\"voen\",\"voent\",\"voes\",\"vont\",\"vostapl\",\"vrac'h\",\"vrasañ\",\"vremañ\",\"w:\",\"walc'h\",\"war\",\"warnañ\",\"warni\",\"warno\",\"warnoc'h\",\"warnomp\",\"warnon\",\"warnor\",\"warnout\",\"wazh\",\"wech\",\"wechoù\",\"well\",\"y:\",\"you\",\"youadenn\",\"youc'hadenn\",\"youc'hou\",\"z:\",\"za\",\"zan\",\"zaw\",\"zeu\",\"zi\",\"ziar\",\"zigarez\",\"ziget\",\"zindan\",\"zioc'h\",\"ziouzh\",\"zirak\",\"zivout\",\"ziwar\",\"ziwezhañ\",\"zo\",\"zoken\",\"zokenoc'h\",\"zouesk\",\"zouez\",\"zro\",\"zu\"],bg:[\"а\",\"автентичен\",\"аз\",\"ако\",\"ала\",\"бе\",\"без\",\"беше\",\"би\",\"бивш\",\"бивша\",\"бившо\",\"бил\",\"била\",\"били\",\"било\",\"благодаря\",\"близо\",\"бъдат\",\"бъде\",\"бяха\",\"в\",\"вас\",\"ваш\",\"ваша\",\"вероятно\",\"вече\",\"взема\",\"ви\",\"вие\",\"винаги\",\"внимава\",\"време\",\"все\",\"всеки\",\"всички\",\"всичко\",\"всяка\",\"във\",\"въпреки\",\"върху\",\"г\",\"ги\",\"главен\",\"главна\",\"главно\",\"глас\",\"го\",\"година\",\"години\",\"годишен\",\"д\",\"да\",\"дали\",\"два\",\"двама\",\"двамата\",\"две\",\"двете\",\"ден\",\"днес\",\"дни\",\"до\",\"добра\",\"добре\",\"добро\",\"добър\",\"докато\",\"докога\",\"дори\",\"досега\",\"доста\",\"друг\",\"друга\",\"други\",\"е\",\"евтин\",\"едва\",\"един\",\"една\",\"еднаква\",\"еднакви\",\"еднакъв\",\"едно\",\"екип\",\"ето\",\"живот\",\"за\",\"забавям\",\"зад\",\"заедно\",\"заради\",\"засега\",\"заспал\",\"затова\",\"защо\",\"защото\",\"и\",\"из\",\"или\",\"им\",\"има\",\"имат\",\"иска\",\"й\",\"каза\",\"как\",\"каква\",\"какво\",\"както\",\"какъв\",\"като\",\"кога\",\"когато\",\"което\",\"които\",\"кой\",\"който\",\"колко\",\"която\",\"къде\",\"където\",\"към\",\"лесен\",\"лесно\",\"ли\",\"лош\",\"м\",\"май\",\"малко\",\"ме\",\"между\",\"мек\",\"мен\",\"месец\",\"ми\",\"много\",\"мнозина\",\"мога\",\"могат\",\"може\",\"мокър\",\"моля\",\"момента\",\"му\",\"н\",\"на\",\"над\",\"назад\",\"най\",\"направи\",\"напред\",\"например\",\"нас\",\"не\",\"него\",\"нещо\",\"нея\",\"ни\",\"ние\",\"никой\",\"нито\",\"нищо\",\"но\",\"нов\",\"нова\",\"нови\",\"новина\",\"някои\",\"някой\",\"няколко\",\"няма\",\"обаче\",\"около\",\"освен\",\"особено\",\"от\",\"отгоре\",\"отново\",\"още\",\"пак\",\"по\",\"повече\",\"повечето\",\"под\",\"поне\",\"поради\",\"после\",\"почти\",\"прави\",\"пред\",\"преди\",\"през\",\"при\",\"пък\",\"първата\",\"първи\",\"първо\",\"пъти\",\"равен\",\"равна\",\"с\",\"са\",\"сам\",\"само\",\"се\",\"сега\",\"си\",\"син\",\"скоро\",\"след\",\"следващ\",\"сме\",\"смях\",\"според\",\"сред\",\"срещу\",\"сте\",\"съм\",\"със\",\"също\",\"т\",\"т.н.\",\"тази\",\"така\",\"такива\",\"такъв\",\"там\",\"твой\",\"те\",\"тези\",\"ти\",\"то\",\"това\",\"тогава\",\"този\",\"той\",\"толкова\",\"точно\",\"три\",\"трябва\",\"тук\",\"тъй\",\"тя\",\"тях\",\"у\",\"утре\",\"харесва\",\"хиляди\",\"ч\",\"часа\",\"че\",\"често\",\"чрез\",\"ще\",\"щом\",\"юмрук\",\"я\",\"як\"],ca:[\"a\",\"abans\",\"ací\",\"ah\",\"així\",\"això\",\"al\",\"aleshores\",\"algun\",\"alguna\",\"algunes\",\"alguns\",\"alhora\",\"allà\",\"allí\",\"allò\",\"als\",\"altra\",\"altre\",\"altres\",\"amb\",\"ambdues\",\"ambdós\",\"anar\",\"ans\",\"apa\",\"aquell\",\"aquella\",\"aquelles\",\"aquells\",\"aquest\",\"aquesta\",\"aquestes\",\"aquests\",\"aquí\",\"baix\",\"bastant\",\"bé\",\"cada\",\"cadascuna\",\"cadascunes\",\"cadascuns\",\"cadascú\",\"com\",\"consegueixo\",\"conseguim\",\"conseguir\",\"consigueix\",\"consigueixen\",\"consigueixes\",\"contra\",\"d'un\",\"d'una\",\"d'unes\",\"d'uns\",\"dalt\",\"de\",\"del\",\"dels\",\"des\",\"des de\",\"després\",\"dins\",\"dintre\",\"donat\",\"doncs\",\"durant\",\"e\",\"eh\",\"el\",\"elles\",\"ells\",\"els\",\"em\",\"en\",\"encara\",\"ens\",\"entre\",\"era\",\"erem\",\"eren\",\"eres\",\"es\",\"esta\",\"estan\",\"estat\",\"estava\",\"estaven\",\"estem\",\"esteu\",\"estic\",\"està\",\"estàvem\",\"estàveu\",\"et\",\"etc\",\"ets\",\"fa\",\"faig\",\"fan\",\"fas\",\"fem\",\"fer\",\"feu\",\"fi\",\"fins\",\"fora\",\"gairebé\",\"ha\",\"han\",\"has\",\"haver\",\"havia\",\"he\",\"hem\",\"heu\",\"hi\",\"ho\",\"i\",\"igual\",\"iguals\",\"inclòs\",\"ja\",\"jo\",\"l'hi\",\"la\",\"les\",\"li\",\"li'n\",\"llarg\",\"llavors\",\"m'he\",\"ma\",\"mal\",\"malgrat\",\"mateix\",\"mateixa\",\"mateixes\",\"mateixos\",\"me\",\"mentre\",\"meu\",\"meus\",\"meva\",\"meves\",\"mode\",\"molt\",\"molta\",\"moltes\",\"molts\",\"mon\",\"mons\",\"més\",\"n'he\",\"n'hi\",\"ne\",\"ni\",\"no\",\"nogensmenys\",\"només\",\"nosaltres\",\"nostra\",\"nostre\",\"nostres\",\"o\",\"oh\",\"oi\",\"on\",\"pas\",\"pel\",\"pels\",\"per\",\"per que\",\"perquè\",\"però\",\"poc\",\"poca\",\"pocs\",\"podem\",\"poden\",\"poder\",\"podeu\",\"poques\",\"potser\",\"primer\",\"propi\",\"puc\",\"qual\",\"quals\",\"quan\",\"quant\",\"que\",\"quelcom\",\"qui\",\"quin\",\"quina\",\"quines\",\"quins\",\"què\",\"s'ha\",\"s'han\",\"sa\",\"sabem\",\"saben\",\"saber\",\"sabeu\",\"sap\",\"saps\",\"semblant\",\"semblants\",\"sense\",\"ser\",\"ses\",\"seu\",\"seus\",\"seva\",\"seves\",\"si\",\"sobre\",\"sobretot\",\"soc\",\"solament\",\"sols\",\"som\",\"son\",\"sons\",\"sota\",\"sou\",\"sóc\",\"són\",\"t'ha\",\"t'han\",\"t'he\",\"ta\",\"tal\",\"també\",\"tampoc\",\"tan\",\"tant\",\"tanta\",\"tantes\",\"te\",\"tene\",\"tenim\",\"tenir\",\"teniu\",\"teu\",\"teus\",\"teva\",\"teves\",\"tinc\",\"ton\",\"tons\",\"tot\",\"tota\",\"totes\",\"tots\",\"un\",\"una\",\"unes\",\"uns\",\"us\",\"va\",\"vaig\",\"vam\",\"van\",\"vas\",\"veu\",\"vosaltres\",\"vostra\",\"vostre\",\"vostres\",\"érem\",\"éreu\",\"és\",\"éssent\",\"últim\",\"ús\"],zh:[\"、\",\"。\",\"〈\",\"〉\",\"《\",\"》\",\"一\",\"一个\",\"一些\",\"一何\",\"一切\",\"一则\",\"一方面\",\"一旦\",\"一来\",\"一样\",\"一种\",\"一般\",\"一转眼\",\"七\",\"万一\",\"三\",\"上\",\"上下\",\"下\",\"不\",\"不仅\",\"不但\",\"不光\",\"不单\",\"不只\",\"不外乎\",\"不如\",\"不妨\",\"不尽\",\"不尽然\",\"不得\",\"不怕\",\"不惟\",\"不成\",\"不拘\",\"不料\",\"不是\",\"不比\",\"不然\",\"不特\",\"不独\",\"不管\",\"不至于\",\"不若\",\"不论\",\"不过\",\"不问\",\"与\",\"与其\",\"与其说\",\"与否\",\"与此同时\",\"且\",\"且不说\",\"且说\",\"两者\",\"个\",\"个别\",\"中\",\"临\",\"为\",\"为了\",\"为什么\",\"为何\",\"为止\",\"为此\",\"为着\",\"乃\",\"乃至\",\"乃至于\",\"么\",\"之\",\"之一\",\"之所以\",\"之类\",\"乌乎\",\"乎\",\"乘\",\"九\",\"也\",\"也好\",\"也罢\",\"了\",\"二\",\"二来\",\"于\",\"于是\",\"于是乎\",\"云云\",\"云尔\",\"五\",\"些\",\"亦\",\"人\",\"人们\",\"人家\",\"什\",\"什么\",\"什么样\",\"今\",\"介于\",\"仍\",\"仍旧\",\"从\",\"从此\",\"从而\",\"他\",\"他人\",\"他们\",\"他们们\",\"以\",\"以上\",\"以为\",\"以便\",\"以免\",\"以及\",\"以故\",\"以期\",\"以来\",\"以至\",\"以至于\",\"以致\",\"们\",\"任\",\"任何\",\"任凭\",\"会\",\"似的\",\"但\",\"但凡\",\"但是\",\"何\",\"何以\",\"何况\",\"何处\",\"何时\",\"余外\",\"作为\",\"你\",\"你们\",\"使\",\"使得\",\"例如\",\"依\",\"依据\",\"依照\",\"便于\",\"俺\",\"俺们\",\"倘\",\"倘使\",\"倘或\",\"倘然\",\"倘若\",\"借\",\"借傥然\",\"假使\",\"假如\",\"假若\",\"做\",\"像\",\"儿\",\"先不先\",\"光\",\"光是\",\"全体\",\"全部\",\"八\",\"六\",\"兮\",\"共\",\"关于\",\"关于具体地说\",\"其\",\"其一\",\"其中\",\"其二\",\"其他\",\"其余\",\"其它\",\"其次\",\"具体地说\",\"具体说来\",\"兼之\",\"内\",\"再\",\"再其次\",\"再则\",\"再有\",\"再者\",\"再者说\",\"再说\",\"冒\",\"冲\",\"况且\",\"几\",\"几时\",\"凡\",\"凡是\",\"凭\",\"凭借\",\"出于\",\"出来\",\"分\",\"分别\",\"则\",\"则甚\",\"别\",\"别人\",\"别处\",\"别是\",\"别的\",\"别管\",\"别说\",\"到\",\"前后\",\"前此\",\"前者\",\"加之\",\"加以\",\"区\",\"即\",\"即令\",\"即使\",\"即便\",\"即如\",\"即或\",\"即若\",\"却\",\"去\",\"又\",\"又及\",\"及\",\"及其\",\"及至\",\"反之\",\"反而\",\"反过来\",\"反过来说\",\"受到\",\"另\",\"另一方面\",\"另外\",\"另悉\",\"只\",\"只当\",\"只怕\",\"只是\",\"只有\",\"只消\",\"只要\",\"只限\",\"叫\",\"叮咚\",\"可\",\"可以\",\"可是\",\"可见\",\"各\",\"各个\",\"各位\",\"各种\",\"各自\",\"同\",\"同时\",\"后\",\"后者\",\"向\",\"向使\",\"向着\",\"吓\",\"吗\",\"否则\",\"吧\",\"吧哒\",\"含\",\"吱\",\"呀\",\"呃\",\"呕\",\"呗\",\"呜\",\"呜呼\",\"呢\",\"呵\",\"呵呵\",\"呸\",\"呼哧\",\"咋\",\"和\",\"咚\",\"咦\",\"咧\",\"咱\",\"咱们\",\"咳\",\"哇\",\"哈\",\"哈哈\",\"哉\",\"哎\",\"哎呀\",\"哎哟\",\"哗\",\"哟\",\"哦\",\"哩\",\"哪\",\"哪个\",\"哪些\",\"哪儿\",\"哪天\",\"哪年\",\"哪怕\",\"哪样\",\"哪边\",\"哪里\",\"哼\",\"哼唷\",\"唉\",\"唯有\",\"啊\",\"啐\",\"啥\",\"啦\",\"啪达\",\"啷当\",\"喂\",\"喏\",\"喔唷\",\"喽\",\"嗡\",\"嗡嗡\",\"嗬\",\"嗯\",\"嗳\",\"嘎\",\"嘎登\",\"嘘\",\"嘛\",\"嘻\",\"嘿\",\"嘿嘿\",\"四\",\"因\",\"因为\",\"因了\",\"因此\",\"因着\",\"因而\",\"固然\",\"在\",\"在下\",\"在于\",\"地\",\"基于\",\"处在\",\"多\",\"多么\",\"多少\",\"大\",\"大家\",\"她\",\"她们\",\"好\",\"如\",\"如上\",\"如上所述\",\"如下\",\"如何\",\"如其\",\"如同\",\"如是\",\"如果\",\"如此\",\"如若\",\"始而\",\"孰料\",\"孰知\",\"宁\",\"宁可\",\"宁愿\",\"宁肯\",\"它\",\"它们\",\"对\",\"对于\",\"对待\",\"对方\",\"对比\",\"将\",\"小\",\"尔\",\"尔后\",\"尔尔\",\"尚且\",\"就\",\"就是\",\"就是了\",\"就是说\",\"就算\",\"就要\",\"尽\",\"尽管\",\"尽管如此\",\"岂但\",\"己\",\"已\",\"已矣\",\"巴\",\"巴巴\",\"年\",\"并\",\"并且\",\"庶乎\",\"庶几\",\"开外\",\"开始\",\"归\",\"归齐\",\"当\",\"当地\",\"当然\",\"当着\",\"彼\",\"彼时\",\"彼此\",\"往\",\"待\",\"很\",\"得\",\"得了\",\"怎\",\"怎么\",\"怎么办\",\"怎么样\",\"怎奈\",\"怎样\",\"总之\",\"总的来看\",\"总的来说\",\"总的说来\",\"总而言之\",\"恰恰相反\",\"您\",\"惟其\",\"慢说\",\"我\",\"我们\",\"或\",\"或则\",\"或是\",\"或曰\",\"或者\",\"截至\",\"所\",\"所以\",\"所在\",\"所幸\",\"所有\",\"才\",\"才能\",\"打\",\"打从\",\"把\",\"抑或\",\"拿\",\"按\",\"按照\",\"换句话说\",\"换言之\",\"据\",\"据此\",\"接着\",\"故\",\"故此\",\"故而\",\"旁人\",\"无\",\"无宁\",\"无论\",\"既\",\"既往\",\"既是\",\"既然\",\"日\",\"时\",\"时候\",\"是\",\"是以\",\"是的\",\"更\",\"曾\",\"替\",\"替代\",\"最\",\"月\",\"有\",\"有些\",\"有关\",\"有及\",\"有时\",\"有的\",\"望\",\"朝\",\"朝着\",\"本\",\"本人\",\"本地\",\"本着\",\"本身\",\"来\",\"来着\",\"来自\",\"来说\",\"极了\",\"果然\",\"果真\",\"某\",\"某个\",\"某些\",\"某某\",\"根据\",\"欤\",\"正值\",\"正如\",\"正巧\",\"正是\",\"此\",\"此地\",\"此处\",\"此外\",\"此时\",\"此次\",\"此间\",\"毋宁\",\"每\",\"每当\",\"比\",\"比及\",\"比如\",\"比方\",\"没奈何\",\"沿\",\"沿着\",\"漫说\",\"点\",\"焉\",\"然则\",\"然后\",\"然而\",\"照\",\"照着\",\"犹且\",\"犹自\",\"甚且\",\"甚么\",\"甚或\",\"甚而\",\"甚至\",\"甚至于\",\"用\",\"用来\",\"由\",\"由于\",\"由是\",\"由此\",\"由此可见\",\"的\",\"的确\",\"的话\",\"直到\",\"相对而言\",\"省得\",\"看\",\"眨眼\",\"着\",\"着呢\",\"矣\",\"矣乎\",\"矣哉\",\"离\",\"秒\",\"称\",\"竟而\",\"第\",\"等\",\"等到\",\"等等\",\"简言之\",\"管\",\"类如\",\"紧接着\",\"纵\",\"纵令\",\"纵使\",\"纵然\",\"经\",\"经过\",\"结果\",\"给\",\"继之\",\"继后\",\"继而\",\"综上所述\",\"罢了\",\"者\",\"而\",\"而且\",\"而况\",\"而后\",\"而外\",\"而已\",\"而是\",\"而言\",\"能\",\"能否\",\"腾\",\"自\",\"自个儿\",\"自从\",\"自各儿\",\"自后\",\"自家\",\"自己\",\"自打\",\"自身\",\"至\",\"至于\",\"至今\",\"至若\",\"致\",\"般的\",\"若\",\"若夫\",\"若是\",\"若果\",\"若非\",\"莫不然\",\"莫如\",\"莫若\",\"虽\",\"虽则\",\"虽然\",\"虽说\",\"被\",\"要\",\"要不\",\"要不是\",\"要不然\",\"要么\",\"要是\",\"譬喻\",\"譬如\",\"让\",\"许多\",\"论\",\"设使\",\"设或\",\"设若\",\"诚如\",\"诚然\",\"该\",\"说\",\"说来\",\"请\",\"诸\",\"诸位\",\"诸如\",\"谁\",\"谁人\",\"谁料\",\"谁知\",\"贼死\",\"赖以\",\"赶\",\"起\",\"起见\",\"趁\",\"趁着\",\"越是\",\"距\",\"跟\",\"较\",\"较之\",\"边\",\"过\",\"还\",\"还是\",\"还有\",\"还要\",\"这\",\"这一来\",\"这个\",\"这么\",\"这么些\",\"这么样\",\"这么点儿\",\"这些\",\"这会儿\",\"这儿\",\"这就是说\",\"这时\",\"这样\",\"这次\",\"这般\",\"这边\",\"这里\",\"进而\",\"连\",\"连同\",\"逐步\",\"通过\",\"遵循\",\"遵照\",\"那\",\"那个\",\"那么\",\"那么些\",\"那么样\",\"那些\",\"那会儿\",\"那儿\",\"那时\",\"那样\",\"那般\",\"那边\",\"那里\",\"都\",\"鄙人\",\"鉴于\",\"针对\",\"阿\",\"除\",\"除了\",\"除外\",\"除开\",\"除此之外\",\"除非\",\"随\",\"随后\",\"随时\",\"随着\",\"难道说\",\"零\",\"非\",\"非但\",\"非徒\",\"非特\",\"非独\",\"靠\",\"顺\",\"顺着\",\"首先\",\"︿\",\"！\",\"＃\",\"＄\",\"％\",\"＆\",\"（\",\"）\",\"＊\",\"＋\",\"，\",\"０\",\"１\",\"２\",\"３\",\"４\",\"５\",\"６\",\"７\",\"８\",\"９\",\"：\",\"；\",\"＜\",\"＞\",\"？\",\"＠\",\"［\",\"］\",\"｛\",\"｜\",\"｝\",\"～\",\"￥\"],hr:[\"a\",\"ako\",\"ali\",\"bi\",\"bih\",\"bila\",\"bili\",\"bilo\",\"bio\",\"bismo\",\"biste\",\"biti\",\"bumo\",\"da\",\"do\",\"duž\",\"ga\",\"hoće\",\"hoćemo\",\"hoćete\",\"hoćeš\",\"hoću\",\"i\",\"iako\",\"ih\",\"ili\",\"iz\",\"ja\",\"je\",\"jedna\",\"jedne\",\"jedno\",\"jer\",\"jesam\",\"jesi\",\"jesmo\",\"jest\",\"jeste\",\"jesu\",\"jim\",\"joj\",\"još\",\"ju\",\"kada\",\"kako\",\"kao\",\"koja\",\"koje\",\"koji\",\"kojima\",\"koju\",\"kroz\",\"li\",\"me\",\"mene\",\"meni\",\"mi\",\"mimo\",\"moj\",\"moja\",\"moje\",\"mu\",\"na\",\"nad\",\"nakon\",\"nam\",\"nama\",\"nas\",\"naš\",\"naša\",\"naše\",\"našeg\",\"ne\",\"nego\",\"neka\",\"neki\",\"nekog\",\"neku\",\"nema\",\"netko\",\"neće\",\"nećemo\",\"nećete\",\"nećeš\",\"neću\",\"nešto\",\"ni\",\"nije\",\"nikoga\",\"nikoje\",\"nikoju\",\"nisam\",\"nisi\",\"nismo\",\"niste\",\"nisu\",\"njega\",\"njegov\",\"njegova\",\"njegovo\",\"njemu\",\"njezin\",\"njezina\",\"njezino\",\"njih\",\"njihov\",\"njihova\",\"njihovo\",\"njim\",\"njima\",\"njoj\",\"nju\",\"no\",\"o\",\"od\",\"odmah\",\"on\",\"ona\",\"oni\",\"ono\",\"ova\",\"pa\",\"pak\",\"po\",\"pod\",\"pored\",\"prije\",\"s\",\"sa\",\"sam\",\"samo\",\"se\",\"sebe\",\"sebi\",\"si\",\"smo\",\"ste\",\"su\",\"sve\",\"svi\",\"svog\",\"svoj\",\"svoja\",\"svoje\",\"svom\",\"ta\",\"tada\",\"taj\",\"tako\",\"te\",\"tebe\",\"tebi\",\"ti\",\"to\",\"toj\",\"tome\",\"tu\",\"tvoj\",\"tvoja\",\"tvoje\",\"u\",\"uz\",\"vam\",\"vama\",\"vas\",\"vaš\",\"vaša\",\"vaše\",\"već\",\"vi\",\"vrlo\",\"za\",\"zar\",\"će\",\"ćemo\",\"ćete\",\"ćeš\",\"ću\",\"što\"],cs:[\"a\",\"aby\",\"ahoj\",\"aj\",\"ale\",\"anebo\",\"ani\",\"aniž\",\"ano\",\"asi\",\"aspoň\",\"atd\",\"atp\",\"az\",\"ačkoli\",\"až\",\"bez\",\"beze\",\"blízko\",\"bohužel\",\"brzo\",\"bude\",\"budem\",\"budeme\",\"budes\",\"budete\",\"budeš\",\"budou\",\"budu\",\"by\",\"byl\",\"byla\",\"byli\",\"bylo\",\"byly\",\"bys\",\"byt\",\"být\",\"během\",\"chce\",\"chceme\",\"chcete\",\"chceš\",\"chci\",\"chtít\",\"chtějí\",\"chut'\",\"chuti\",\"ci\",\"clanek\",\"clanku\",\"clanky\",\"co\",\"coz\",\"což\",\"cz\",\"daleko\",\"dalsi\",\"další\",\"den\",\"deset\",\"design\",\"devatenáct\",\"devět\",\"dnes\",\"do\",\"dobrý\",\"docela\",\"dva\",\"dvacet\",\"dvanáct\",\"dvě\",\"dál\",\"dále\",\"děkovat\",\"děkujeme\",\"děkuji\",\"email\",\"ho\",\"hodně\",\"i\",\"jak\",\"jakmile\",\"jako\",\"jakož\",\"jde\",\"je\",\"jeden\",\"jedenáct\",\"jedna\",\"jedno\",\"jednou\",\"jedou\",\"jeho\",\"jehož\",\"jej\",\"jeji\",\"jejich\",\"její\",\"jelikož\",\"jemu\",\"jen\",\"jenom\",\"jenž\",\"jeste\",\"jestli\",\"jestliže\",\"ještě\",\"jež\",\"ji\",\"jich\",\"jimi\",\"jinak\",\"jine\",\"jiné\",\"jiz\",\"již\",\"jsem\",\"jses\",\"jseš\",\"jsi\",\"jsme\",\"jsou\",\"jste\",\"já\",\"jí\",\"jím\",\"jíž\",\"jšte\",\"k\",\"kam\",\"každý\",\"kde\",\"kdo\",\"kdy\",\"kdyz\",\"když\",\"ke\",\"kolik\",\"kromě\",\"ktera\",\"ktere\",\"kteri\",\"kterou\",\"ktery\",\"která\",\"které\",\"který\",\"kteři\",\"kteří\",\"ku\",\"kvůli\",\"ma\",\"mají\",\"mate\",\"me\",\"mezi\",\"mi\",\"mit\",\"mne\",\"mnou\",\"mně\",\"moc\",\"mohl\",\"mohou\",\"moje\",\"moji\",\"možná\",\"muj\",\"musí\",\"muze\",\"my\",\"má\",\"málo\",\"mám\",\"máme\",\"máte\",\"máš\",\"mé\",\"mí\",\"mít\",\"mě\",\"můj\",\"může\",\"na\",\"nad\",\"nade\",\"nam\",\"napiste\",\"napište\",\"naproti\",\"nas\",\"nasi\",\"načež\",\"naše\",\"naši\",\"ne\",\"nebo\",\"nebyl\",\"nebyla\",\"nebyli\",\"nebyly\",\"nechť\",\"nedělají\",\"nedělá\",\"nedělám\",\"neděláme\",\"neděláte\",\"neděláš\",\"neg\",\"nejsi\",\"nejsou\",\"nemají\",\"nemáme\",\"nemáte\",\"neměl\",\"neni\",\"není\",\"nestačí\",\"nevadí\",\"nez\",\"než\",\"nic\",\"nich\",\"nimi\",\"nove\",\"novy\",\"nové\",\"nový\",\"nula\",\"ná\",\"nám\",\"námi\",\"nás\",\"náš\",\"ní\",\"ním\",\"ně\",\"něco\",\"nějak\",\"někde\",\"někdo\",\"němu\",\"němuž\",\"o\",\"od\",\"ode\",\"on\",\"ona\",\"oni\",\"ono\",\"ony\",\"osm\",\"osmnáct\",\"pak\",\"patnáct\",\"po\",\"pod\",\"podle\",\"pokud\",\"potom\",\"pouze\",\"pozdě\",\"pořád\",\"prave\",\"pravé\",\"pred\",\"pres\",\"pri\",\"pro\",\"proc\",\"prostě\",\"prosím\",\"proti\",\"proto\",\"protoze\",\"protože\",\"proč\",\"prvni\",\"první\",\"práve\",\"pta\",\"pět\",\"před\",\"přede\",\"přes\",\"přese\",\"při\",\"přičemž\",\"re\",\"rovně\",\"s\",\"se\",\"sedm\",\"sedmnáct\",\"si\",\"sice\",\"skoro\",\"smí\",\"smějí\",\"snad\",\"spolu\",\"sta\",\"sto\",\"strana\",\"sté\",\"sve\",\"svych\",\"svym\",\"svymi\",\"své\",\"svých\",\"svým\",\"svými\",\"svůj\",\"ta\",\"tady\",\"tak\",\"take\",\"takhle\",\"taky\",\"takze\",\"také\",\"takže\",\"tam\",\"tamhle\",\"tamhleto\",\"tamto\",\"tato\",\"te\",\"tebe\",\"tebou\",\"ted'\",\"tedy\",\"tema\",\"ten\",\"tento\",\"teto\",\"ti\",\"tim\",\"timto\",\"tipy\",\"tisíc\",\"tisíce\",\"to\",\"tobě\",\"tohle\",\"toho\",\"tohoto\",\"tom\",\"tomto\",\"tomu\",\"tomuto\",\"toto\",\"trošku\",\"tu\",\"tuto\",\"tvoje\",\"tvá\",\"tvé\",\"tvůj\",\"ty\",\"tyto\",\"téma\",\"této\",\"tím\",\"tímto\",\"tě\",\"těm\",\"těma\",\"těmu\",\"třeba\",\"tři\",\"třináct\",\"u\",\"určitě\",\"uz\",\"už\",\"v\",\"vam\",\"vas\",\"vase\",\"vaše\",\"vaši\",\"ve\",\"vedle\",\"večer\",\"vice\",\"vlastně\",\"vsak\",\"vy\",\"vám\",\"vámi\",\"vás\",\"váš\",\"více\",\"však\",\"všechen\",\"všechno\",\"všichni\",\"vůbec\",\"vždy\",\"z\",\"za\",\"zatímco\",\"zač\",\"zda\",\"zde\",\"ze\",\"zpet\",\"zpravy\",\"zprávy\",\"zpět\",\"čau\",\"či\",\"článek\",\"článku\",\"články\",\"čtrnáct\",\"čtyři\",\"šest\",\"šestnáct\",\"že\"],da:[\"ad\",\"af\",\"aldrig\",\"alle\",\"alt\",\"anden\",\"andet\",\"andre\",\"at\",\"bare\",\"begge\",\"blev\",\"blive\",\"bliver\",\"da\",\"de\",\"dem\",\"den\",\"denne\",\"der\",\"deres\",\"det\",\"dette\",\"dig\",\"din\",\"dine\",\"disse\",\"dit\",\"dog\",\"du\",\"efter\",\"ej\",\"eller\",\"en\",\"end\",\"ene\",\"eneste\",\"enhver\",\"er\",\"et\",\"far\",\"fem\",\"fik\",\"fire\",\"flere\",\"fleste\",\"for\",\"fordi\",\"forrige\",\"fra\",\"få\",\"får\",\"før\",\"god\",\"godt\",\"ham\",\"han\",\"hans\",\"har\",\"havde\",\"have\",\"hej\",\"helt\",\"hende\",\"hendes\",\"her\",\"hos\",\"hun\",\"hvad\",\"hvem\",\"hver\",\"hvilken\",\"hvis\",\"hvor\",\"hvordan\",\"hvorfor\",\"hvornår\",\"i\",\"ikke\",\"ind\",\"ingen\",\"intet\",\"ja\",\"jeg\",\"jer\",\"jeres\",\"jo\",\"kan\",\"kom\",\"komme\",\"kommer\",\"kun\",\"kunne\",\"lad\",\"lav\",\"lidt\",\"lige\",\"lille\",\"man\",\"mand\",\"mange\",\"med\",\"meget\",\"men\",\"mens\",\"mere\",\"mig\",\"min\",\"mine\",\"mit\",\"mod\",\"må\",\"ned\",\"nej\",\"ni\",\"nogen\",\"noget\",\"nogle\",\"nu\",\"ny\",\"nyt\",\"når\",\"nær\",\"næste\",\"næsten\",\"og\",\"også\",\"okay\",\"om\",\"op\",\"os\",\"otte\",\"over\",\"på\",\"se\",\"seks\",\"selv\",\"ser\",\"ses\",\"sig\",\"sige\",\"sin\",\"sine\",\"sit\",\"skal\",\"skulle\",\"som\",\"stor\",\"store\",\"syv\",\"så\",\"sådan\",\"tag\",\"tage\",\"thi\",\"ti\",\"til\",\"to\",\"tre\",\"ud\",\"under\",\"var\",\"ved\",\"vi\",\"vil\",\"ville\",\"vor\",\"vores\",\"være\",\"været\"],nl:[\"aan\",\"aangaande\",\"aangezien\",\"achte\",\"achter\",\"achterna\",\"af\",\"afgelopen\",\"al\",\"aldaar\",\"aldus\",\"alhoewel\",\"alias\",\"alle\",\"allebei\",\"alleen\",\"alles\",\"als\",\"alsnog\",\"altijd\",\"altoos\",\"ander\",\"andere\",\"anders\",\"anderszins\",\"beetje\",\"behalve\",\"behoudens\",\"beide\",\"beiden\",\"ben\",\"beneden\",\"bent\",\"bepaald\",\"betreffende\",\"bij\",\"bijna\",\"bijv\",\"binnen\",\"binnenin\",\"blijkbaar\",\"blijken\",\"boven\",\"bovenal\",\"bovendien\",\"bovengenoemd\",\"bovenstaand\",\"bovenvermeld\",\"buiten\",\"bv\",\"daar\",\"daardoor\",\"daarheen\",\"daarin\",\"daarna\",\"daarnet\",\"daarom\",\"daarop\",\"daaruit\",\"daarvanlangs\",\"dan\",\"dat\",\"de\",\"deden\",\"deed\",\"der\",\"derde\",\"derhalve\",\"dertig\",\"deze\",\"dhr\",\"die\",\"dikwijls\",\"dit\",\"doch\",\"doe\",\"doen\",\"doet\",\"door\",\"doorgaand\",\"drie\",\"duizend\",\"dus\",\"echter\",\"een\",\"eens\",\"eer\",\"eerdat\",\"eerder\",\"eerlang\",\"eerst\",\"eerste\",\"eigen\",\"eigenlijk\",\"elk\",\"elke\",\"en\",\"enig\",\"enige\",\"enigszins\",\"enkel\",\"er\",\"erdoor\",\"erg\",\"ergens\",\"etc\",\"etcetera\",\"even\",\"eveneens\",\"evenwel\",\"gauw\",\"ge\",\"gedurende\",\"geen\",\"gehad\",\"gekund\",\"geleden\",\"gelijk\",\"gemoeten\",\"gemogen\",\"genoeg\",\"geweest\",\"gewoon\",\"gewoonweg\",\"haar\",\"haarzelf\",\"had\",\"hadden\",\"hare\",\"heb\",\"hebben\",\"hebt\",\"hedden\",\"heeft\",\"heel\",\"hem\",\"hemzelf\",\"hen\",\"het\",\"hetzelfde\",\"hier\",\"hierbeneden\",\"hierboven\",\"hierin\",\"hierna\",\"hierom\",\"hij\",\"hijzelf\",\"hoe\",\"hoewel\",\"honderd\",\"hun\",\"hunne\",\"ieder\",\"iedere\",\"iedereen\",\"iemand\",\"iets\",\"ik\",\"ikzelf\",\"in\",\"inderdaad\",\"inmiddels\",\"intussen\",\"inzake\",\"is\",\"ja\",\"je\",\"jezelf\",\"jij\",\"jijzelf\",\"jou\",\"jouw\",\"jouwe\",\"juist\",\"jullie\",\"kan\",\"klaar\",\"kon\",\"konden\",\"krachtens\",\"kun\",\"kunnen\",\"kunt\",\"laatst\",\"later\",\"liever\",\"lijken\",\"lijkt\",\"maak\",\"maakt\",\"maakte\",\"maakten\",\"maar\",\"mag\",\"maken\",\"me\",\"meer\",\"meest\",\"meestal\",\"men\",\"met\",\"mevr\",\"mezelf\",\"mij\",\"mijn\",\"mijnent\",\"mijner\",\"mijzelf\",\"minder\",\"miss\",\"misschien\",\"missen\",\"mits\",\"mocht\",\"mochten\",\"moest\",\"moesten\",\"moet\",\"moeten\",\"mogen\",\"mr\",\"mrs\",\"mw\",\"na\",\"naar\",\"nadat\",\"nam\",\"namelijk\",\"nee\",\"neem\",\"negen\",\"nemen\",\"nergens\",\"net\",\"niemand\",\"niet\",\"niets\",\"niks\",\"noch\",\"nochtans\",\"nog\",\"nogal\",\"nooit\",\"nu\",\"nv\",\"of\",\"ofschoon\",\"om\",\"omdat\",\"omhoog\",\"omlaag\",\"omstreeks\",\"omtrent\",\"omver\",\"ondanks\",\"onder\",\"ondertussen\",\"ongeveer\",\"ons\",\"onszelf\",\"onze\",\"onzeker\",\"ooit\",\"ook\",\"op\",\"opnieuw\",\"opzij\",\"over\",\"overal\",\"overeind\",\"overige\",\"overigens\",\"paar\",\"pas\",\"per\",\"precies\",\"recent\",\"redelijk\",\"reeds\",\"rond\",\"rondom\",\"samen\",\"sedert\",\"sinds\",\"sindsdien\",\"slechts\",\"sommige\",\"spoedig\",\"steeds\",\"tamelijk\",\"te\",\"tegen\",\"tegenover\",\"tenzij\",\"terwijl\",\"thans\",\"tien\",\"tiende\",\"tijdens\",\"tja\",\"toch\",\"toe\",\"toen\",\"toenmaals\",\"toenmalig\",\"tot\",\"totdat\",\"tussen\",\"twee\",\"tweede\",\"u\",\"uit\",\"uitgezonderd\",\"uw\",\"vaak\",\"vaakwat\",\"van\",\"vanaf\",\"vandaan\",\"vanuit\",\"vanwege\",\"veel\",\"veeleer\",\"veertig\",\"verder\",\"verscheidene\",\"verschillende\",\"vervolgens\",\"via\",\"vier\",\"vierde\",\"vijf\",\"vijfde\",\"vijftig\",\"vol\",\"volgend\",\"volgens\",\"voor\",\"vooraf\",\"vooral\",\"vooralsnog\",\"voorbij\",\"voordat\",\"voordezen\",\"voordien\",\"voorheen\",\"voorop\",\"voorts\",\"vooruit\",\"vrij\",\"vroeg\",\"waar\",\"waarom\",\"waarschijnlijk\",\"wanneer\",\"want\",\"waren\",\"was\",\"wat\",\"we\",\"wederom\",\"weer\",\"weg\",\"wegens\",\"weinig\",\"wel\",\"weldra\",\"welk\",\"welke\",\"werd\",\"werden\",\"werder\",\"wezen\",\"whatever\",\"wie\",\"wiens\",\"wier\",\"wij\",\"wijzelf\",\"wil\",\"wilden\",\"willen\",\"word\",\"worden\",\"wordt\",\"zal\",\"ze\",\"zei\",\"zeker\",\"zelf\",\"zelfde\",\"zelfs\",\"zes\",\"zeven\",\"zich\",\"zichzelf\",\"zij\",\"zijn\",\"zijne\",\"zijzelf\",\"zo\",\"zoals\",\"zodat\",\"zodra\",\"zonder\",\"zou\",\"zouden\",\"zowat\",\"zulk\",\"zulke\",\"zullen\",\"zult\"],en:[\"'ll\",\"'tis\",\"'twas\",\"'ve\",\"10\",\"39\",\"a\",\"a's\",\"able\",\"ableabout\",\"about\",\"above\",\"abroad\",\"abst\",\"accordance\",\"according\",\"accordingly\",\"across\",\"act\",\"actually\",\"ad\",\"added\",\"adj\",\"adopted\",\"ae\",\"af\",\"affected\",\"affecting\",\"affects\",\"after\",\"afterwards\",\"ag\",\"again\",\"against\",\"ago\",\"ah\",\"ahead\",\"ai\",\"ain't\",\"aint\",\"al\",\"all\",\"allow\",\"allows\",\"almost\",\"alone\",\"along\",\"alongside\",\"already\",\"also\",\"although\",\"always\",\"am\",\"amid\",\"amidst\",\"among\",\"amongst\",\"amoungst\",\"amount\",\"an\",\"and\",\"announce\",\"another\",\"any\",\"anybody\",\"anyhow\",\"anymore\",\"anyone\",\"anything\",\"anyway\",\"anyways\",\"anywhere\",\"ao\",\"apart\",\"apparently\",\"appear\",\"appreciate\",\"appropriate\",\"approximately\",\"aq\",\"ar\",\"are\",\"area\",\"areas\",\"aren\",\"aren't\",\"arent\",\"arise\",\"around\",\"arpa\",\"as\",\"aside\",\"ask\",\"asked\",\"asking\",\"asks\",\"associated\",\"at\",\"au\",\"auth\",\"available\",\"aw\",\"away\",\"awfully\",\"az\",\"b\",\"ba\",\"back\",\"backed\",\"backing\",\"backs\",\"backward\",\"backwards\",\"bb\",\"bd\",\"be\",\"became\",\"because\",\"become\",\"becomes\",\"becoming\",\"been\",\"before\",\"beforehand\",\"began\",\"begin\",\"beginning\",\"beginnings\",\"begins\",\"behind\",\"being\",\"beings\",\"believe\",\"below\",\"beside\",\"besides\",\"best\",\"better\",\"between\",\"beyond\",\"bf\",\"bg\",\"bh\",\"bi\",\"big\",\"bill\",\"billion\",\"biol\",\"bj\",\"bm\",\"bn\",\"bo\",\"both\",\"bottom\",\"br\",\"brief\",\"briefly\",\"bs\",\"bt\",\"but\",\"buy\",\"bv\",\"bw\",\"by\",\"bz\",\"c\",\"c'mon\",\"c's\",\"ca\",\"call\",\"came\",\"can\",\"can't\",\"cannot\",\"cant\",\"caption\",\"case\",\"cases\",\"cause\",\"causes\",\"cc\",\"cd\",\"certain\",\"certainly\",\"cf\",\"cg\",\"ch\",\"changes\",\"ci\",\"ck\",\"cl\",\"clear\",\"clearly\",\"click\",\"cm\",\"cmon\",\"cn\",\"co\",\"co.\",\"com\",\"come\",\"comes\",\"computer\",\"con\",\"concerning\",\"consequently\",\"consider\",\"considering\",\"contain\",\"containing\",\"contains\",\"copy\",\"corresponding\",\"could\",\"could've\",\"couldn\",\"couldn't\",\"couldnt\",\"course\",\"cr\",\"cry\",\"cs\",\"cu\",\"currently\",\"cv\",\"cx\",\"cy\",\"cz\",\"d\",\"dare\",\"daren't\",\"darent\",\"date\",\"de\",\"dear\",\"definitely\",\"describe\",\"described\",\"despite\",\"detail\",\"did\",\"didn\",\"didn't\",\"didnt\",\"differ\",\"different\",\"differently\",\"directly\",\"dj\",\"dk\",\"dm\",\"do\",\"does\",\"doesn\",\"doesn't\",\"doesnt\",\"doing\",\"don\",\"don't\",\"done\",\"dont\",\"doubtful\",\"down\",\"downed\",\"downing\",\"downs\",\"downwards\",\"due\",\"during\",\"dz\",\"e\",\"each\",\"early\",\"ec\",\"ed\",\"edu\",\"ee\",\"effect\",\"eg\",\"eh\",\"eight\",\"eighty\",\"either\",\"eleven\",\"else\",\"elsewhere\",\"empty\",\"end\",\"ended\",\"ending\",\"ends\",\"enough\",\"entirely\",\"er\",\"es\",\"especially\",\"et\",\"et-al\",\"etc\",\"even\",\"evenly\",\"ever\",\"evermore\",\"every\",\"everybody\",\"everyone\",\"everything\",\"everywhere\",\"ex\",\"exactly\",\"example\",\"except\",\"f\",\"face\",\"faces\",\"fact\",\"facts\",\"fairly\",\"far\",\"farther\",\"felt\",\"few\",\"fewer\",\"ff\",\"fi\",\"fifteen\",\"fifth\",\"fifty\",\"fify\",\"fill\",\"find\",\"finds\",\"fire\",\"first\",\"five\",\"fix\",\"fj\",\"fk\",\"fm\",\"fo\",\"followed\",\"following\",\"follows\",\"for\",\"forever\",\"former\",\"formerly\",\"forth\",\"forty\",\"forward\",\"found\",\"four\",\"fr\",\"free\",\"from\",\"front\",\"full\",\"fully\",\"further\",\"furthered\",\"furthering\",\"furthermore\",\"furthers\",\"fx\",\"g\",\"ga\",\"gave\",\"gb\",\"gd\",\"ge\",\"general\",\"generally\",\"get\",\"gets\",\"getting\",\"gf\",\"gg\",\"gh\",\"gi\",\"give\",\"given\",\"gives\",\"giving\",\"gl\",\"gm\",\"gmt\",\"gn\",\"go\",\"goes\",\"going\",\"gone\",\"good\",\"goods\",\"got\",\"gotten\",\"gov\",\"gp\",\"gq\",\"gr\",\"great\",\"greater\",\"greatest\",\"greetings\",\"group\",\"grouped\",\"grouping\",\"groups\",\"gs\",\"gt\",\"gu\",\"gw\",\"gy\",\"h\",\"had\",\"hadn't\",\"hadnt\",\"half\",\"happens\",\"hardly\",\"has\",\"hasn\",\"hasn't\",\"hasnt\",\"have\",\"haven\",\"haven't\",\"havent\",\"having\",\"he\",\"he'd\",\"he'll\",\"he's\",\"hed\",\"hell\",\"hello\",\"help\",\"hence\",\"her\",\"here\",\"here's\",\"hereafter\",\"hereby\",\"herein\",\"heres\",\"hereupon\",\"hers\",\"herself\",\"herse”\",\"hes\",\"hi\",\"hid\",\"high\",\"higher\",\"highest\",\"him\",\"himself\",\"himse”\",\"his\",\"hither\",\"hk\",\"hm\",\"hn\",\"home\",\"homepage\",\"hopefully\",\"how\",\"how'd\",\"how'll\",\"how's\",\"howbeit\",\"however\",\"hr\",\"ht\",\"htm\",\"html\",\"http\",\"hu\",\"hundred\",\"i\",\"i'd\",\"i'll\",\"i'm\",\"i've\",\"i.e.\",\"id\",\"ie\",\"if\",\"ignored\",\"ii\",\"il\",\"ill\",\"im\",\"immediate\",\"immediately\",\"importance\",\"important\",\"in\",\"inasmuch\",\"inc\",\"inc.\",\"indeed\",\"index\",\"indicate\",\"indicated\",\"indicates\",\"information\",\"inner\",\"inside\",\"insofar\",\"instead\",\"int\",\"interest\",\"interested\",\"interesting\",\"interests\",\"into\",\"invention\",\"inward\",\"io\",\"iq\",\"ir\",\"is\",\"isn\",\"isn't\",\"isnt\",\"it\",\"it'd\",\"it'll\",\"it's\",\"itd\",\"itll\",\"its\",\"itself\",\"itse”\",\"ive\",\"j\",\"je\",\"jm\",\"jo\",\"join\",\"jp\",\"just\",\"k\",\"ke\",\"keep\",\"keeps\",\"kept\",\"keys\",\"kg\",\"kh\",\"ki\",\"kind\",\"km\",\"kn\",\"knew\",\"know\",\"known\",\"knows\",\"kp\",\"kr\",\"kw\",\"ky\",\"kz\",\"l\",\"la\",\"large\",\"largely\",\"last\",\"lately\",\"later\",\"latest\",\"latter\",\"latterly\",\"lb\",\"lc\",\"least\",\"length\",\"less\",\"lest\",\"let\",\"let's\",\"lets\",\"li\",\"like\",\"liked\",\"likely\",\"likewise\",\"line\",\"little\",\"lk\",\"ll\",\"long\",\"longer\",\"longest\",\"look\",\"looking\",\"looks\",\"low\",\"lower\",\"lr\",\"ls\",\"lt\",\"ltd\",\"lu\",\"lv\",\"ly\",\"m\",\"ma\",\"made\",\"mainly\",\"make\",\"makes\",\"making\",\"man\",\"many\",\"may\",\"maybe\",\"mayn't\",\"maynt\",\"mc\",\"md\",\"me\",\"mean\",\"means\",\"meantime\",\"meanwhile\",\"member\",\"members\",\"men\",\"merely\",\"mg\",\"mh\",\"microsoft\",\"might\",\"might've\",\"mightn't\",\"mightnt\",\"mil\",\"mill\",\"million\",\"mine\",\"minus\",\"miss\",\"mk\",\"ml\",\"mm\",\"mn\",\"mo\",\"more\",\"moreover\",\"most\",\"mostly\",\"move\",\"mp\",\"mq\",\"mr\",\"mrs\",\"ms\",\"msie\",\"mt\",\"mu\",\"much\",\"mug\",\"must\",\"must've\",\"mustn't\",\"mustnt\",\"mv\",\"mw\",\"mx\",\"my\",\"myself\",\"myse”\",\"mz\",\"n\",\"na\",\"name\",\"namely\",\"nay\",\"nc\",\"nd\",\"ne\",\"near\",\"nearly\",\"necessarily\",\"necessary\",\"need\",\"needed\",\"needing\",\"needn't\",\"neednt\",\"needs\",\"neither\",\"net\",\"netscape\",\"never\",\"neverf\",\"neverless\",\"nevertheless\",\"new\",\"newer\",\"newest\",\"next\",\"nf\",\"ng\",\"ni\",\"nine\",\"ninety\",\"nl\",\"no\",\"no-one\",\"nobody\",\"non\",\"none\",\"nonetheless\",\"noone\",\"nor\",\"normally\",\"nos\",\"not\",\"noted\",\"nothing\",\"notwithstanding\",\"novel\",\"now\",\"nowhere\",\"np\",\"nr\",\"nu\",\"null\",\"number\",\"numbers\",\"nz\",\"o\",\"obtain\",\"obtained\",\"obviously\",\"of\",\"off\",\"often\",\"oh\",\"ok\",\"okay\",\"old\",\"older\",\"oldest\",\"om\",\"omitted\",\"on\",\"once\",\"one\",\"one's\",\"ones\",\"only\",\"onto\",\"open\",\"opened\",\"opening\",\"opens\",\"opposite\",\"or\",\"ord\",\"order\",\"ordered\",\"ordering\",\"orders\",\"org\",\"other\",\"others\",\"otherwise\",\"ought\",\"oughtn't\",\"oughtnt\",\"our\",\"ours\",\"ourselves\",\"out\",\"outside\",\"over\",\"overall\",\"owing\",\"own\",\"p\",\"pa\",\"page\",\"pages\",\"part\",\"parted\",\"particular\",\"particularly\",\"parting\",\"parts\",\"past\",\"pe\",\"per\",\"perhaps\",\"pf\",\"pg\",\"ph\",\"pk\",\"pl\",\"place\",\"placed\",\"places\",\"please\",\"plus\",\"pm\",\"pmid\",\"pn\",\"point\",\"pointed\",\"pointing\",\"points\",\"poorly\",\"possible\",\"possibly\",\"potentially\",\"pp\",\"pr\",\"predominantly\",\"present\",\"presented\",\"presenting\",\"presents\",\"presumably\",\"previously\",\"primarily\",\"probably\",\"problem\",\"problems\",\"promptly\",\"proud\",\"provided\",\"provides\",\"pt\",\"put\",\"puts\",\"pw\",\"py\",\"q\",\"qa\",\"que\",\"quickly\",\"quite\",\"qv\",\"r\",\"ran\",\"rather\",\"rd\",\"re\",\"readily\",\"really\",\"reasonably\",\"recent\",\"recently\",\"ref\",\"refs\",\"regarding\",\"regardless\",\"regards\",\"related\",\"relatively\",\"research\",\"reserved\",\"respectively\",\"resulted\",\"resulting\",\"results\",\"right\",\"ring\",\"ro\",\"room\",\"rooms\",\"round\",\"ru\",\"run\",\"rw\",\"s\",\"sa\",\"said\",\"same\",\"saw\",\"say\",\"saying\",\"says\",\"sb\",\"sc\",\"sd\",\"se\",\"sec\",\"second\",\"secondly\",\"seconds\",\"section\",\"see\",\"seeing\",\"seem\",\"seemed\",\"seeming\",\"seems\",\"seen\",\"sees\",\"self\",\"selves\",\"sensible\",\"sent\",\"serious\",\"seriously\",\"seven\",\"seventy\",\"several\",\"sg\",\"sh\",\"shall\",\"shan't\",\"shant\",\"she\",\"she'd\",\"she'll\",\"she's\",\"shed\",\"shell\",\"shes\",\"should\",\"should've\",\"shouldn\",\"shouldn't\",\"shouldnt\",\"show\",\"showed\",\"showing\",\"shown\",\"showns\",\"shows\",\"si\",\"side\",\"sides\",\"significant\",\"significantly\",\"similar\",\"similarly\",\"since\",\"sincere\",\"site\",\"six\",\"sixty\",\"sj\",\"sk\",\"sl\",\"slightly\",\"sm\",\"small\",\"smaller\",\"smallest\",\"sn\",\"so\",\"some\",\"somebody\",\"someday\",\"somehow\",\"someone\",\"somethan\",\"something\",\"sometime\",\"sometimes\",\"somewhat\",\"somewhere\",\"soon\",\"sorry\",\"specifically\",\"specified\",\"specify\",\"specifying\",\"sr\",\"st\",\"state\",\"states\",\"still\",\"stop\",\"strongly\",\"su\",\"sub\",\"substantially\",\"successfully\",\"such\",\"sufficiently\",\"suggest\",\"sup\",\"sure\",\"sv\",\"sy\",\"system\",\"sz\",\"t\",\"t's\",\"take\",\"taken\",\"taking\",\"tc\",\"td\",\"tell\",\"ten\",\"tends\",\"test\",\"text\",\"tf\",\"tg\",\"th\",\"than\",\"thank\",\"thanks\",\"thanx\",\"that\",\"that'll\",\"that's\",\"that've\",\"thatll\",\"thats\",\"thatve\",\"the\",\"their\",\"theirs\",\"them\",\"themselves\",\"then\",\"thence\",\"there\",\"there'd\",\"there'll\",\"there're\",\"there's\",\"there've\",\"thereafter\",\"thereby\",\"thered\",\"therefore\",\"therein\",\"therell\",\"thereof\",\"therere\",\"theres\",\"thereto\",\"thereupon\",\"thereve\",\"these\",\"they\",\"they'd\",\"they'll\",\"they're\",\"they've\",\"theyd\",\"theyll\",\"theyre\",\"theyve\",\"thick\",\"thin\",\"thing\",\"things\",\"think\",\"thinks\",\"third\",\"thirty\",\"this\",\"thorough\",\"thoroughly\",\"those\",\"thou\",\"though\",\"thoughh\",\"thought\",\"thoughts\",\"thousand\",\"three\",\"throug\",\"through\",\"throughout\",\"thru\",\"thus\",\"til\",\"till\",\"tip\",\"tis\",\"tj\",\"tk\",\"tm\",\"tn\",\"to\",\"today\",\"together\",\"too\",\"took\",\"top\",\"toward\",\"towards\",\"tp\",\"tr\",\"tried\",\"tries\",\"trillion\",\"truly\",\"try\",\"trying\",\"ts\",\"tt\",\"turn\",\"turned\",\"turning\",\"turns\",\"tv\",\"tw\",\"twas\",\"twelve\",\"twenty\",\"twice\",\"two\",\"tz\",\"u\",\"ua\",\"ug\",\"uk\",\"um\",\"un\",\"under\",\"underneath\",\"undoing\",\"unfortunately\",\"unless\",\"unlike\",\"unlikely\",\"until\",\"unto\",\"up\",\"upon\",\"ups\",\"upwards\",\"us\",\"use\",\"used\",\"useful\",\"usefully\",\"usefulness\",\"uses\",\"using\",\"usually\",\"uucp\",\"uy\",\"uz\",\"v\",\"va\",\"value\",\"various\",\"vc\",\"ve\",\"versus\",\"very\",\"vg\",\"vi\",\"via\",\"viz\",\"vn\",\"vol\",\"vols\",\"vs\",\"vu\",\"w\",\"want\",\"wanted\",\"wanting\",\"wants\",\"was\",\"wasn\",\"wasn't\",\"wasnt\",\"way\",\"ways\",\"we\",\"we'd\",\"we'll\",\"we're\",\"we've\",\"web\",\"webpage\",\"website\",\"wed\",\"welcome\",\"well\",\"wells\",\"went\",\"were\",\"weren\",\"weren't\",\"werent\",\"weve\",\"wf\",\"what\",\"what'd\",\"what'll\",\"what's\",\"what've\",\"whatever\",\"whatll\",\"whats\",\"whatve\",\"when\",\"when'd\",\"when'll\",\"when's\",\"whence\",\"whenever\",\"where\",\"where'd\",\"where'll\",\"where's\",\"whereafter\",\"whereas\",\"whereby\",\"wherein\",\"wheres\",\"whereupon\",\"wherever\",\"whether\",\"which\",\"whichever\",\"while\",\"whilst\",\"whim\",\"whither\",\"who\",\"who'd\",\"who'll\",\"who's\",\"whod\",\"whoever\",\"whole\",\"wholl\",\"whom\",\"whomever\",\"whos\",\"whose\",\"why\",\"why'd\",\"why'll\",\"why's\",\"widely\",\"width\",\"will\",\"willing\",\"wish\",\"with\",\"within\",\"without\",\"won\",\"won't\",\"wonder\",\"wont\",\"words\",\"work\",\"worked\",\"working\",\"works\",\"world\",\"would\",\"would've\",\"wouldn\",\"wouldn't\",\"wouldnt\",\"ws\",\"www\",\"x\",\"y\",\"ye\",\"year\",\"years\",\"yes\",\"yet\",\"you\",\"you'd\",\"you'll\",\"you're\",\"you've\",\"youd\",\"youll\",\"young\",\"younger\",\"youngest\",\"your\",\"youre\",\"yours\",\"yourself\",\"yourselves\",\"youve\",\"yt\",\"yu\",\"z\",\"za\",\"zero\",\"zm\",\"zr\"],eo:[\"adiaŭ\",\"ajn\",\"al\",\"ankoraŭ\",\"antaŭ\",\"aŭ\",\"bonan\",\"bonvole\",\"bonvolu\",\"bv\",\"ci\",\"cia\",\"cian\",\"cin\",\"d-ro\",\"da\",\"de\",\"dek\",\"deka\",\"do\",\"doktor'\",\"doktoro\",\"du\",\"dua\",\"dum\",\"eble\",\"ekz\",\"ekzemple\",\"en\",\"estas\",\"estis\",\"estos\",\"estu\",\"estus\",\"eĉ\",\"f-no\",\"feliĉan\",\"for\",\"fraŭlino\",\"ha\",\"havas\",\"havis\",\"havos\",\"havu\",\"havus\",\"he\",\"ho\",\"hu\",\"ili\",\"ilia\",\"ilian\",\"ilin\",\"inter\",\"io\",\"ion\",\"iu\",\"iujn\",\"iun\",\"ja\",\"jam\",\"je\",\"jes\",\"k\",\"kaj\",\"ke\",\"kio\",\"kion\",\"kiu\",\"kiujn\",\"kiun\",\"kvankam\",\"kvar\",\"kvara\",\"kvazaŭ\",\"kvin\",\"kvina\",\"la\",\"li\",\"lia\",\"lian\",\"lin\",\"malantaŭ\",\"male\",\"malgraŭ\",\"mem\",\"mi\",\"mia\",\"mian\",\"min\",\"minus\",\"naŭ\",\"naŭa\",\"ne\",\"nek\",\"nenio\",\"nenion\",\"neniu\",\"neniun\",\"nepre\",\"ni\",\"nia\",\"nian\",\"nin\",\"nu\",\"nun\",\"nur\",\"ok\",\"oka\",\"oni\",\"onia\",\"onian\",\"onin\",\"plej\",\"pli\",\"plu\",\"plus\",\"por\",\"post\",\"preter\",\"s-no\",\"s-ro\",\"se\",\"sed\",\"sep\",\"sepa\",\"ses\",\"sesa\",\"si\",\"sia\",\"sian\",\"sin\",\"sinjor'\",\"sinjorino\",\"sinjoro\",\"sub\",\"super\",\"supren\",\"sur\",\"tamen\",\"tio\",\"tion\",\"tiu\",\"tiujn\",\"tiun\",\"tra\",\"tri\",\"tria\",\"tuj\",\"tute\",\"unu\",\"unua\",\"ve\",\"verŝajne\",\"vi\",\"via\",\"vian\",\"vin\",\"ĉi\",\"ĉio\",\"ĉion\",\"ĉiu\",\"ĉiujn\",\"ĉiun\",\"ĉu\",\"ĝi\",\"ĝia\",\"ĝian\",\"ĝin\",\"ĝis\",\"ĵus\",\"ŝi\",\"ŝia\",\"ŝin\"],et:[\"aga\",\"ei\",\"et\",\"ja\",\"jah\",\"kas\",\"kui\",\"kõik\",\"ma\",\"me\",\"mida\",\"midagi\",\"mind\",\"minu\",\"mis\",\"mu\",\"mul\",\"mulle\",\"nad\",\"nii\",\"oled\",\"olen\",\"oli\",\"oma\",\"on\",\"pole\",\"sa\",\"seda\",\"see\",\"selle\",\"siin\",\"siis\",\"ta\",\"te\",\"ära\"],fi:[\"aiemmin\",\"aika\",\"aikaa\",\"aikaan\",\"aikaisemmin\",\"aikaisin\",\"aikajen\",\"aikana\",\"aikoina\",\"aikoo\",\"aikovat\",\"aina\",\"ainakaan\",\"ainakin\",\"ainoa\",\"ainoat\",\"aiomme\",\"aion\",\"aiotte\",\"aist\",\"aivan\",\"ajan\",\"alas\",\"alemmas\",\"alkuisin\",\"alkuun\",\"alla\",\"alle\",\"aloitamme\",\"aloitan\",\"aloitat\",\"aloitatte\",\"aloitattivat\",\"aloitettava\",\"aloitettevaksi\",\"aloitettu\",\"aloitimme\",\"aloitin\",\"aloitit\",\"aloititte\",\"aloittaa\",\"aloittamatta\",\"aloitti\",\"aloittivat\",\"alta\",\"aluksi\",\"alussa\",\"alusta\",\"annettavaksi\",\"annetteva\",\"annettu\",\"ansiosta\",\"antaa\",\"antamatta\",\"antoi\",\"aoua\",\"apu\",\"asia\",\"asiaa\",\"asian\",\"asiasta\",\"asiat\",\"asioiden\",\"asioihin\",\"asioita\",\"asti\",\"avuksi\",\"avulla\",\"avun\",\"avutta\",\"edelle\",\"edelleen\",\"edellä\",\"edeltä\",\"edemmäs\",\"edes\",\"edessä\",\"edestä\",\"ehkä\",\"ei\",\"eikä\",\"eilen\",\"eivät\",\"eli\",\"ellei\",\"elleivät\",\"ellemme\",\"ellen\",\"ellet\",\"ellette\",\"emme\",\"en\",\"enemmän\",\"eniten\",\"ennen\",\"ensi\",\"ensimmäinen\",\"ensimmäiseksi\",\"ensimmäisen\",\"ensimmäisenä\",\"ensimmäiset\",\"ensimmäisiksi\",\"ensimmäisinä\",\"ensimmäisiä\",\"ensimmäistä\",\"ensin\",\"entinen\",\"entisen\",\"entisiä\",\"entisten\",\"entistä\",\"enää\",\"eri\",\"erittäin\",\"erityisesti\",\"eräiden\",\"eräs\",\"eräät\",\"esi\",\"esiin\",\"esillä\",\"esimerkiksi\",\"et\",\"eteen\",\"etenkin\",\"etessa\",\"ette\",\"ettei\",\"että\",\"haikki\",\"halua\",\"haluaa\",\"haluamatta\",\"haluamme\",\"haluan\",\"haluat\",\"haluatte\",\"haluavat\",\"halunnut\",\"halusi\",\"halusimme\",\"halusin\",\"halusit\",\"halusitte\",\"halusivat\",\"halutessa\",\"haluton\",\"he\",\"hei\",\"heidän\",\"heidät\",\"heihin\",\"heille\",\"heillä\",\"heiltä\",\"heissä\",\"heistä\",\"heitä\",\"helposti\",\"heti\",\"hetkellä\",\"hieman\",\"hitaasti\",\"hoikein\",\"huolimatta\",\"huomenna\",\"hyvien\",\"hyviin\",\"hyviksi\",\"hyville\",\"hyviltä\",\"hyvin\",\"hyvinä\",\"hyvissä\",\"hyvistä\",\"hyviä\",\"hyvä\",\"hyvät\",\"hyvää\",\"hän\",\"häneen\",\"hänelle\",\"hänellä\",\"häneltä\",\"hänen\",\"hänessä\",\"hänestä\",\"hänet\",\"häntä\",\"ihan\",\"ilman\",\"ilmeisesti\",\"itse\",\"itsensä\",\"itseään\",\"ja\",\"jo\",\"johon\",\"joiden\",\"joihin\",\"joiksi\",\"joilla\",\"joille\",\"joilta\",\"joina\",\"joissa\",\"joista\",\"joita\",\"joka\",\"jokainen\",\"jokin\",\"joko\",\"joksi\",\"joku\",\"jolla\",\"jolle\",\"jolloin\",\"jolta\",\"jompikumpi\",\"jona\",\"jonka\",\"jonkin\",\"jonne\",\"joo\",\"jopa\",\"jos\",\"joskus\",\"jossa\",\"josta\",\"jota\",\"jotain\",\"joten\",\"jotenkin\",\"jotenkuten\",\"jotka\",\"jotta\",\"jouduimme\",\"jouduin\",\"jouduit\",\"jouduitte\",\"joudumme\",\"joudun\",\"joudutte\",\"joukkoon\",\"joukossa\",\"joukosta\",\"joutua\",\"joutui\",\"joutuivat\",\"joutumaan\",\"joutuu\",\"joutuvat\",\"juuri\",\"jälkeen\",\"jälleen\",\"jää\",\"kahdeksan\",\"kahdeksannen\",\"kahdella\",\"kahdelle\",\"kahdelta\",\"kahden\",\"kahdessa\",\"kahdesta\",\"kahta\",\"kahteen\",\"kai\",\"kaiken\",\"kaikille\",\"kaikilta\",\"kaikkea\",\"kaikki\",\"kaikkia\",\"kaikkiaan\",\"kaikkialla\",\"kaikkialle\",\"kaikkialta\",\"kaikkien\",\"kaikkin\",\"kaksi\",\"kannalta\",\"kannattaa\",\"kanssa\",\"kanssaan\",\"kanssamme\",\"kanssani\",\"kanssanne\",\"kanssasi\",\"kauan\",\"kauemmas\",\"kaukana\",\"kautta\",\"kehen\",\"keiden\",\"keihin\",\"keiksi\",\"keille\",\"keillä\",\"keiltä\",\"keinä\",\"keissä\",\"keistä\",\"keitten\",\"keittä\",\"keitä\",\"keneen\",\"keneksi\",\"kenelle\",\"kenellä\",\"keneltä\",\"kenen\",\"kenenä\",\"kenessä\",\"kenestä\",\"kenet\",\"kenettä\",\"kennessästä\",\"kenties\",\"kerran\",\"kerta\",\"kertaa\",\"keskellä\",\"kesken\",\"keskimäärin\",\"ketkä\",\"ketä\",\"kiitos\",\"kohti\",\"koko\",\"kokonaan\",\"kolmas\",\"kolme\",\"kolmen\",\"kolmesti\",\"koska\",\"koskaan\",\"kovin\",\"kuin\",\"kuinka\",\"kuinkan\",\"kuitenkaan\",\"kuitenkin\",\"kuka\",\"kukaan\",\"kukin\",\"kukka\",\"kumpainen\",\"kumpainenkaan\",\"kumpi\",\"kumpikaan\",\"kumpikin\",\"kun\",\"kuten\",\"kuuden\",\"kuusi\",\"kuutta\",\"kylliksi\",\"kyllä\",\"kymmenen\",\"kyse\",\"liian\",\"liki\",\"lisäksi\",\"lisää\",\"lla\",\"luo\",\"luona\",\"lähekkäin\",\"lähelle\",\"lähellä\",\"läheltä\",\"lähemmäs\",\"lähes\",\"lähinnä\",\"lähtien\",\"läpi\",\"mahdollisimman\",\"mahdollista\",\"me\",\"meidän\",\"meidät\",\"meihin\",\"meille\",\"meillä\",\"meiltä\",\"meissä\",\"meistä\",\"meitä\",\"melkein\",\"melko\",\"menee\",\"meneet\",\"menemme\",\"menen\",\"menet\",\"menette\",\"menevät\",\"meni\",\"menimme\",\"menin\",\"menit\",\"menivät\",\"mennessä\",\"mennyt\",\"menossa\",\"mihin\",\"mikin\",\"miksi\",\"mikä\",\"mikäli\",\"mikään\",\"mille\",\"milloin\",\"milloinkan\",\"millä\",\"miltä\",\"minkä\",\"minne\",\"minua\",\"minulla\",\"minulle\",\"minulta\",\"minun\",\"minussa\",\"minusta\",\"minut\",\"minuun\",\"minä\",\"missä\",\"mistä\",\"miten\",\"mitkä\",\"mitä\",\"mitään\",\"moi\",\"molemmat\",\"mones\",\"monesti\",\"monet\",\"moni\",\"moniaalla\",\"moniaalle\",\"moniaalta\",\"monta\",\"muassa\",\"muiden\",\"muita\",\"muka\",\"mukaan\",\"mukaansa\",\"mukana\",\"mutta\",\"muu\",\"muualla\",\"muualle\",\"muualta\",\"muuanne\",\"muulloin\",\"muun\",\"muut\",\"muuta\",\"muutama\",\"muutaman\",\"muuten\",\"myöhemmin\",\"myös\",\"myöskin\",\"myöskään\",\"myötä\",\"ne\",\"neljä\",\"neljän\",\"neljää\",\"niiden\",\"niihin\",\"niiksi\",\"niille\",\"niillä\",\"niiltä\",\"niin\",\"niinä\",\"niissä\",\"niistä\",\"niitä\",\"noiden\",\"noihin\",\"noiksi\",\"noilla\",\"noille\",\"noilta\",\"noin\",\"noina\",\"noissa\",\"noista\",\"noita\",\"nopeammin\",\"nopeasti\",\"nopeiten\",\"nro\",\"nuo\",\"nyt\",\"näiden\",\"näihin\",\"näiksi\",\"näille\",\"näillä\",\"näiltä\",\"näin\",\"näinä\",\"näissä\",\"näissähin\",\"näissälle\",\"näissältä\",\"näissästä\",\"näistä\",\"näitä\",\"nämä\",\"ohi\",\"oikea\",\"oikealla\",\"oikein\",\"ole\",\"olemme\",\"olen\",\"olet\",\"olette\",\"oleva\",\"olevan\",\"olevat\",\"oli\",\"olimme\",\"olin\",\"olisi\",\"olisimme\",\"olisin\",\"olisit\",\"olisitte\",\"olisivat\",\"olit\",\"olitte\",\"olivat\",\"olla\",\"olleet\",\"olli\",\"ollut\",\"oma\",\"omaa\",\"omaan\",\"omaksi\",\"omalle\",\"omalta\",\"oman\",\"omassa\",\"omat\",\"omia\",\"omien\",\"omiin\",\"omiksi\",\"omille\",\"omilta\",\"omissa\",\"omista\",\"on\",\"onkin\",\"onko\",\"ovat\",\"paikoittain\",\"paitsi\",\"pakosti\",\"paljon\",\"paremmin\",\"parempi\",\"parhaillaan\",\"parhaiten\",\"perusteella\",\"peräti\",\"pian\",\"pieneen\",\"pieneksi\",\"pienelle\",\"pienellä\",\"pieneltä\",\"pienempi\",\"pienestä\",\"pieni\",\"pienin\",\"poikki\",\"puolesta\",\"puolestaan\",\"päälle\",\"runsaasti\",\"saakka\",\"sadam\",\"sama\",\"samaa\",\"samaan\",\"samalla\",\"samallalta\",\"samallassa\",\"samallasta\",\"saman\",\"samat\",\"samoin\",\"sata\",\"sataa\",\"satojen\",\"se\",\"seitsemän\",\"sekä\",\"sen\",\"seuraavat\",\"siellä\",\"sieltä\",\"siihen\",\"siinä\",\"siis\",\"siitä\",\"sijaan\",\"siksi\",\"sille\",\"silloin\",\"sillä\",\"silti\",\"siltä\",\"sinne\",\"sinua\",\"sinulla\",\"sinulle\",\"sinulta\",\"sinun\",\"sinussa\",\"sinusta\",\"sinut\",\"sinuun\",\"sinä\",\"sisäkkäin\",\"sisällä\",\"siten\",\"sitten\",\"sitä\",\"ssa\",\"sta\",\"suoraan\",\"suuntaan\",\"suuren\",\"suuret\",\"suuri\",\"suuria\",\"suurin\",\"suurten\",\"taa\",\"taas\",\"taemmas\",\"tahansa\",\"tai\",\"takaa\",\"takaisin\",\"takana\",\"takia\",\"tallä\",\"tapauksessa\",\"tarpeeksi\",\"tavalla\",\"tavoitteena\",\"te\",\"teidän\",\"teidät\",\"teihin\",\"teille\",\"teillä\",\"teiltä\",\"teissä\",\"teistä\",\"teitä\",\"tietysti\",\"todella\",\"toinen\",\"toisaalla\",\"toisaalle\",\"toisaalta\",\"toiseen\",\"toiseksi\",\"toisella\",\"toiselle\",\"toiselta\",\"toisemme\",\"toisen\",\"toisensa\",\"toisessa\",\"toisesta\",\"toista\",\"toistaiseksi\",\"toki\",\"tosin\",\"tuhannen\",\"tuhat\",\"tule\",\"tulee\",\"tulemme\",\"tulen\",\"tulet\",\"tulette\",\"tulevat\",\"tulimme\",\"tulin\",\"tulisi\",\"tulisimme\",\"tulisin\",\"tulisit\",\"tulisitte\",\"tulisivat\",\"tulit\",\"tulitte\",\"tulivat\",\"tulla\",\"tulleet\",\"tullut\",\"tuntuu\",\"tuo\",\"tuohon\",\"tuoksi\",\"tuolla\",\"tuolle\",\"tuolloin\",\"tuolta\",\"tuon\",\"tuona\",\"tuonne\",\"tuossa\",\"tuosta\",\"tuota\",\"tuotä\",\"tuskin\",\"tykö\",\"tähän\",\"täksi\",\"tälle\",\"tällä\",\"tällöin\",\"tältä\",\"tämä\",\"tämän\",\"tänne\",\"tänä\",\"tänään\",\"tässä\",\"tästä\",\"täten\",\"tätä\",\"täysin\",\"täytyvät\",\"täytyy\",\"täällä\",\"täältä\",\"ulkopuolella\",\"usea\",\"useasti\",\"useimmiten\",\"usein\",\"useita\",\"uudeksi\",\"uudelleen\",\"uuden\",\"uudet\",\"uusi\",\"uusia\",\"uusien\",\"uusinta\",\"uuteen\",\"uutta\",\"vaan\",\"vahemmän\",\"vai\",\"vaiheessa\",\"vaikea\",\"vaikean\",\"vaikeat\",\"vaikeilla\",\"vaikeille\",\"vaikeilta\",\"vaikeissa\",\"vaikeista\",\"vaikka\",\"vain\",\"varmasti\",\"varsin\",\"varsinkin\",\"varten\",\"vasen\",\"vasenmalla\",\"vasta\",\"vastaan\",\"vastakkain\",\"vastan\",\"verran\",\"vielä\",\"vierekkäin\",\"vieressä\",\"vieri\",\"viiden\",\"viime\",\"viimeinen\",\"viimeisen\",\"viimeksi\",\"viisi\",\"voi\",\"voidaan\",\"voimme\",\"voin\",\"voisi\",\"voit\",\"voitte\",\"voivat\",\"vuoden\",\"vuoksi\",\"vuosi\",\"vuosien\",\"vuosina\",\"vuotta\",\"vähemmän\",\"vähintään\",\"vähiten\",\"vähän\",\"välillä\",\"yhdeksän\",\"yhden\",\"yhdessä\",\"yhteen\",\"yhteensä\",\"yhteydessä\",\"yhteyteen\",\"yhtä\",\"yhtäälle\",\"yhtäällä\",\"yhtäältä\",\"yhtään\",\"yhä\",\"yksi\",\"yksin\",\"yksittäin\",\"yleensä\",\"ylemmäs\",\"yli\",\"ylös\",\"ympäri\",\"älköön\",\"älä\"],fr:[\"a\",\"abord\",\"absolument\",\"afin\",\"ah\",\"ai\",\"aie\",\"aient\",\"aies\",\"ailleurs\",\"ainsi\",\"ait\",\"allaient\",\"allo\",\"allons\",\"allô\",\"alors\",\"anterieur\",\"anterieure\",\"anterieures\",\"apres\",\"après\",\"as\",\"assez\",\"attendu\",\"au\",\"aucun\",\"aucune\",\"aucuns\",\"aujourd\",\"aujourd'hui\",\"aupres\",\"auquel\",\"aura\",\"aurai\",\"auraient\",\"aurais\",\"aurait\",\"auras\",\"aurez\",\"auriez\",\"aurions\",\"aurons\",\"auront\",\"aussi\",\"autant\",\"autre\",\"autrefois\",\"autrement\",\"autres\",\"autrui\",\"aux\",\"auxquelles\",\"auxquels\",\"avaient\",\"avais\",\"avait\",\"avant\",\"avec\",\"avez\",\"aviez\",\"avions\",\"avoir\",\"avons\",\"ayant\",\"ayez\",\"ayons\",\"b\",\"bah\",\"bas\",\"basee\",\"bat\",\"beau\",\"beaucoup\",\"bien\",\"bigre\",\"bon\",\"boum\",\"bravo\",\"brrr\",\"c\",\"car\",\"ce\",\"ceci\",\"cela\",\"celle\",\"celle-ci\",\"celle-là\",\"celles\",\"celles-ci\",\"celles-là\",\"celui\",\"celui-ci\",\"celui-là\",\"celà\",\"cent\",\"cependant\",\"certain\",\"certaine\",\"certaines\",\"certains\",\"certes\",\"ces\",\"cet\",\"cette\",\"ceux\",\"ceux-ci\",\"ceux-là\",\"chacun\",\"chacune\",\"chaque\",\"cher\",\"chers\",\"chez\",\"chiche\",\"chut\",\"chère\",\"chères\",\"ci\",\"cinq\",\"cinquantaine\",\"cinquante\",\"cinquantième\",\"cinquième\",\"clac\",\"clic\",\"combien\",\"comme\",\"comment\",\"comparable\",\"comparables\",\"compris\",\"concernant\",\"contre\",\"couic\",\"crac\",\"d\",\"da\",\"dans\",\"de\",\"debout\",\"dedans\",\"dehors\",\"deja\",\"delà\",\"depuis\",\"dernier\",\"derniere\",\"derriere\",\"derrière\",\"des\",\"desormais\",\"desquelles\",\"desquels\",\"dessous\",\"dessus\",\"deux\",\"deuxième\",\"deuxièmement\",\"devant\",\"devers\",\"devra\",\"devrait\",\"different\",\"differentes\",\"differents\",\"différent\",\"différente\",\"différentes\",\"différents\",\"dire\",\"directe\",\"directement\",\"dit\",\"dite\",\"dits\",\"divers\",\"diverse\",\"diverses\",\"dix\",\"dix-huit\",\"dix-neuf\",\"dix-sept\",\"dixième\",\"doit\",\"doivent\",\"donc\",\"dont\",\"dos\",\"douze\",\"douzième\",\"dring\",\"droite\",\"du\",\"duquel\",\"durant\",\"dès\",\"début\",\"désormais\",\"e\",\"effet\",\"egale\",\"egalement\",\"egales\",\"eh\",\"elle\",\"elle-même\",\"elles\",\"elles-mêmes\",\"en\",\"encore\",\"enfin\",\"entre\",\"envers\",\"environ\",\"es\",\"essai\",\"est\",\"et\",\"etant\",\"etc\",\"etre\",\"eu\",\"eue\",\"eues\",\"euh\",\"eurent\",\"eus\",\"eusse\",\"eussent\",\"eusses\",\"eussiez\",\"eussions\",\"eut\",\"eux\",\"eux-mêmes\",\"exactement\",\"excepté\",\"extenso\",\"exterieur\",\"eûmes\",\"eût\",\"eûtes\",\"f\",\"fais\",\"faisaient\",\"faisant\",\"fait\",\"faites\",\"façon\",\"feront\",\"fi\",\"flac\",\"floc\",\"fois\",\"font\",\"force\",\"furent\",\"fus\",\"fusse\",\"fussent\",\"fusses\",\"fussiez\",\"fussions\",\"fut\",\"fûmes\",\"fût\",\"fûtes\",\"g\",\"gens\",\"h\",\"ha\",\"haut\",\"hein\",\"hem\",\"hep\",\"hi\",\"ho\",\"holà\",\"hop\",\"hormis\",\"hors\",\"hou\",\"houp\",\"hue\",\"hui\",\"huit\",\"huitième\",\"hum\",\"hurrah\",\"hé\",\"hélas\",\"i\",\"ici\",\"il\",\"ils\",\"importe\",\"j\",\"je\",\"jusqu\",\"jusque\",\"juste\",\"k\",\"l\",\"la\",\"laisser\",\"laquelle\",\"las\",\"le\",\"lequel\",\"les\",\"lesquelles\",\"lesquels\",\"leur\",\"leurs\",\"longtemps\",\"lors\",\"lorsque\",\"lui\",\"lui-meme\",\"lui-même\",\"là\",\"lès\",\"m\",\"ma\",\"maint\",\"maintenant\",\"mais\",\"malgre\",\"malgré\",\"maximale\",\"me\",\"meme\",\"memes\",\"merci\",\"mes\",\"mien\",\"mienne\",\"miennes\",\"miens\",\"mille\",\"mince\",\"mine\",\"minimale\",\"moi\",\"moi-meme\",\"moi-même\",\"moindres\",\"moins\",\"mon\",\"mot\",\"moyennant\",\"multiple\",\"multiples\",\"même\",\"mêmes\",\"n\",\"na\",\"naturel\",\"naturelle\",\"naturelles\",\"ne\",\"neanmoins\",\"necessaire\",\"necessairement\",\"neuf\",\"neuvième\",\"ni\",\"nombreuses\",\"nombreux\",\"nommés\",\"non\",\"nos\",\"notamment\",\"notre\",\"nous\",\"nous-mêmes\",\"nouveau\",\"nouveaux\",\"nul\",\"néanmoins\",\"nôtre\",\"nôtres\",\"o\",\"oh\",\"ohé\",\"ollé\",\"olé\",\"on\",\"ont\",\"onze\",\"onzième\",\"ore\",\"ou\",\"ouf\",\"ouias\",\"oust\",\"ouste\",\"outre\",\"ouvert\",\"ouverte\",\"ouverts\",\"o|\",\"où\",\"p\",\"paf\",\"pan\",\"par\",\"parce\",\"parfois\",\"parle\",\"parlent\",\"parler\",\"parmi\",\"parole\",\"parseme\",\"partant\",\"particulier\",\"particulière\",\"particulièrement\",\"pas\",\"passé\",\"pendant\",\"pense\",\"permet\",\"personne\",\"personnes\",\"peu\",\"peut\",\"peuvent\",\"peux\",\"pff\",\"pfft\",\"pfut\",\"pif\",\"pire\",\"pièce\",\"plein\",\"plouf\",\"plupart\",\"plus\",\"plusieurs\",\"plutôt\",\"possessif\",\"possessifs\",\"possible\",\"possibles\",\"pouah\",\"pour\",\"pourquoi\",\"pourrais\",\"pourrait\",\"pouvait\",\"prealable\",\"precisement\",\"premier\",\"première\",\"premièrement\",\"pres\",\"probable\",\"probante\",\"procedant\",\"proche\",\"près\",\"psitt\",\"pu\",\"puis\",\"puisque\",\"pur\",\"pure\",\"q\",\"qu\",\"quand\",\"quant\",\"quant-à-soi\",\"quanta\",\"quarante\",\"quatorze\",\"quatre\",\"quatre-vingt\",\"quatrième\",\"quatrièmement\",\"que\",\"quel\",\"quelconque\",\"quelle\",\"quelles\",\"quelqu'un\",\"quelque\",\"quelques\",\"quels\",\"qui\",\"quiconque\",\"quinze\",\"quoi\",\"quoique\",\"r\",\"rare\",\"rarement\",\"rares\",\"relative\",\"relativement\",\"remarquable\",\"rend\",\"rendre\",\"restant\",\"reste\",\"restent\",\"restrictif\",\"retour\",\"revoici\",\"revoilà\",\"rien\",\"s\",\"sa\",\"sacrebleu\",\"sait\",\"sans\",\"sapristi\",\"sauf\",\"se\",\"sein\",\"seize\",\"selon\",\"semblable\",\"semblaient\",\"semble\",\"semblent\",\"sent\",\"sept\",\"septième\",\"sera\",\"serai\",\"seraient\",\"serais\",\"serait\",\"seras\",\"serez\",\"seriez\",\"serions\",\"serons\",\"seront\",\"ses\",\"seul\",\"seule\",\"seulement\",\"si\",\"sien\",\"sienne\",\"siennes\",\"siens\",\"sinon\",\"six\",\"sixième\",\"soi\",\"soi-même\",\"soient\",\"sois\",\"soit\",\"soixante\",\"sommes\",\"son\",\"sont\",\"sous\",\"souvent\",\"soyez\",\"soyons\",\"specifique\",\"specifiques\",\"speculatif\",\"stop\",\"strictement\",\"subtiles\",\"suffisant\",\"suffisante\",\"suffit\",\"suis\",\"suit\",\"suivant\",\"suivante\",\"suivantes\",\"suivants\",\"suivre\",\"sujet\",\"superpose\",\"sur\",\"surtout\",\"t\",\"ta\",\"tac\",\"tandis\",\"tant\",\"tardive\",\"te\",\"tel\",\"telle\",\"tellement\",\"telles\",\"tels\",\"tenant\",\"tend\",\"tenir\",\"tente\",\"tes\",\"tic\",\"tien\",\"tienne\",\"tiennes\",\"tiens\",\"toc\",\"toi\",\"toi-même\",\"ton\",\"touchant\",\"toujours\",\"tous\",\"tout\",\"toute\",\"toutefois\",\"toutes\",\"treize\",\"trente\",\"tres\",\"trois\",\"troisième\",\"troisièmement\",\"trop\",\"très\",\"tsoin\",\"tsouin\",\"tu\",\"té\",\"u\",\"un\",\"une\",\"unes\",\"uniformement\",\"unique\",\"uniques\",\"uns\",\"v\",\"va\",\"vais\",\"valeur\",\"vas\",\"vers\",\"via\",\"vif\",\"vifs\",\"vingt\",\"vivat\",\"vive\",\"vives\",\"vlan\",\"voici\",\"voie\",\"voient\",\"voilà\",\"voire\",\"vont\",\"vos\",\"votre\",\"vous\",\"vous-mêmes\",\"vu\",\"vé\",\"vôtre\",\"vôtres\",\"w\",\"x\",\"y\",\"z\",\"zut\",\"à\",\"â\",\"ça\",\"ès\",\"étaient\",\"étais\",\"était\",\"étant\",\"état\",\"étiez\",\"étions\",\"été\",\"étée\",\"étées\",\"étés\",\"êtes\",\"être\",\"ô\"],gl:[\"a\",\"alí\",\"ao\",\"aos\",\"aquel\",\"aquela\",\"aquelas\",\"aqueles\",\"aquilo\",\"aquí\",\"as\",\"así\",\"aínda\",\"ben\",\"cando\",\"che\",\"co\",\"coa\",\"coas\",\"comigo\",\"con\",\"connosco\",\"contigo\",\"convosco\",\"cos\",\"cun\",\"cunha\",\"cunhas\",\"cuns\",\"da\",\"dalgunha\",\"dalgunhas\",\"dalgún\",\"dalgúns\",\"das\",\"de\",\"del\",\"dela\",\"delas\",\"deles\",\"desde\",\"deste\",\"do\",\"dos\",\"dun\",\"dunha\",\"dunhas\",\"duns\",\"e\",\"el\",\"ela\",\"elas\",\"eles\",\"en\",\"era\",\"eran\",\"esa\",\"esas\",\"ese\",\"eses\",\"esta\",\"estaba\",\"estar\",\"este\",\"estes\",\"estiven\",\"estou\",\"está\",\"están\",\"eu\",\"facer\",\"foi\",\"foron\",\"fun\",\"había\",\"hai\",\"iso\",\"isto\",\"la\",\"las\",\"lle\",\"lles\",\"lo\",\"los\",\"mais\",\"me\",\"meu\",\"meus\",\"min\",\"miña\",\"miñas\",\"moi\",\"na\",\"nas\",\"neste\",\"nin\",\"no\",\"non\",\"nos\",\"nosa\",\"nosas\",\"noso\",\"nosos\",\"nun\",\"nunha\",\"nunhas\",\"nuns\",\"nós\",\"o\",\"os\",\"ou\",\"para\",\"pero\",\"pode\",\"pois\",\"pola\",\"polas\",\"polo\",\"polos\",\"por\",\"que\",\"se\",\"senón\",\"ser\",\"seu\",\"seus\",\"sexa\",\"sido\",\"sobre\",\"súa\",\"súas\",\"tamén\",\"tan\",\"te\",\"ten\",\"ter\",\"teu\",\"teus\",\"teñen\",\"teño\",\"ti\",\"tido\",\"tiven\",\"tiña\",\"túa\",\"túas\",\"un\",\"unha\",\"unhas\",\"uns\",\"vos\",\"vosa\",\"vosas\",\"voso\",\"vosos\",\"vós\",\"á\",\"é\",\"ó\",\"ós\"],de:[\"a\",\"ab\",\"aber\",\"ach\",\"acht\",\"achte\",\"achten\",\"achter\",\"achtes\",\"ag\",\"alle\",\"allein\",\"allem\",\"allen\",\"aller\",\"allerdings\",\"alles\",\"allgemeinen\",\"als\",\"also\",\"am\",\"an\",\"ander\",\"andere\",\"anderem\",\"anderen\",\"anderer\",\"anderes\",\"anderm\",\"andern\",\"anderr\",\"anders\",\"au\",\"auch\",\"auf\",\"aus\",\"ausser\",\"ausserdem\",\"außer\",\"außerdem\",\"b\",\"bald\",\"bei\",\"beide\",\"beiden\",\"beim\",\"beispiel\",\"bekannt\",\"bereits\",\"besonders\",\"besser\",\"besten\",\"bin\",\"bis\",\"bisher\",\"bist\",\"c\",\"d\",\"d.h\",\"da\",\"dabei\",\"dadurch\",\"dafür\",\"dagegen\",\"daher\",\"dahin\",\"dahinter\",\"damals\",\"damit\",\"danach\",\"daneben\",\"dank\",\"dann\",\"daran\",\"darauf\",\"daraus\",\"darf\",\"darfst\",\"darin\",\"darum\",\"darunter\",\"darüber\",\"das\",\"dasein\",\"daselbst\",\"dass\",\"dasselbe\",\"davon\",\"davor\",\"dazu\",\"dazwischen\",\"daß\",\"dein\",\"deine\",\"deinem\",\"deinen\",\"deiner\",\"deines\",\"dem\",\"dementsprechend\",\"demgegenüber\",\"demgemäss\",\"demgemäß\",\"demselben\",\"demzufolge\",\"den\",\"denen\",\"denn\",\"denselben\",\"der\",\"deren\",\"derer\",\"derjenige\",\"derjenigen\",\"dermassen\",\"dermaßen\",\"derselbe\",\"derselben\",\"des\",\"deshalb\",\"desselben\",\"dessen\",\"deswegen\",\"dich\",\"die\",\"diejenige\",\"diejenigen\",\"dies\",\"diese\",\"dieselbe\",\"dieselben\",\"diesem\",\"diesen\",\"dieser\",\"dieses\",\"dir\",\"doch\",\"dort\",\"drei\",\"drin\",\"dritte\",\"dritten\",\"dritter\",\"drittes\",\"du\",\"durch\",\"durchaus\",\"durfte\",\"durften\",\"dürfen\",\"dürft\",\"e\",\"eben\",\"ebenso\",\"ehrlich\",\"ei\",\"ei,\",\"eigen\",\"eigene\",\"eigenen\",\"eigener\",\"eigenes\",\"ein\",\"einander\",\"eine\",\"einem\",\"einen\",\"einer\",\"eines\",\"einig\",\"einige\",\"einigem\",\"einigen\",\"einiger\",\"einiges\",\"einmal\",\"eins\",\"elf\",\"en\",\"ende\",\"endlich\",\"entweder\",\"er\",\"ernst\",\"erst\",\"erste\",\"ersten\",\"erster\",\"erstes\",\"es\",\"etwa\",\"etwas\",\"euch\",\"euer\",\"eure\",\"eurem\",\"euren\",\"eurer\",\"eures\",\"f\",\"folgende\",\"früher\",\"fünf\",\"fünfte\",\"fünften\",\"fünfter\",\"fünftes\",\"für\",\"g\",\"gab\",\"ganz\",\"ganze\",\"ganzen\",\"ganzer\",\"ganzes\",\"gar\",\"gedurft\",\"gegen\",\"gegenüber\",\"gehabt\",\"gehen\",\"geht\",\"gekannt\",\"gekonnt\",\"gemacht\",\"gemocht\",\"gemusst\",\"genug\",\"gerade\",\"gern\",\"gesagt\",\"geschweige\",\"gewesen\",\"gewollt\",\"geworden\",\"gibt\",\"ging\",\"gleich\",\"gott\",\"gross\",\"grosse\",\"grossen\",\"grosser\",\"grosses\",\"groß\",\"große\",\"großen\",\"großer\",\"großes\",\"gut\",\"gute\",\"guter\",\"gutes\",\"h\",\"hab\",\"habe\",\"haben\",\"habt\",\"hast\",\"hat\",\"hatte\",\"hatten\",\"hattest\",\"hattet\",\"heisst\",\"her\",\"heute\",\"hier\",\"hin\",\"hinter\",\"hoch\",\"hätte\",\"hätten\",\"i\",\"ich\",\"ihm\",\"ihn\",\"ihnen\",\"ihr\",\"ihre\",\"ihrem\",\"ihren\",\"ihrer\",\"ihres\",\"im\",\"immer\",\"in\",\"indem\",\"infolgedessen\",\"ins\",\"irgend\",\"ist\",\"j\",\"ja\",\"jahr\",\"jahre\",\"jahren\",\"je\",\"jede\",\"jedem\",\"jeden\",\"jeder\",\"jedermann\",\"jedermanns\",\"jedes\",\"jedoch\",\"jemand\",\"jemandem\",\"jemanden\",\"jene\",\"jenem\",\"jenen\",\"jener\",\"jenes\",\"jetzt\",\"k\",\"kam\",\"kann\",\"kannst\",\"kaum\",\"kein\",\"keine\",\"keinem\",\"keinen\",\"keiner\",\"keines\",\"kleine\",\"kleinen\",\"kleiner\",\"kleines\",\"kommen\",\"kommt\",\"konnte\",\"konnten\",\"kurz\",\"können\",\"könnt\",\"könnte\",\"l\",\"lang\",\"lange\",\"leicht\",\"leide\",\"lieber\",\"los\",\"m\",\"machen\",\"macht\",\"machte\",\"mag\",\"magst\",\"mahn\",\"mal\",\"man\",\"manche\",\"manchem\",\"manchen\",\"mancher\",\"manches\",\"mann\",\"mehr\",\"mein\",\"meine\",\"meinem\",\"meinen\",\"meiner\",\"meines\",\"mensch\",\"menschen\",\"mich\",\"mir\",\"mit\",\"mittel\",\"mochte\",\"mochten\",\"morgen\",\"muss\",\"musst\",\"musste\",\"mussten\",\"muß\",\"mußt\",\"möchte\",\"mögen\",\"möglich\",\"mögt\",\"müssen\",\"müsst\",\"müßt\",\"n\",\"na\",\"nach\",\"nachdem\",\"nahm\",\"natürlich\",\"neben\",\"nein\",\"neue\",\"neuen\",\"neun\",\"neunte\",\"neunten\",\"neunter\",\"neuntes\",\"nicht\",\"nichts\",\"nie\",\"niemand\",\"niemandem\",\"niemanden\",\"noch\",\"nun\",\"nur\",\"o\",\"ob\",\"oben\",\"oder\",\"offen\",\"oft\",\"ohne\",\"ordnung\",\"p\",\"q\",\"r\",\"recht\",\"rechte\",\"rechten\",\"rechter\",\"rechtes\",\"richtig\",\"rund\",\"s\",\"sa\",\"sache\",\"sagt\",\"sagte\",\"sah\",\"satt\",\"schlecht\",\"schluss\",\"schon\",\"sechs\",\"sechste\",\"sechsten\",\"sechster\",\"sechstes\",\"sehr\",\"sei\",\"seid\",\"seien\",\"sein\",\"seine\",\"seinem\",\"seinen\",\"seiner\",\"seines\",\"seit\",\"seitdem\",\"selbst\",\"sich\",\"sie\",\"sieben\",\"siebente\",\"siebenten\",\"siebenter\",\"siebentes\",\"sind\",\"so\",\"solang\",\"solche\",\"solchem\",\"solchen\",\"solcher\",\"solches\",\"soll\",\"sollen\",\"sollst\",\"sollt\",\"sollte\",\"sollten\",\"sondern\",\"sonst\",\"soweit\",\"sowie\",\"später\",\"startseite\",\"statt\",\"steht\",\"suche\",\"t\",\"tag\",\"tage\",\"tagen\",\"tat\",\"teil\",\"tel\",\"tritt\",\"trotzdem\",\"tun\",\"u\",\"uhr\",\"um\",\"und\",\"uns\",\"unse\",\"unsem\",\"unsen\",\"unser\",\"unsere\",\"unserer\",\"unses\",\"unter\",\"v\",\"vergangenen\",\"viel\",\"viele\",\"vielem\",\"vielen\",\"vielleicht\",\"vier\",\"vierte\",\"vierten\",\"vierter\",\"viertes\",\"vom\",\"von\",\"vor\",\"w\",\"wahr\",\"wann\",\"war\",\"waren\",\"warst\",\"wart\",\"warum\",\"was\",\"weg\",\"wegen\",\"weil\",\"weit\",\"weiter\",\"weitere\",\"weiteren\",\"weiteres\",\"welche\",\"welchem\",\"welchen\",\"welcher\",\"welches\",\"wem\",\"wen\",\"wenig\",\"wenige\",\"weniger\",\"weniges\",\"wenigstens\",\"wenn\",\"wer\",\"werde\",\"werden\",\"werdet\",\"weshalb\",\"wessen\",\"wie\",\"wieder\",\"wieso\",\"will\",\"willst\",\"wir\",\"wird\",\"wirklich\",\"wirst\",\"wissen\",\"wo\",\"woher\",\"wohin\",\"wohl\",\"wollen\",\"wollt\",\"wollte\",\"wollten\",\"worden\",\"wurde\",\"wurden\",\"während\",\"währenddem\",\"währenddessen\",\"wäre\",\"würde\",\"würden\",\"x\",\"y\",\"z\",\"z.b\",\"zehn\",\"zehnte\",\"zehnten\",\"zehnter\",\"zehntes\",\"zeit\",\"zu\",\"zuerst\",\"zugleich\",\"zum\",\"zunächst\",\"zur\",\"zurück\",\"zusammen\",\"zwanzig\",\"zwar\",\"zwei\",\"zweite\",\"zweiten\",\"zweiter\",\"zweites\",\"zwischen\",\"zwölf\",\"über\",\"überhaupt\",\"übrigens\"],el:[\"ένα\",\"έναν\",\"ένας\",\"αι\",\"ακομα\",\"ακομη\",\"ακριβως\",\"αληθεια\",\"αληθινα\",\"αλλα\",\"αλλαχου\",\"αλλες\",\"αλλη\",\"αλλην\",\"αλλης\",\"αλλιως\",\"αλλιωτικα\",\"αλλο\",\"αλλοι\",\"αλλοιως\",\"αλλοιωτικα\",\"αλλον\",\"αλλος\",\"αλλοτε\",\"αλλου\",\"αλλους\",\"αλλων\",\"αμα\",\"αμεσα\",\"αμεσως\",\"αν\",\"ανα\",\"αναμεσα\",\"αναμεταξυ\",\"ανευ\",\"αντι\",\"αντιπερα\",\"αντις\",\"ανω\",\"ανωτερω\",\"αξαφνα\",\"απ\",\"απεναντι\",\"απο\",\"αποψε\",\"από\",\"αρα\",\"αραγε\",\"αργα\",\"αργοτερο\",\"αριστερα\",\"αρκετα\",\"αρχικα\",\"ας\",\"αυριο\",\"αυτα\",\"αυτες\",\"αυτεσ\",\"αυτη\",\"αυτην\",\"αυτης\",\"αυτο\",\"αυτοι\",\"αυτον\",\"αυτος\",\"αυτοσ\",\"αυτου\",\"αυτους\",\"αυτουσ\",\"αυτων\",\"αφοτου\",\"αφου\",\"αἱ\",\"αἳ\",\"αἵ\",\"αὐτόσ\",\"αὐτὸς\",\"αὖ\",\"α∆ιακοπα\",\"βεβαια\",\"βεβαιοτατα\",\"γάρ\",\"γα\",\"γα^\",\"γε\",\"γι\",\"για\",\"γοῦν\",\"γρηγορα\",\"γυρω\",\"γὰρ\",\"δ'\",\"δέ\",\"δή\",\"δαί\",\"δαίσ\",\"δαὶ\",\"δαὶς\",\"δε\",\"δεν\",\"δι\",\"δι'\",\"διά\",\"δια\",\"διὰ\",\"δὲ\",\"δὴ\",\"δ’\",\"εαν\",\"εαυτο\",\"εαυτον\",\"εαυτου\",\"εαυτους\",\"εαυτων\",\"εγκαιρα\",\"εγκαιρως\",\"εγω\",\"ειθε\",\"ειμαι\",\"ειμαστε\",\"ειναι\",\"εις\",\"εισαι\",\"εισαστε\",\"ειστε\",\"ειτε\",\"ειχα\",\"ειχαμε\",\"ειχαν\",\"ειχατε\",\"ειχε\",\"ειχες\",\"ει∆εμη\",\"εκ\",\"εκαστα\",\"εκαστες\",\"εκαστη\",\"εκαστην\",\"εκαστης\",\"εκαστο\",\"εκαστοι\",\"εκαστον\",\"εκαστος\",\"εκαστου\",\"εκαστους\",\"εκαστων\",\"εκει\",\"εκεινα\",\"εκεινες\",\"εκεινεσ\",\"εκεινη\",\"εκεινην\",\"εκεινης\",\"εκεινο\",\"εκεινοι\",\"εκεινον\",\"εκεινος\",\"εκεινοσ\",\"εκεινου\",\"εκεινους\",\"εκεινουσ\",\"εκεινων\",\"εκτος\",\"εμας\",\"εμεις\",\"εμενα\",\"εμπρος\",\"εν\",\"ενα\",\"εναν\",\"ενας\",\"ενος\",\"εντελως\",\"εντος\",\"εντωμεταξυ\",\"ενω\",\"ενός\",\"εξ\",\"εξαφνα\",\"εξης\",\"εξισου\",\"εξω\",\"επ\",\"επί\",\"επανω\",\"επειτα\",\"επει∆η\",\"επι\",\"επισης\",\"επομενως\",\"εσας\",\"εσεις\",\"εσενα\",\"εστω\",\"εσυ\",\"ετερα\",\"ετεραι\",\"ετερας\",\"ετερες\",\"ετερη\",\"ετερης\",\"ετερο\",\"ετεροι\",\"ετερον\",\"ετερος\",\"ετερου\",\"ετερους\",\"ετερων\",\"ετουτα\",\"ετουτες\",\"ετουτη\",\"ετουτην\",\"ετουτης\",\"ετουτο\",\"ετουτοι\",\"ετουτον\",\"ετουτος\",\"ετουτου\",\"ετουτους\",\"ετουτων\",\"ετσι\",\"ευγε\",\"ευθυς\",\"ευτυχως\",\"εφεξης\",\"εχει\",\"εχεις\",\"εχετε\",\"εχθες\",\"εχομε\",\"εχουμε\",\"εχουν\",\"εχτες\",\"εχω\",\"εως\",\"εἰ\",\"εἰμί\",\"εἰμὶ\",\"εἰς\",\"εἰσ\",\"εἴ\",\"εἴμι\",\"εἴτε\",\"ε∆ω\",\"η\",\"ημασταν\",\"ημαστε\",\"ημουν\",\"ησασταν\",\"ησαστε\",\"ησουν\",\"ηταν\",\"ητανε\",\"ητοι\",\"ηττον\",\"η∆η\",\"θα\",\"ι\",\"ιι\",\"ιιι\",\"ισαμε\",\"ισια\",\"ισως\",\"ισωσ\",\"ι∆ια\",\"ι∆ιαν\",\"ι∆ιας\",\"ι∆ιες\",\"ι∆ιο\",\"ι∆ιοι\",\"ι∆ιον\",\"ι∆ιος\",\"ι∆ιου\",\"ι∆ιους\",\"ι∆ιων\",\"ι∆ιως\",\"κ\",\"καί\",\"καίτοι\",\"καθ\",\"καθε\",\"καθεμια\",\"καθεμιας\",\"καθενα\",\"καθενας\",\"καθενος\",\"καθετι\",\"καθολου\",\"καθως\",\"και\",\"κακα\",\"κακως\",\"καλα\",\"καλως\",\"καμια\",\"καμιαν\",\"καμιας\",\"καμποσα\",\"καμποσες\",\"καμποση\",\"καμποσην\",\"καμποσης\",\"καμποσο\",\"καμποσοι\",\"καμποσον\",\"καμποσος\",\"καμποσου\",\"καμποσους\",\"καμποσων\",\"κανεις\",\"κανεν\",\"κανενα\",\"κανεναν\",\"κανενας\",\"κανενος\",\"καποια\",\"καποιαν\",\"καποιας\",\"καποιες\",\"καποιο\",\"καποιοι\",\"καποιον\",\"καποιος\",\"καποιου\",\"καποιους\",\"καποιων\",\"καποτε\",\"καπου\",\"καπως\",\"κατ\",\"κατά\",\"κατα\",\"κατι\",\"κατιτι\",\"κατοπιν\",\"κατω\",\"κατὰ\",\"καὶ\",\"κι\",\"κιολας\",\"κλπ\",\"κοντα\",\"κτλ\",\"κυριως\",\"κἀν\",\"κἂν\",\"λιγακι\",\"λιγο\",\"λιγωτερο\",\"λογω\",\"λοιπα\",\"λοιπον\",\"μέν\",\"μέσα\",\"μή\",\"μήτε\",\"μία\",\"μα\",\"μαζι\",\"μακαρι\",\"μακρυα\",\"μαλιστα\",\"μαλλον\",\"μας\",\"με\",\"μεθ\",\"μεθαυριο\",\"μειον\",\"μελει\",\"μελλεται\",\"μεμιας\",\"μεν\",\"μερικα\",\"μερικες\",\"μερικοι\",\"μερικους\",\"μερικων\",\"μεσα\",\"μετ\",\"μετά\",\"μετα\",\"μεταξυ\",\"μετὰ\",\"μεχρι\",\"μη\",\"μην\",\"μηπως\",\"μητε\",\"μη∆ε\",\"μιά\",\"μια\",\"μιαν\",\"μιας\",\"μολις\",\"μολονοτι\",\"μοναχα\",\"μονες\",\"μονη\",\"μονην\",\"μονης\",\"μονο\",\"μονοι\",\"μονομιας\",\"μονος\",\"μονου\",\"μονους\",\"μονων\",\"μου\",\"μπορει\",\"μπορουν\",\"μπραβο\",\"μπρος\",\"μἐν\",\"μὲν\",\"μὴ\",\"μὴν\",\"να\",\"ναι\",\"νωρις\",\"ξανα\",\"ξαφνικα\",\"ο\",\"οι\",\"ολα\",\"ολες\",\"ολη\",\"ολην\",\"ολης\",\"ολο\",\"ολογυρα\",\"ολοι\",\"ολον\",\"ολονεν\",\"ολος\",\"ολοτελα\",\"ολου\",\"ολους\",\"ολων\",\"ολως\",\"ολως∆ιολου\",\"ομως\",\"ομωσ\",\"οποια\",\"οποιαν\",\"οποιαν∆ηποτε\",\"οποιας\",\"οποιας∆ηποτε\",\"οποια∆ηποτε\",\"οποιες\",\"οποιες∆ηποτε\",\"οποιο\",\"οποιοι\",\"οποιον\",\"οποιον∆ηποτε\",\"οποιος\",\"οποιος∆ηποτε\",\"οποιου\",\"οποιους\",\"οποιους∆ηποτε\",\"οποιου∆ηποτε\",\"οποιο∆ηποτε\",\"οποιων\",\"οποιων∆ηποτε\",\"οποι∆ηποτε\",\"οποτε\",\"οποτε∆ηποτε\",\"οπου\",\"οπου∆ηποτε\",\"οπως\",\"οπωσ\",\"ορισμενα\",\"ορισμενες\",\"ορισμενων\",\"ορισμενως\",\"οσα\",\"οσα∆ηποτε\",\"οσες\",\"οσες∆ηποτε\",\"οση\",\"οσην\",\"οσην∆ηποτε\",\"οσης\",\"οσης∆ηποτε\",\"οση∆ηποτε\",\"οσο\",\"οσοι\",\"οσοι∆ηποτε\",\"οσον\",\"οσον∆ηποτε\",\"οσος\",\"οσος∆ηποτε\",\"οσου\",\"οσους\",\"οσους∆ηποτε\",\"οσου∆ηποτε\",\"οσο∆ηποτε\",\"οσων\",\"οσων∆ηποτε\",\"οταν\",\"οτι\",\"οτι∆ηποτε\",\"οτου\",\"ου\",\"ουτε\",\"ου∆ε\",\"οχι\",\"οἱ\",\"οἳ\",\"οἷς\",\"οὐ\",\"οὐδ\",\"οὐδέ\",\"οὐδείσ\",\"οὐδεὶς\",\"οὐδὲ\",\"οὐδὲν\",\"οὐκ\",\"οὐχ\",\"οὐχὶ\",\"οὓς\",\"οὔτε\",\"οὕτω\",\"οὕτως\",\"οὕτωσ\",\"οὖν\",\"οὗ\",\"οὗτος\",\"οὗτοσ\",\"παλι\",\"παντοτε\",\"παντου\",\"παντως\",\"παρ\",\"παρά\",\"παρα\",\"παρὰ\",\"περί\",\"περα\",\"περι\",\"περιπου\",\"περισσοτερο\",\"περσι\",\"περυσι\",\"περὶ\",\"πια\",\"πιθανον\",\"πιο\",\"πισω\",\"πλαι\",\"πλεον\",\"πλην\",\"ποια\",\"ποιαν\",\"ποιας\",\"ποιες\",\"ποιεσ\",\"ποιο\",\"ποιοι\",\"ποιον\",\"ποιος\",\"ποιοσ\",\"ποιου\",\"ποιους\",\"ποιουσ\",\"ποιων\",\"πολυ\",\"ποσες\",\"ποση\",\"ποσην\",\"ποσης\",\"ποσοι\",\"ποσος\",\"ποσους\",\"ποτε\",\"που\",\"πουθε\",\"πουθενα\",\"ποῦ\",\"πρεπει\",\"πριν\",\"προ\",\"προκειμενου\",\"προκειται\",\"προπερσι\",\"προς\",\"προσ\",\"προτου\",\"προχθες\",\"προχτες\",\"πρωτυτερα\",\"πρόσ\",\"πρὸ\",\"πρὸς\",\"πως\",\"πωσ\",\"σαν\",\"σας\",\"σε\",\"σεις\",\"σημερα\",\"σιγα\",\"σου\",\"στα\",\"στη\",\"στην\",\"στης\",\"στις\",\"στο\",\"στον\",\"στου\",\"στους\",\"στων\",\"συγχρονως\",\"συν\",\"συναμα\",\"συνεπως\",\"συνηθως\",\"συχνα\",\"συχνας\",\"συχνες\",\"συχνη\",\"συχνην\",\"συχνης\",\"συχνο\",\"συχνοι\",\"συχνον\",\"συχνος\",\"συχνου\",\"συχνους\",\"συχνων\",\"συχνως\",\"σχε∆ον\",\"σωστα\",\"σόσ\",\"σύ\",\"σύν\",\"σὸς\",\"σὺ\",\"σὺν\",\"τά\",\"τήν\",\"τί\",\"τίς\",\"τίσ\",\"τα\",\"ταυτα\",\"ταυτες\",\"ταυτη\",\"ταυτην\",\"ταυτης\",\"ταυτο,ταυτον\",\"ταυτος\",\"ταυτου\",\"ταυτων\",\"ταχα\",\"ταχατε\",\"ταῖς\",\"τα∆ε\",\"τε\",\"τελικα\",\"τελικως\",\"τες\",\"τετοια\",\"τετοιαν\",\"τετοιας\",\"τετοιες\",\"τετοιο\",\"τετοιοι\",\"τετοιον\",\"τετοιος\",\"τετοιου\",\"τετοιους\",\"τετοιων\",\"τη\",\"την\",\"της\",\"τησ\",\"τι\",\"τινα\",\"τιποτα\",\"τιποτε\",\"τις\",\"τισ\",\"το\",\"τοί\",\"τοι\",\"τοιοῦτος\",\"τοιοῦτοσ\",\"τον\",\"τος\",\"τοσα\",\"τοσες\",\"τοση\",\"τοσην\",\"τοσης\",\"τοσο\",\"τοσοι\",\"τοσον\",\"τοσος\",\"τοσου\",\"τοσους\",\"τοσων\",\"τοτε\",\"του\",\"τουλαχιστο\",\"τουλαχιστον\",\"τους\",\"τουτα\",\"τουτες\",\"τουτη\",\"τουτην\",\"τουτης\",\"τουτο\",\"τουτοι\",\"τουτοις\",\"τουτον\",\"τουτος\",\"τουτου\",\"τουτους\",\"τουτων\",\"τούσ\",\"τοὺς\",\"τοῖς\",\"τοῦ\",\"τυχον\",\"των\",\"τωρα\",\"τό\",\"τόν\",\"τότε\",\"τὰ\",\"τὰς\",\"τὴν\",\"τὸ\",\"τὸν\",\"τῆς\",\"τῆσ\",\"τῇ\",\"τῶν\",\"τῷ\",\"υπ\",\"υπερ\",\"υπο\",\"υποψη\",\"υποψιν\",\"υπό\",\"υστερα\",\"φετος\",\"χαμηλα\",\"χθες\",\"χτες\",\"χωρις\",\"χωριστα\",\"ψηλα\",\"ω\",\"ωραια\",\"ως\",\"ωσ\",\"ωσαν\",\"ωσοτου\",\"ωσπου\",\"ωστε\",\"ωστοσο\",\"ωχ\",\"ἀλλ'\",\"ἀλλά\",\"ἀλλὰ\",\"ἀλλ’\",\"ἀπ\",\"ἀπό\",\"ἀπὸ\",\"ἀφ\",\"ἂν\",\"ἃ\",\"ἄλλος\",\"ἄλλοσ\",\"ἄν\",\"ἄρα\",\"ἅμα\",\"ἐάν\",\"ἐγώ\",\"ἐγὼ\",\"ἐκ\",\"ἐμόσ\",\"ἐμὸς\",\"ἐν\",\"ἐξ\",\"ἐπί\",\"ἐπεὶ\",\"ἐπὶ\",\"ἐστι\",\"ἐφ\",\"ἐὰν\",\"ἑαυτοῦ\",\"ἔτι\",\"ἡ\",\"ἢ\",\"ἣ\",\"ἤ\",\"ἥ\",\"ἧς\",\"ἵνα\",\"ὁ\",\"ὃ\",\"ὃν\",\"ὃς\",\"ὅ\",\"ὅδε\",\"ὅθεν\",\"ὅπερ\",\"ὅς\",\"ὅσ\",\"ὅστις\",\"ὅστισ\",\"ὅτε\",\"ὅτι\",\"ὑμόσ\",\"ὑπ\",\"ὑπέρ\",\"ὑπό\",\"ὑπὲρ\",\"ὑπὸ\",\"ὡς\",\"ὡσ\",\"ὥς\",\"ὥστε\",\"ὦ\",\"ᾧ\",\"∆α\",\"∆ε\",\"∆εινα\",\"∆εν\",\"∆εξια\",\"∆ηθεν\",\"∆ηλα∆η\",\"∆ι\",\"∆ια\",\"∆ιαρκως\",\"∆ικα\",\"∆ικο\",\"∆ικοι\",\"∆ικος\",\"∆ικου\",\"∆ικους\",\"∆ιολου\",\"∆ιπλα\",\"∆ιχως\"],gu:[\"અંગે\",\"અંદર\",\"અથવા\",\"અને\",\"અમને\",\"અમારું\",\"અમે\",\"અહીં\",\"આ\",\"આગળ\",\"આથી\",\"આનું\",\"આને\",\"આપણને\",\"આપણું\",\"આપણે\",\"આપી\",\"આર\",\"આવી\",\"આવે\",\"ઉપર\",\"ઉભા\",\"ઊંચે\",\"ઊભું\",\"એ\",\"એક\",\"એન\",\"એના\",\"એનાં\",\"એની\",\"એનું\",\"એને\",\"એનો\",\"એમ\",\"એવા\",\"એવાં\",\"એવી\",\"એવું\",\"એવો\",\"ઓછું\",\"કંઈક\",\"કઈ\",\"કયું\",\"કયો\",\"કરતાં\",\"કરવું\",\"કરી\",\"કરીએ\",\"કરું\",\"કરે\",\"કરેલું\",\"કર્યા\",\"કર્યાં\",\"કર્યું\",\"કર્યો\",\"કાંઈ\",\"કે\",\"કેટલું\",\"કેમ\",\"કેવી\",\"કેવું\",\"કોઈ\",\"કોઈક\",\"કોણ\",\"કોણે\",\"કોને\",\"ક્યાં\",\"ક્યારે\",\"ખૂબ\",\"ગઈ\",\"ગયા\",\"ગયાં\",\"ગયું\",\"ગયો\",\"ઘણું\",\"છ\",\"છતાં\",\"છીએ\",\"છું\",\"છે\",\"છેક\",\"છો\",\"જ\",\"જાય\",\"જી\",\"જે\",\"જેટલું\",\"જેને\",\"જેમ\",\"જેવી\",\"જેવું\",\"જેવો\",\"જો\",\"જોઈએ\",\"જ્યાં\",\"જ્યારે\",\"ઝાઝું\",\"તને\",\"તમને\",\"તમારું\",\"તમે\",\"તા\",\"તારાથી\",\"તારામાં\",\"તારું\",\"તું\",\"તે\",\"તેં\",\"તેઓ\",\"તેણે\",\"તેથી\",\"તેના\",\"તેની\",\"તેનું\",\"તેને\",\"તેમ\",\"તેમનું\",\"તેમને\",\"તેવી\",\"તેવું\",\"તો\",\"ત્યાં\",\"ત્યારે\",\"થઇ\",\"થઈ\",\"થઈએ\",\"થતા\",\"થતાં\",\"થતી\",\"થતું\",\"થતો\",\"થયા\",\"થયાં\",\"થયું\",\"થયેલું\",\"થયો\",\"થવું\",\"થાઉં\",\"થાઓ\",\"થાય\",\"થી\",\"થોડું\",\"દરેક\",\"ન\",\"નં\",\"નં.\",\"નથી\",\"નહિ\",\"નહી\",\"નહીં\",\"ના\",\"ની\",\"નીચે\",\"નું\",\"ને\",\"નો\",\"પછી\",\"પણ\",\"પર\",\"પરંતુ\",\"પહેલાં\",\"પાછળ\",\"પાસે\",\"પોતાનું\",\"પ્રત્યેક\",\"ફક્ત\",\"ફરી\",\"ફરીથી\",\"બંને\",\"બધા\",\"બધું\",\"બની\",\"બહાર\",\"બહુ\",\"બાદ\",\"બે\",\"મને\",\"મા\",\"માં\",\"માટે\",\"માત્ર\",\"મારું\",\"મી\",\"મૂકવું\",\"મૂકી\",\"મૂક્યા\",\"મૂક્યાં\",\"મૂક્યું\",\"મેં\",\"રહી\",\"રહે\",\"રહેવું\",\"રહ્યા\",\"રહ્યાં\",\"રહ્યો\",\"રીતે\",\"રૂ.\",\"રૂા\",\"લેતા\",\"લેતું\",\"લેવા\",\"વગેરે\",\"વધુ\",\"શકે\",\"શા\",\"શું\",\"સરખું\",\"સામે\",\"સુધી\",\"હતા\",\"હતાં\",\"હતી\",\"હતું\",\"હવે\",\"હશે\",\"હશો\",\"હા\",\"હું\",\"હો\",\"હોઈ\",\"હોઈશ\",\"હોઈશું\",\"હોય\",\"હોવા\"],ha:[\"a\",\"amma\",\"ba\",\"ban\",\"ce\",\"cikin\",\"da\",\"don\",\"ga\",\"in\",\"ina\",\"ita\",\"ji\",\"ka\",\"ko\",\"kuma\",\"lokacin\",\"ma\",\"mai\",\"na\",\"ne\",\"ni\",\"sai\",\"shi\",\"su\",\"suka\",\"sun\",\"ta\",\"tafi\",\"take\",\"tana\",\"wani\",\"wannan\",\"wata\",\"ya\",\"yake\",\"yana\",\"yi\",\"za\"],he:[\"אבל\",\"או\",\"אולי\",\"אותה\",\"אותו\",\"אותי\",\"אותך\",\"אותם\",\"אותן\",\"אותנו\",\"אז\",\"אחר\",\"אחרות\",\"אחרי\",\"אחריכן\",\"אחרים\",\"אחרת\",\"אי\",\"איזה\",\"איך\",\"אין\",\"איפה\",\"איתה\",\"איתו\",\"איתי\",\"איתך\",\"איתכם\",\"איתכן\",\"איתם\",\"איתן\",\"איתנו\",\"אך\",\"אל\",\"אלה\",\"אלו\",\"אם\",\"אנחנו\",\"אני\",\"אס\",\"אף\",\"אצל\",\"אשר\",\"את\",\"אתה\",\"אתכם\",\"אתכן\",\"אתם\",\"אתן\",\"באיזומידה\",\"באמצע\",\"באמצעות\",\"בגלל\",\"בין\",\"בלי\",\"במידה\",\"במקוםשבו\",\"ברם\",\"בשביל\",\"בשעהש\",\"בתוך\",\"גם\",\"דרך\",\"הוא\",\"היא\",\"היה\",\"היכן\",\"היתה\",\"היתי\",\"הם\",\"הן\",\"הנה\",\"הסיבהשבגללה\",\"הרי\",\"ואילו\",\"ואת\",\"זאת\",\"זה\",\"זות\",\"יהיה\",\"יוכל\",\"יוכלו\",\"יותרמדי\",\"יכול\",\"יכולה\",\"יכולות\",\"יכולים\",\"יכל\",\"יכלה\",\"יכלו\",\"יש\",\"כאן\",\"כאשר\",\"כולם\",\"כולן\",\"כזה\",\"כי\",\"כיצד\",\"כך\",\"ככה\",\"כל\",\"כלל\",\"כמו\",\"כן\",\"כפי\",\"כש\",\"לא\",\"לאו\",\"לאיזותכלית\",\"לאן\",\"לבין\",\"לה\",\"להיות\",\"להם\",\"להן\",\"לו\",\"לי\",\"לכם\",\"לכן\",\"למה\",\"למטה\",\"למעלה\",\"למקוםשבו\",\"למרות\",\"לנו\",\"לעבר\",\"לעיכן\",\"לפיכך\",\"לפני\",\"מאד\",\"מאחורי\",\"מאיזוסיבה\",\"מאין\",\"מאיפה\",\"מבלי\",\"מבעד\",\"מדוע\",\"מה\",\"מהיכן\",\"מול\",\"מחוץ\",\"מי\",\"מכאן\",\"מכיוון\",\"מלבד\",\"מן\",\"מנין\",\"מסוגל\",\"מעט\",\"מעטים\",\"מעל\",\"מצד\",\"מקוםבו\",\"מתחת\",\"מתי\",\"נגד\",\"נגר\",\"נו\",\"עד\",\"עז\",\"על\",\"עלי\",\"עליה\",\"עליהם\",\"עליהן\",\"עליו\",\"עליך\",\"עליכם\",\"עלינו\",\"עם\",\"עצמה\",\"עצמהם\",\"עצמהן\",\"עצמו\",\"עצמי\",\"עצמם\",\"עצמן\",\"עצמנו\",\"פה\",\"רק\",\"שוב\",\"של\",\"שלה\",\"שלהם\",\"שלהן\",\"שלו\",\"שלי\",\"שלך\",\"שלכה\",\"שלכם\",\"שלכן\",\"שלנו\",\"שם\",\"תהיה\",\"תחת\"],hi:[\"अंदर\",\"अत\",\"अदि\",\"अप\",\"अपना\",\"अपनि\",\"अपनी\",\"अपने\",\"अभि\",\"अभी\",\"आदि\",\"आप\",\"इंहिं\",\"इंहें\",\"इंहों\",\"इतयादि\",\"इत्यादि\",\"इन\",\"इनका\",\"इन्हीं\",\"इन्हें\",\"इन्हों\",\"इस\",\"इसका\",\"इसकि\",\"इसकी\",\"इसके\",\"इसमें\",\"इसि\",\"इसी\",\"इसे\",\"उंहिं\",\"उंहें\",\"उंहों\",\"उन\",\"उनका\",\"उनकि\",\"उनकी\",\"उनके\",\"उनको\",\"उन्हीं\",\"उन्हें\",\"उन्हों\",\"उस\",\"उसके\",\"उसि\",\"उसी\",\"उसे\",\"एक\",\"एवं\",\"एस\",\"एसे\",\"ऐसे\",\"ओर\",\"और\",\"कइ\",\"कई\",\"कर\",\"करता\",\"करते\",\"करना\",\"करने\",\"करें\",\"कहते\",\"कहा\",\"का\",\"काफि\",\"काफ़ी\",\"कि\",\"किंहें\",\"किंहों\",\"कितना\",\"किन्हें\",\"किन्हों\",\"किया\",\"किर\",\"किस\",\"किसि\",\"किसी\",\"किसे\",\"की\",\"कुछ\",\"कुल\",\"के\",\"को\",\"कोइ\",\"कोई\",\"कोन\",\"कोनसा\",\"कौन\",\"कौनसा\",\"गया\",\"घर\",\"जब\",\"जहाँ\",\"जहां\",\"जा\",\"जिंहें\",\"जिंहों\",\"जितना\",\"जिधर\",\"जिन\",\"जिन्हें\",\"जिन्हों\",\"जिस\",\"जिसे\",\"जीधर\",\"जेसा\",\"जेसे\",\"जैसा\",\"जैसे\",\"जो\",\"तक\",\"तब\",\"तरह\",\"तिंहें\",\"तिंहों\",\"तिन\",\"तिन्हें\",\"तिन्हों\",\"तिस\",\"तिसे\",\"तो\",\"था\",\"थि\",\"थी\",\"थे\",\"दबारा\",\"दवारा\",\"दिया\",\"दुसरा\",\"दुसरे\",\"दूसरे\",\"दो\",\"द्वारा\",\"न\",\"नहिं\",\"नहीं\",\"ना\",\"निचे\",\"निहायत\",\"नीचे\",\"ने\",\"पर\",\"पहले\",\"पुरा\",\"पूरा\",\"पे\",\"फिर\",\"बनि\",\"बनी\",\"बहि\",\"बही\",\"बहुत\",\"बाद\",\"बाला\",\"बिलकुल\",\"भि\",\"भितर\",\"भी\",\"भीतर\",\"मगर\",\"मानो\",\"मे\",\"में\",\"यदि\",\"यह\",\"यहाँ\",\"यहां\",\"यहि\",\"यही\",\"या\",\"यिह\",\"ये\",\"रखें\",\"रवासा\",\"रहा\",\"रहे\",\"ऱ्वासा\",\"लिए\",\"लिये\",\"लेकिन\",\"व\",\"वगेरह\",\"वरग\",\"वर्ग\",\"वह\",\"वहाँ\",\"वहां\",\"वहिं\",\"वहीं\",\"वाले\",\"वुह\",\"वे\",\"वग़ैरह\",\"संग\",\"सकता\",\"सकते\",\"सबसे\",\"सभि\",\"सभी\",\"साथ\",\"साबुत\",\"साभ\",\"सारा\",\"से\",\"सो\",\"हि\",\"ही\",\"हुअ\",\"हुआ\",\"हुइ\",\"हुई\",\"हुए\",\"हे\",\"हें\",\"है\",\"हैं\",\"हो\",\"होता\",\"होति\",\"होती\",\"होते\",\"होना\",\"होने\"],hu:[\"a\",\"abba\",\"abban\",\"abból\",\"addig\",\"ahhoz\",\"ahogy\",\"ahol\",\"aki\",\"akik\",\"akkor\",\"akár\",\"alapján\",\"alatt\",\"alatta\",\"alattad\",\"alattam\",\"alattatok\",\"alattuk\",\"alattunk\",\"alá\",\"alád\",\"alájuk\",\"alám\",\"alánk\",\"alátok\",\"alól\",\"alóla\",\"alólad\",\"alólam\",\"alólatok\",\"alóluk\",\"alólunk\",\"amely\",\"amelybol\",\"amelyek\",\"amelyekben\",\"amelyeket\",\"amelyet\",\"amelyik\",\"amelynek\",\"ami\",\"amikor\",\"amit\",\"amolyan\",\"amott\",\"amíg\",\"annak\",\"annál\",\"arra\",\"arról\",\"attól\",\"az\",\"aznap\",\"azok\",\"azokat\",\"azokba\",\"azokban\",\"azokból\",\"azokhoz\",\"azokig\",\"azokkal\",\"azokká\",\"azoknak\",\"azoknál\",\"azokon\",\"azokra\",\"azokról\",\"azoktól\",\"azokért\",\"azon\",\"azonban\",\"azonnal\",\"azt\",\"aztán\",\"azután\",\"azzal\",\"azzá\",\"azért\",\"bal\",\"balra\",\"ban\",\"be\",\"belé\",\"beléd\",\"beléjük\",\"belém\",\"belénk\",\"belétek\",\"belül\",\"belőle\",\"belőled\",\"belőlem\",\"belőletek\",\"belőlük\",\"belőlünk\",\"ben\",\"benne\",\"benned\",\"bennem\",\"bennetek\",\"bennük\",\"bennünk\",\"bár\",\"bárcsak\",\"bármilyen\",\"búcsú\",\"cikk\",\"cikkek\",\"cikkeket\",\"csak\",\"csakhogy\",\"csupán\",\"de\",\"dehogy\",\"e\",\"ebbe\",\"ebben\",\"ebből\",\"eddig\",\"egy\",\"egyebek\",\"egyebet\",\"egyedül\",\"egyelőre\",\"egyes\",\"egyet\",\"egyetlen\",\"egyik\",\"egymás\",\"egyre\",\"egyszerre\",\"egyéb\",\"együtt\",\"egész\",\"egészen\",\"ehhez\",\"ekkor\",\"el\",\"eleinte\",\"ellen\",\"ellenes\",\"elleni\",\"ellenére\",\"elmondta\",\"elsõ\",\"első\",\"elsők\",\"elsősorban\",\"elsőt\",\"elé\",\"eléd\",\"elég\",\"eléjük\",\"elém\",\"elénk\",\"elétek\",\"elõ\",\"elõször\",\"elõtt\",\"elő\",\"előbb\",\"elől\",\"előle\",\"előled\",\"előlem\",\"előletek\",\"előlük\",\"előlünk\",\"először\",\"előtt\",\"előtte\",\"előtted\",\"előttem\",\"előttetek\",\"előttük\",\"előttünk\",\"előző\",\"emilyen\",\"engem\",\"ennek\",\"ennyi\",\"ennél\",\"enyém\",\"erre\",\"erről\",\"esetben\",\"ettől\",\"ez\",\"ezek\",\"ezekbe\",\"ezekben\",\"ezekből\",\"ezeken\",\"ezeket\",\"ezekhez\",\"ezekig\",\"ezekkel\",\"ezekké\",\"ezeknek\",\"ezeknél\",\"ezekre\",\"ezekről\",\"ezektől\",\"ezekért\",\"ezen\",\"ezentúl\",\"ezer\",\"ezret\",\"ezt\",\"ezután\",\"ezzel\",\"ezzé\",\"ezért\",\"fel\",\"fele\",\"felek\",\"felet\",\"felett\",\"felé\",\"fent\",\"fenti\",\"fél\",\"fölé\",\"gyakran\",\"ha\",\"halló\",\"hamar\",\"hanem\",\"harmadik\",\"harmadikat\",\"harminc\",\"hat\",\"hatodik\",\"hatodikat\",\"hatot\",\"hatvan\",\"helyett\",\"hetedik\",\"hetediket\",\"hetet\",\"hetven\",\"hirtelen\",\"hiszen\",\"hiába\",\"hogy\",\"hogyan\",\"hol\",\"holnap\",\"holnapot\",\"honnan\",\"hova\",\"hozzá\",\"hozzád\",\"hozzájuk\",\"hozzám\",\"hozzánk\",\"hozzátok\",\"hurrá\",\"huszadik\",\"hány\",\"hányszor\",\"hármat\",\"három\",\"hát\",\"hátha\",\"hátulsó\",\"hét\",\"húsz\",\"ide\",\"ide-оda\",\"idén\",\"igazán\",\"igen\",\"ill\",\"ill.\",\"illetve\",\"ilyen\",\"ilyenkor\",\"immár\",\"inkább\",\"is\",\"ismét\",\"ison\",\"itt\",\"jelenleg\",\"jobban\",\"jobbra\",\"jó\",\"jól\",\"jólesik\",\"jóval\",\"jövőre\",\"kell\",\"kellene\",\"kellett\",\"kelljen\",\"keressünk\",\"keresztül\",\"ketten\",\"kettő\",\"kettőt\",\"kevés\",\"ki\",\"kiben\",\"kiből\",\"kicsit\",\"kicsoda\",\"kihez\",\"kik\",\"kikbe\",\"kikben\",\"kikből\",\"kiken\",\"kiket\",\"kikhez\",\"kikkel\",\"kikké\",\"kiknek\",\"kiknél\",\"kikre\",\"kikről\",\"kiktől\",\"kikért\",\"kilenc\",\"kilencedik\",\"kilencediket\",\"kilencet\",\"kilencven\",\"kin\",\"kinek\",\"kinél\",\"kire\",\"kiről\",\"kit\",\"kitől\",\"kivel\",\"kivé\",\"kié\",\"kiért\",\"korábban\",\"képest\",\"kérem\",\"kérlek\",\"kész\",\"késő\",\"később\",\"későn\",\"két\",\"kétszer\",\"kívül\",\"körül\",\"köszönhetően\",\"köszönöm\",\"közben\",\"közel\",\"közepesen\",\"közepén\",\"közé\",\"között\",\"közül\",\"külön\",\"különben\",\"különböző\",\"különbözőbb\",\"különbözőek\",\"lassan\",\"le\",\"legalább\",\"legyen\",\"lehet\",\"lehetetlen\",\"lehetett\",\"lehetőleg\",\"lehetőség\",\"lenne\",\"lenni\",\"lennék\",\"lennének\",\"lesz\",\"leszek\",\"lesznek\",\"leszünk\",\"lett\",\"lettek\",\"lettem\",\"lettünk\",\"lévő\",\"ma\",\"maga\",\"magad\",\"magam\",\"magatokat\",\"magukat\",\"magunkat\",\"magát\",\"mai\",\"majd\",\"majdnem\",\"manapság\",\"meg\",\"megcsinál\",\"megcsinálnak\",\"megint\",\"megvan\",\"mellett\",\"mellette\",\"melletted\",\"mellettem\",\"mellettetek\",\"mellettük\",\"mellettünk\",\"mellé\",\"melléd\",\"melléjük\",\"mellém\",\"mellénk\",\"mellétek\",\"mellől\",\"mellőle\",\"mellőled\",\"mellőlem\",\"mellőletek\",\"mellőlük\",\"mellőlünk\",\"mely\",\"melyek\",\"melyik\",\"mennyi\",\"mert\",\"mi\",\"miatt\",\"miatta\",\"miattad\",\"miattam\",\"miattatok\",\"miattuk\",\"miattunk\",\"mibe\",\"miben\",\"miből\",\"mihez\",\"mik\",\"mikbe\",\"mikben\",\"mikből\",\"miken\",\"miket\",\"mikhez\",\"mikkel\",\"mikké\",\"miknek\",\"miknél\",\"mikor\",\"mikre\",\"mikről\",\"miktől\",\"mikért\",\"milyen\",\"min\",\"mind\",\"mindegyik\",\"mindegyiket\",\"minden\",\"mindenesetre\",\"mindenki\",\"mindent\",\"mindenütt\",\"mindig\",\"mindketten\",\"minek\",\"minket\",\"mint\",\"mintha\",\"minél\",\"mire\",\"miről\",\"mit\",\"mitől\",\"mivel\",\"mivé\",\"miért\",\"mondta\",\"most\",\"mostanáig\",\"már\",\"más\",\"másik\",\"másikat\",\"másnap\",\"második\",\"másodszor\",\"mások\",\"másokat\",\"mást\",\"még\",\"mégis\",\"míg\",\"mögé\",\"mögéd\",\"mögéjük\",\"mögém\",\"mögénk\",\"mögétek\",\"mögött\",\"mögötte\",\"mögötted\",\"mögöttem\",\"mögöttetek\",\"mögöttük\",\"mögöttünk\",\"mögül\",\"mögüle\",\"mögüled\",\"mögülem\",\"mögületek\",\"mögülük\",\"mögülünk\",\"múltkor\",\"múlva\",\"na\",\"nagy\",\"nagyobb\",\"nagyon\",\"naponta\",\"napot\",\"ne\",\"negyedik\",\"negyediket\",\"negyven\",\"neked\",\"nekem\",\"neki\",\"nekik\",\"nektek\",\"nekünk\",\"nem\",\"nemcsak\",\"nemrég\",\"nincs\",\"nyolc\",\"nyolcadik\",\"nyolcadikat\",\"nyolcat\",\"nyolcvan\",\"nála\",\"nálad\",\"nálam\",\"nálatok\",\"náluk\",\"nálunk\",\"négy\",\"négyet\",\"néha\",\"néhány\",\"nélkül\",\"o\",\"oda\",\"ok\",\"olyan\",\"onnan\",\"ott\",\"pedig\",\"persze\",\"pár\",\"például\",\"rajta\",\"rajtad\",\"rajtam\",\"rajtatok\",\"rajtuk\",\"rajtunk\",\"rendben\",\"rosszul\",\"rá\",\"rád\",\"rájuk\",\"rám\",\"ránk\",\"rátok\",\"régen\",\"régóta\",\"részére\",\"róla\",\"rólad\",\"rólam\",\"rólatok\",\"róluk\",\"rólunk\",\"rögtön\",\"s\",\"saját\",\"se\",\"sem\",\"semmi\",\"semmilyen\",\"semmiség\",\"senki\",\"soha\",\"sok\",\"sokan\",\"sokat\",\"sokkal\",\"sokszor\",\"sokáig\",\"során\",\"stb.\",\"szemben\",\"szerbusz\",\"szerint\",\"szerinte\",\"szerinted\",\"szerintem\",\"szerintetek\",\"szerintük\",\"szerintünk\",\"szervusz\",\"szinte\",\"számára\",\"száz\",\"századik\",\"százat\",\"szépen\",\"szét\",\"szíves\",\"szívesen\",\"szíveskedjék\",\"sőt\",\"talán\",\"tavaly\",\"te\",\"tegnap\",\"tegnapelőtt\",\"tehát\",\"tele\",\"teljes\",\"tessék\",\"ti\",\"tied\",\"titeket\",\"tizedik\",\"tizediket\",\"tizenegy\",\"tizenegyedik\",\"tizenhat\",\"tizenhárom\",\"tizenhét\",\"tizenkettedik\",\"tizenkettő\",\"tizenkilenc\",\"tizenkét\",\"tizennyolc\",\"tizennégy\",\"tizenöt\",\"tizet\",\"tovább\",\"további\",\"továbbá\",\"távol\",\"téged\",\"tényleg\",\"tíz\",\"több\",\"többi\",\"többször\",\"túl\",\"tőle\",\"tőled\",\"tőlem\",\"tőletek\",\"tőlük\",\"tőlünk\",\"ugyanakkor\",\"ugyanez\",\"ugyanis\",\"ugye\",\"urak\",\"uram\",\"urat\",\"utoljára\",\"utolsó\",\"után\",\"utána\",\"vagy\",\"vagyis\",\"vagyok\",\"vagytok\",\"vagyunk\",\"vajon\",\"valahol\",\"valaki\",\"valakit\",\"valamelyik\",\"valami\",\"valamint\",\"való\",\"van\",\"vannak\",\"vele\",\"veled\",\"velem\",\"veletek\",\"velük\",\"velünk\",\"vissza\",\"viszlát\",\"viszont\",\"viszontlátásra\",\"volna\",\"volnának\",\"volnék\",\"volt\",\"voltak\",\"voltam\",\"voltunk\",\"végre\",\"végén\",\"végül\",\"által\",\"általában\",\"ám\",\"át\",\"éljen\",\"én\",\"éppen\",\"érte\",\"érted\",\"értem\",\"értetek\",\"értük\",\"értünk\",\"és\",\"év\",\"évben\",\"éve\",\"évek\",\"éves\",\"évi\",\"évvel\",\"így\",\"óta\",\"õ\",\"õk\",\"õket\",\"ön\",\"önbe\",\"önben\",\"önből\",\"önhöz\",\"önnek\",\"önnel\",\"önnél\",\"önre\",\"önről\",\"önt\",\"öntől\",\"önért\",\"önök\",\"önökbe\",\"önökben\",\"önökből\",\"önöket\",\"önökhöz\",\"önökkel\",\"önöknek\",\"önöknél\",\"önökre\",\"önökről\",\"önöktől\",\"önökért\",\"önökön\",\"önön\",\"össze\",\"öt\",\"ötven\",\"ötödik\",\"ötödiket\",\"ötöt\",\"úgy\",\"úgyis\",\"úgynevezett\",\"új\",\"újabb\",\"újra\",\"úr\",\"ő\",\"ők\",\"őket\",\"őt\"],id:[\"ada\",\"adalah\",\"adanya\",\"adapun\",\"agak\",\"agaknya\",\"agar\",\"akan\",\"akankah\",\"akhir\",\"akhiri\",\"akhirnya\",\"aku\",\"akulah\",\"amat\",\"amatlah\",\"anda\",\"andalah\",\"antar\",\"antara\",\"antaranya\",\"apa\",\"apaan\",\"apabila\",\"apakah\",\"apalagi\",\"apatah\",\"artinya\",\"asal\",\"asalkan\",\"atas\",\"atau\",\"ataukah\",\"ataupun\",\"awal\",\"awalnya\",\"bagai\",\"bagaikan\",\"bagaimana\",\"bagaimanakah\",\"bagaimanapun\",\"bagi\",\"bagian\",\"bahkan\",\"bahwa\",\"bahwasanya\",\"baik\",\"bakal\",\"bakalan\",\"balik\",\"banyak\",\"bapak\",\"baru\",\"bawah\",\"beberapa\",\"begini\",\"beginian\",\"beginikah\",\"beginilah\",\"begitu\",\"begitukah\",\"begitulah\",\"begitupun\",\"bekerja\",\"belakang\",\"belakangan\",\"belum\",\"belumlah\",\"benar\",\"benarkah\",\"benarlah\",\"berada\",\"berakhir\",\"berakhirlah\",\"berakhirnya\",\"berapa\",\"berapakah\",\"berapalah\",\"berapapun\",\"berarti\",\"berawal\",\"berbagai\",\"berdatangan\",\"beri\",\"berikan\",\"berikut\",\"berikutnya\",\"berjumlah\",\"berkali-kali\",\"berkata\",\"berkehendak\",\"berkeinginan\",\"berkenaan\",\"berlainan\",\"berlalu\",\"berlangsung\",\"berlebihan\",\"bermacam\",\"bermacam-macam\",\"bermaksud\",\"bermula\",\"bersama\",\"bersama-sama\",\"bersiap\",\"bersiap-siap\",\"bertanya\",\"bertanya-tanya\",\"berturut\",\"berturut-turut\",\"bertutur\",\"berujar\",\"berupa\",\"besar\",\"betul\",\"betulkah\",\"biasa\",\"biasanya\",\"bila\",\"bilakah\",\"bisa\",\"bisakah\",\"boleh\",\"bolehkah\",\"bolehlah\",\"buat\",\"bukan\",\"bukankah\",\"bukanlah\",\"bukannya\",\"bulan\",\"bung\",\"cara\",\"caranya\",\"cukup\",\"cukupkah\",\"cukuplah\",\"cuma\",\"dahulu\",\"dalam\",\"dan\",\"dapat\",\"dari\",\"daripada\",\"datang\",\"dekat\",\"demi\",\"demikian\",\"demikianlah\",\"dengan\",\"depan\",\"di\",\"dia\",\"diakhiri\",\"diakhirinya\",\"dialah\",\"diantara\",\"diantaranya\",\"diberi\",\"diberikan\",\"diberikannya\",\"dibuat\",\"dibuatnya\",\"didapat\",\"didatangkan\",\"digunakan\",\"diibaratkan\",\"diibaratkannya\",\"diingat\",\"diingatkan\",\"diinginkan\",\"dijawab\",\"dijelaskan\",\"dijelaskannya\",\"dikarenakan\",\"dikatakan\",\"dikatakannya\",\"dikerjakan\",\"diketahui\",\"diketahuinya\",\"dikira\",\"dilakukan\",\"dilalui\",\"dilihat\",\"dimaksud\",\"dimaksudkan\",\"dimaksudkannya\",\"dimaksudnya\",\"diminta\",\"dimintai\",\"dimisalkan\",\"dimulai\",\"dimulailah\",\"dimulainya\",\"dimungkinkan\",\"dini\",\"dipastikan\",\"diperbuat\",\"diperbuatnya\",\"dipergunakan\",\"diperkirakan\",\"diperlihatkan\",\"diperlukan\",\"diperlukannya\",\"dipersoalkan\",\"dipertanyakan\",\"dipunyai\",\"diri\",\"dirinya\",\"disampaikan\",\"disebut\",\"disebutkan\",\"disebutkannya\",\"disini\",\"disinilah\",\"ditambahkan\",\"ditandaskan\",\"ditanya\",\"ditanyai\",\"ditanyakan\",\"ditegaskan\",\"ditujukan\",\"ditunjuk\",\"ditunjuki\",\"ditunjukkan\",\"ditunjukkannya\",\"ditunjuknya\",\"dituturkan\",\"dituturkannya\",\"diucapkan\",\"diucapkannya\",\"diungkapkan\",\"dong\",\"dua\",\"dulu\",\"empat\",\"enggak\",\"enggaknya\",\"entah\",\"entahlah\",\"guna\",\"gunakan\",\"hal\",\"hampir\",\"hanya\",\"hanyalah\",\"hari\",\"harus\",\"haruslah\",\"harusnya\",\"hendak\",\"hendaklah\",\"hendaknya\",\"hingga\",\"ia\",\"ialah\",\"ibarat\",\"ibaratkan\",\"ibaratnya\",\"ibu\",\"ikut\",\"ingat\",\"ingat-ingat\",\"ingin\",\"inginkah\",\"inginkan\",\"ini\",\"inikah\",\"inilah\",\"itu\",\"itukah\",\"itulah\",\"jadi\",\"jadilah\",\"jadinya\",\"jangan\",\"jangankan\",\"janganlah\",\"jauh\",\"jawab\",\"jawaban\",\"jawabnya\",\"jelas\",\"jelaskan\",\"jelaslah\",\"jelasnya\",\"jika\",\"jikalau\",\"juga\",\"jumlah\",\"jumlahnya\",\"justru\",\"kala\",\"kalau\",\"kalaulah\",\"kalaupun\",\"kalian\",\"kami\",\"kamilah\",\"kamu\",\"kamulah\",\"kan\",\"kapan\",\"kapankah\",\"kapanpun\",\"karena\",\"karenanya\",\"kasus\",\"kata\",\"katakan\",\"katakanlah\",\"katanya\",\"ke\",\"keadaan\",\"kebetulan\",\"kecil\",\"kedua\",\"keduanya\",\"keinginan\",\"kelamaan\",\"kelihatan\",\"kelihatannya\",\"kelima\",\"keluar\",\"kembali\",\"kemudian\",\"kemungkinan\",\"kemungkinannya\",\"kenapa\",\"kepada\",\"kepadanya\",\"kesampaian\",\"keseluruhan\",\"keseluruhannya\",\"keterlaluan\",\"ketika\",\"khususnya\",\"kini\",\"kinilah\",\"kira\",\"kira-kira\",\"kiranya\",\"kita\",\"kitalah\",\"kok\",\"kurang\",\"lagi\",\"lagian\",\"lah\",\"lain\",\"lainnya\",\"lalu\",\"lama\",\"lamanya\",\"lanjut\",\"lanjutnya\",\"lebih\",\"lewat\",\"lima\",\"luar\",\"macam\",\"maka\",\"makanya\",\"makin\",\"malah\",\"malahan\",\"mampu\",\"mampukah\",\"mana\",\"manakala\",\"manalagi\",\"masa\",\"masalah\",\"masalahnya\",\"masih\",\"masihkah\",\"masing\",\"masing-masing\",\"mau\",\"maupun\",\"melainkan\",\"melakukan\",\"melalui\",\"melihat\",\"melihatnya\",\"memang\",\"memastikan\",\"memberi\",\"memberikan\",\"membuat\",\"memerlukan\",\"memihak\",\"meminta\",\"memintakan\",\"memisalkan\",\"memperbuat\",\"mempergunakan\",\"memperkirakan\",\"memperlihatkan\",\"mempersiapkan\",\"mempersoalkan\",\"mempertanyakan\",\"mempunyai\",\"memulai\",\"memungkinkan\",\"menaiki\",\"menambahkan\",\"menandaskan\",\"menanti\",\"menanti-nanti\",\"menantikan\",\"menanya\",\"menanyai\",\"menanyakan\",\"mendapat\",\"mendapatkan\",\"mendatang\",\"mendatangi\",\"mendatangkan\",\"menegaskan\",\"mengakhiri\",\"mengapa\",\"mengatakan\",\"mengatakannya\",\"mengenai\",\"mengerjakan\",\"mengetahui\",\"menggunakan\",\"menghendaki\",\"mengibaratkan\",\"mengibaratkannya\",\"mengingat\",\"mengingatkan\",\"menginginkan\",\"mengira\",\"mengucapkan\",\"mengucapkannya\",\"mengungkapkan\",\"menjadi\",\"menjawab\",\"menjelaskan\",\"menuju\",\"menunjuk\",\"menunjuki\",\"menunjukkan\",\"menunjuknya\",\"menurut\",\"menuturkan\",\"menyampaikan\",\"menyangkut\",\"menyatakan\",\"menyebutkan\",\"menyeluruh\",\"menyiapkan\",\"merasa\",\"mereka\",\"merekalah\",\"merupakan\",\"meski\",\"meskipun\",\"meyakini\",\"meyakinkan\",\"minta\",\"mirip\",\"misal\",\"misalkan\",\"misalnya\",\"mula\",\"mulai\",\"mulailah\",\"mulanya\",\"mungkin\",\"mungkinkah\",\"nah\",\"naik\",\"namun\",\"nanti\",\"nantinya\",\"nyaris\",\"nyatanya\",\"oleh\",\"olehnya\",\"pada\",\"padahal\",\"padanya\",\"pak\",\"paling\",\"panjang\",\"pantas\",\"para\",\"pasti\",\"pastilah\",\"penting\",\"pentingnya\",\"per\",\"percuma\",\"perlu\",\"perlukah\",\"perlunya\",\"pernah\",\"persoalan\",\"pertama\",\"pertama-tama\",\"pertanyaan\",\"pertanyakan\",\"pihak\",\"pihaknya\",\"pukul\",\"pula\",\"pun\",\"punya\",\"rasa\",\"rasanya\",\"rata\",\"rupanya\",\"saat\",\"saatnya\",\"saja\",\"sajalah\",\"saling\",\"sama\",\"sama-sama\",\"sambil\",\"sampai\",\"sampai-sampai\",\"sampaikan\",\"sana\",\"sangat\",\"sangatlah\",\"satu\",\"saya\",\"sayalah\",\"se\",\"sebab\",\"sebabnya\",\"sebagai\",\"sebagaimana\",\"sebagainya\",\"sebagian\",\"sebaik\",\"sebaik-baiknya\",\"sebaiknya\",\"sebaliknya\",\"sebanyak\",\"sebegini\",\"sebegitu\",\"sebelum\",\"sebelumnya\",\"sebenarnya\",\"seberapa\",\"sebesar\",\"sebetulnya\",\"sebisanya\",\"sebuah\",\"sebut\",\"sebutlah\",\"sebutnya\",\"secara\",\"secukupnya\",\"sedang\",\"sedangkan\",\"sedemikian\",\"sedikit\",\"sedikitnya\",\"seenaknya\",\"segala\",\"segalanya\",\"segera\",\"seharusnya\",\"sehingga\",\"seingat\",\"sejak\",\"sejauh\",\"sejenak\",\"sejumlah\",\"sekadar\",\"sekadarnya\",\"sekali\",\"sekali-kali\",\"sekalian\",\"sekaligus\",\"sekalipun\",\"sekarang\",\"sekecil\",\"seketika\",\"sekiranya\",\"sekitar\",\"sekitarnya\",\"sekurang-kurangnya\",\"sekurangnya\",\"sela\",\"selagi\",\"selain\",\"selaku\",\"selalu\",\"selama\",\"selama-lamanya\",\"selamanya\",\"selanjutnya\",\"seluruh\",\"seluruhnya\",\"semacam\",\"semakin\",\"semampu\",\"semampunya\",\"semasa\",\"semasih\",\"semata\",\"semata-mata\",\"semaunya\",\"sementara\",\"semisal\",\"semisalnya\",\"sempat\",\"semua\",\"semuanya\",\"semula\",\"sendiri\",\"sendirian\",\"sendirinya\",\"seolah\",\"seolah-olah\",\"seorang\",\"sepanjang\",\"sepantasnya\",\"sepantasnyalah\",\"seperlunya\",\"seperti\",\"sepertinya\",\"sepihak\",\"sering\",\"seringnya\",\"serta\",\"serupa\",\"sesaat\",\"sesama\",\"sesampai\",\"sesegera\",\"sesekali\",\"seseorang\",\"sesuatu\",\"sesuatunya\",\"sesudah\",\"sesudahnya\",\"setelah\",\"setempat\",\"setengah\",\"seterusnya\",\"setiap\",\"setiba\",\"setibanya\",\"setidak-tidaknya\",\"setidaknya\",\"setinggi\",\"seusai\",\"sewaktu\",\"siap\",\"siapa\",\"siapakah\",\"siapapun\",\"sini\",\"sinilah\",\"soal\",\"soalnya\",\"suatu\",\"sudah\",\"sudahkah\",\"sudahlah\",\"supaya\",\"tadi\",\"tadinya\",\"tahu\",\"tahun\",\"tak\",\"tambah\",\"tambahnya\",\"tampak\",\"tampaknya\",\"tandas\",\"tandasnya\",\"tanpa\",\"tanya\",\"tanyakan\",\"tanyanya\",\"tapi\",\"tegas\",\"tegasnya\",\"telah\",\"tempat\",\"tengah\",\"tentang\",\"tentu\",\"tentulah\",\"tentunya\",\"tepat\",\"terakhir\",\"terasa\",\"terbanyak\",\"terdahulu\",\"terdapat\",\"terdiri\",\"terhadap\",\"terhadapnya\",\"teringat\",\"teringat-ingat\",\"terjadi\",\"terjadilah\",\"terjadinya\",\"terkira\",\"terlalu\",\"terlebih\",\"terlihat\",\"termasuk\",\"ternyata\",\"tersampaikan\",\"tersebut\",\"tersebutlah\",\"tertentu\",\"tertuju\",\"terus\",\"terutama\",\"tetap\",\"tetapi\",\"tiap\",\"tiba\",\"tiba-tiba\",\"tidak\",\"tidakkah\",\"tidaklah\",\"tiga\",\"tinggi\",\"toh\",\"tunjuk\",\"turut\",\"tutur\",\"tuturnya\",\"ucap\",\"ucapnya\",\"ujar\",\"ujarnya\",\"umum\",\"umumnya\",\"ungkap\",\"ungkapnya\",\"untuk\",\"usah\",\"usai\",\"waduh\",\"wah\",\"wahai\",\"waktu\",\"waktunya\",\"walau\",\"walaupun\",\"wong\",\"yaitu\",\"yakin\",\"yakni\",\"yang\"],ga:[\"a\",\"ach\",\"ag\",\"agus\",\"an\",\"aon\",\"ar\",\"arna\",\"as\",\"b'\",\"ba\",\"beirt\",\"bhúr\",\"caoga\",\"ceathair\",\"ceathrar\",\"chomh\",\"chtó\",\"chuig\",\"chun\",\"cois\",\"céad\",\"cúig\",\"cúigear\",\"d'\",\"daichead\",\"dar\",\"de\",\"deich\",\"deichniúr\",\"den\",\"dhá\",\"do\",\"don\",\"dtí\",\"dá\",\"dár\",\"dó\",\"faoi\",\"faoin\",\"faoina\",\"faoinár\",\"fara\",\"fiche\",\"gach\",\"gan\",\"go\",\"gur\",\"haon\",\"hocht\",\"i\",\"iad\",\"idir\",\"in\",\"ina\",\"ins\",\"inár\",\"is\",\"le\",\"leis\",\"lena\",\"lenár\",\"m'\",\"mar\",\"mo\",\"mé\",\"na\",\"nach\",\"naoi\",\"naonúr\",\"ná\",\"ní\",\"níor\",\"nó\",\"nócha\",\"ocht\",\"ochtar\",\"os\",\"roimh\",\"sa\",\"seacht\",\"seachtar\",\"seachtó\",\"seasca\",\"seisear\",\"siad\",\"sibh\",\"sinn\",\"sna\",\"sé\",\"sí\",\"tar\",\"thar\",\"thú\",\"triúr\",\"trí\",\"trína\",\"trínár\",\"tríocha\",\"tú\",\"um\",\"ár\",\"é\",\"éis\",\"í\",\"ó\",\"ón\",\"óna\",\"ónár\"],it:[\"a\",\"abbastanza\",\"abbia\",\"abbiamo\",\"abbiano\",\"abbiate\",\"accidenti\",\"ad\",\"adesso\",\"affinché\",\"agl\",\"agli\",\"ahime\",\"ahimè\",\"ai\",\"al\",\"alcuna\",\"alcuni\",\"alcuno\",\"all\",\"alla\",\"alle\",\"allo\",\"allora\",\"altre\",\"altri\",\"altrimenti\",\"altro\",\"altrove\",\"altrui\",\"anche\",\"ancora\",\"anni\",\"anno\",\"ansa\",\"anticipo\",\"assai\",\"attesa\",\"attraverso\",\"avanti\",\"avemmo\",\"avendo\",\"avente\",\"aver\",\"avere\",\"averlo\",\"avesse\",\"avessero\",\"avessi\",\"avessimo\",\"aveste\",\"avesti\",\"avete\",\"aveva\",\"avevamo\",\"avevano\",\"avevate\",\"avevi\",\"avevo\",\"avrai\",\"avranno\",\"avrebbe\",\"avrebbero\",\"avrei\",\"avremmo\",\"avremo\",\"avreste\",\"avresti\",\"avrete\",\"avrà\",\"avrò\",\"avuta\",\"avute\",\"avuti\",\"avuto\",\"basta\",\"ben\",\"bene\",\"benissimo\",\"brava\",\"bravo\",\"buono\",\"c\",\"caso\",\"cento\",\"certa\",\"certe\",\"certi\",\"certo\",\"che\",\"chi\",\"chicchessia\",\"chiunque\",\"ci\",\"ciascuna\",\"ciascuno\",\"cima\",\"cinque\",\"cio\",\"cioe\",\"cioè\",\"circa\",\"citta\",\"città\",\"ciò\",\"co\",\"codesta\",\"codesti\",\"codesto\",\"cogli\",\"coi\",\"col\",\"colei\",\"coll\",\"coloro\",\"colui\",\"come\",\"cominci\",\"comprare\",\"comunque\",\"con\",\"concernente\",\"conclusione\",\"consecutivi\",\"consecutivo\",\"consiglio\",\"contro\",\"cortesia\",\"cos\",\"cosa\",\"cosi\",\"così\",\"cui\",\"d\",\"da\",\"dagl\",\"dagli\",\"dai\",\"dal\",\"dall\",\"dalla\",\"dalle\",\"dallo\",\"dappertutto\",\"davanti\",\"degl\",\"degli\",\"dei\",\"del\",\"dell\",\"della\",\"delle\",\"dello\",\"dentro\",\"detto\",\"deve\",\"devo\",\"di\",\"dice\",\"dietro\",\"dire\",\"dirimpetto\",\"diventa\",\"diventare\",\"diventato\",\"dopo\",\"doppio\",\"dov\",\"dove\",\"dovra\",\"dovrà\",\"dovunque\",\"due\",\"dunque\",\"durante\",\"e\",\"ebbe\",\"ebbero\",\"ebbi\",\"ecc\",\"ecco\",\"ed\",\"effettivamente\",\"egli\",\"ella\",\"entrambi\",\"eppure\",\"era\",\"erano\",\"eravamo\",\"eravate\",\"eri\",\"ero\",\"esempio\",\"esse\",\"essendo\",\"esser\",\"essere\",\"essi\",\"ex\",\"fa\",\"faccia\",\"facciamo\",\"facciano\",\"facciate\",\"faccio\",\"facemmo\",\"facendo\",\"facesse\",\"facessero\",\"facessi\",\"facessimo\",\"faceste\",\"facesti\",\"faceva\",\"facevamo\",\"facevano\",\"facevate\",\"facevi\",\"facevo\",\"fai\",\"fanno\",\"farai\",\"faranno\",\"fare\",\"farebbe\",\"farebbero\",\"farei\",\"faremmo\",\"faremo\",\"fareste\",\"faresti\",\"farete\",\"farà\",\"farò\",\"fatto\",\"favore\",\"fece\",\"fecero\",\"feci\",\"fin\",\"finalmente\",\"finche\",\"fine\",\"fino\",\"forse\",\"forza\",\"fosse\",\"fossero\",\"fossi\",\"fossimo\",\"foste\",\"fosti\",\"fra\",\"frattempo\",\"fu\",\"fui\",\"fummo\",\"fuori\",\"furono\",\"futuro\",\"generale\",\"gente\",\"gia\",\"giacche\",\"giorni\",\"giorno\",\"giu\",\"già\",\"gli\",\"gliela\",\"gliele\",\"glieli\",\"glielo\",\"gliene\",\"grande\",\"grazie\",\"gruppo\",\"ha\",\"haha\",\"hai\",\"hanno\",\"ho\",\"i\",\"ie\",\"ieri\",\"il\",\"improvviso\",\"in\",\"inc\",\"indietro\",\"infatti\",\"inoltre\",\"insieme\",\"intanto\",\"intorno\",\"invece\",\"io\",\"l\",\"la\",\"lasciato\",\"lato\",\"le\",\"lei\",\"li\",\"lo\",\"lontano\",\"loro\",\"lui\",\"lungo\",\"luogo\",\"là\",\"ma\",\"macche\",\"magari\",\"maggior\",\"mai\",\"male\",\"malgrado\",\"malissimo\",\"me\",\"medesimo\",\"mediante\",\"meglio\",\"meno\",\"mentre\",\"mesi\",\"mezzo\",\"mi\",\"mia\",\"mie\",\"miei\",\"mila\",\"miliardi\",\"milioni\",\"minimi\",\"mio\",\"modo\",\"molta\",\"molti\",\"moltissimo\",\"molto\",\"momento\",\"mondo\",\"ne\",\"negl\",\"negli\",\"nei\",\"nel\",\"nell\",\"nella\",\"nelle\",\"nello\",\"nemmeno\",\"neppure\",\"nessun\",\"nessuna\",\"nessuno\",\"niente\",\"no\",\"noi\",\"nome\",\"non\",\"nondimeno\",\"nonostante\",\"nonsia\",\"nostra\",\"nostre\",\"nostri\",\"nostro\",\"novanta\",\"nove\",\"nulla\",\"nuovi\",\"nuovo\",\"o\",\"od\",\"oggi\",\"ogni\",\"ognuna\",\"ognuno\",\"oltre\",\"oppure\",\"ora\",\"ore\",\"osi\",\"ossia\",\"ottanta\",\"otto\",\"paese\",\"parecchi\",\"parecchie\",\"parecchio\",\"parte\",\"partendo\",\"peccato\",\"peggio\",\"per\",\"perche\",\"perchè\",\"perché\",\"percio\",\"perciò\",\"perfino\",\"pero\",\"persino\",\"persone\",\"però\",\"piedi\",\"pieno\",\"piglia\",\"piu\",\"piuttosto\",\"più\",\"po\",\"pochissimo\",\"poco\",\"poi\",\"poiche\",\"possa\",\"possedere\",\"posteriore\",\"posto\",\"potrebbe\",\"preferibilmente\",\"presa\",\"press\",\"prima\",\"primo\",\"principalmente\",\"probabilmente\",\"promesso\",\"proprio\",\"puo\",\"pure\",\"purtroppo\",\"può\",\"qua\",\"qualche\",\"qualcosa\",\"qualcuna\",\"qualcuno\",\"quale\",\"quali\",\"qualunque\",\"quando\",\"quanta\",\"quante\",\"quanti\",\"quanto\",\"quantunque\",\"quarto\",\"quasi\",\"quattro\",\"quel\",\"quella\",\"quelle\",\"quelli\",\"quello\",\"quest\",\"questa\",\"queste\",\"questi\",\"questo\",\"qui\",\"quindi\",\"quinto\",\"realmente\",\"recente\",\"recentemente\",\"registrazione\",\"relativo\",\"riecco\",\"rispetto\",\"salvo\",\"sara\",\"sarai\",\"saranno\",\"sarebbe\",\"sarebbero\",\"sarei\",\"saremmo\",\"saremo\",\"sareste\",\"saresti\",\"sarete\",\"sarà\",\"sarò\",\"scola\",\"scopo\",\"scorso\",\"se\",\"secondo\",\"seguente\",\"seguito\",\"sei\",\"sembra\",\"sembrare\",\"sembrato\",\"sembrava\",\"sembri\",\"sempre\",\"senza\",\"sette\",\"si\",\"sia\",\"siamo\",\"siano\",\"siate\",\"siete\",\"sig\",\"solito\",\"solo\",\"soltanto\",\"sono\",\"sopra\",\"soprattutto\",\"sotto\",\"spesso\",\"sta\",\"stai\",\"stando\",\"stanno\",\"starai\",\"staranno\",\"starebbe\",\"starebbero\",\"starei\",\"staremmo\",\"staremo\",\"stareste\",\"staresti\",\"starete\",\"starà\",\"starò\",\"stata\",\"state\",\"stati\",\"stato\",\"stava\",\"stavamo\",\"stavano\",\"stavate\",\"stavi\",\"stavo\",\"stemmo\",\"stessa\",\"stesse\",\"stessero\",\"stessi\",\"stessimo\",\"stesso\",\"steste\",\"stesti\",\"stette\",\"stettero\",\"stetti\",\"stia\",\"stiamo\",\"stiano\",\"stiate\",\"sto\",\"su\",\"sua\",\"subito\",\"successivamente\",\"successivo\",\"sue\",\"sugl\",\"sugli\",\"sui\",\"sul\",\"sull\",\"sulla\",\"sulle\",\"sullo\",\"suo\",\"suoi\",\"tale\",\"tali\",\"talvolta\",\"tanto\",\"te\",\"tempo\",\"terzo\",\"th\",\"ti\",\"titolo\",\"tra\",\"tranne\",\"tre\",\"trenta\",\"triplo\",\"troppo\",\"trovato\",\"tu\",\"tua\",\"tue\",\"tuo\",\"tuoi\",\"tutta\",\"tuttavia\",\"tutte\",\"tutti\",\"tutto\",\"uguali\",\"ulteriore\",\"ultimo\",\"un\",\"una\",\"uno\",\"uomo\",\"va\",\"vai\",\"vale\",\"vari\",\"varia\",\"varie\",\"vario\",\"verso\",\"vi\",\"vicino\",\"visto\",\"vita\",\"voi\",\"volta\",\"volte\",\"vostra\",\"vostre\",\"vostri\",\"vostro\",\"è\"],ja:[\"あそこ\",\"あっ\",\"あの\",\"あのかた\",\"あの人\",\"あり\",\"あります\",\"ある\",\"あれ\",\"い\",\"いう\",\"います\",\"いる\",\"う\",\"うち\",\"え\",\"お\",\"および\",\"おり\",\"おります\",\"か\",\"かつて\",\"から\",\"が\",\"き\",\"ここ\",\"こちら\",\"こと\",\"この\",\"これ\",\"これら\",\"さ\",\"さらに\",\"し\",\"しかし\",\"する\",\"ず\",\"せ\",\"せる\",\"そこ\",\"そして\",\"その\",\"その他\",\"その後\",\"それ\",\"それぞれ\",\"それで\",\"た\",\"ただし\",\"たち\",\"ため\",\"たり\",\"だ\",\"だっ\",\"だれ\",\"つ\",\"て\",\"で\",\"でき\",\"できる\",\"です\",\"では\",\"でも\",\"と\",\"という\",\"といった\",\"とき\",\"ところ\",\"として\",\"とともに\",\"とも\",\"と共に\",\"どこ\",\"どの\",\"な\",\"ない\",\"なお\",\"なかっ\",\"ながら\",\"なく\",\"なっ\",\"など\",\"なに\",\"なら\",\"なり\",\"なる\",\"なん\",\"に\",\"において\",\"における\",\"について\",\"にて\",\"によって\",\"により\",\"による\",\"に対して\",\"に対する\",\"に関する\",\"の\",\"ので\",\"のみ\",\"は\",\"ば\",\"へ\",\"ほか\",\"ほとんど\",\"ほど\",\"ます\",\"また\",\"または\",\"まで\",\"も\",\"もの\",\"ものの\",\"や\",\"よう\",\"より\",\"ら\",\"られ\",\"られる\",\"れ\",\"れる\",\"を\",\"ん\",\"何\",\"及び\",\"彼\",\"彼女\",\"我々\",\"特に\",\"私\",\"私達\",\"貴方\",\"貴方方\"],ko:[\"!\",'\"',\"$\",\"%\",\"&\",\"'\",\"(\",\")\",\"*\",\"+\",\",\",\"-\",\".\",\"...\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\";\",\"<\",\"=\",\">\",\"?\",\"@\",\"\\\\\",\"^\",\"_\",\"`\",\"|\",\"~\",\"·\",\"—\",\"——\",\"‘\",\"’\",\"“\",\"”\",\"…\",\"、\",\"。\",\"〈\",\"〉\",\"《\",\"》\",\"가\",\"가까스로\",\"가령\",\"각\",\"각각\",\"각자\",\"각종\",\"갖고말하자면\",\"같다\",\"같이\",\"개의치않고\",\"거니와\",\"거바\",\"거의\",\"것\",\"것과 같이\",\"것들\",\"게다가\",\"게우다\",\"겨우\",\"견지에서\",\"결과에 이르다\",\"결국\",\"결론을 낼 수 있다\",\"겸사겸사\",\"고려하면\",\"고로\",\"곧\",\"공동으로\",\"과\",\"과연\",\"관계가 있다\",\"관계없이\",\"관련이 있다\",\"관하여\",\"관한\",\"관해서는\",\"구\",\"구체적으로\",\"구토하다\",\"그\",\"그들\",\"그때\",\"그래\",\"그래도\",\"그래서\",\"그러나\",\"그러니\",\"그러니까\",\"그러면\",\"그러므로\",\"그러한즉\",\"그런 까닭에\",\"그런데\",\"그런즉\",\"그럼\",\"그럼에도 불구하고\",\"그렇게 함으로써\",\"그렇지\",\"그렇지 않다면\",\"그렇지 않으면\",\"그렇지만\",\"그렇지않으면\",\"그리고\",\"그리하여\",\"그만이다\",\"그에 따르는\",\"그위에\",\"그저\",\"그중에서\",\"그치지 않다\",\"근거로\",\"근거하여\",\"기대여\",\"기점으로\",\"기준으로\",\"기타\",\"까닭으로\",\"까악\",\"까지\",\"까지 미치다\",\"까지도\",\"꽈당\",\"끙끙\",\"끼익\",\"나\",\"나머지는\",\"남들\",\"남짓\",\"너\",\"너희\",\"너희들\",\"네\",\"넷\",\"년\",\"논하지 않다\",\"놀라다\",\"누가 알겠는가\",\"누구\",\"다른\",\"다른 방면으로\",\"다만\",\"다섯\",\"다소\",\"다수\",\"다시 말하자면\",\"다시말하면\",\"다음\",\"다음에\",\"다음으로\",\"단지\",\"답다\",\"당신\",\"당장\",\"대로 하다\",\"대하면\",\"대하여\",\"대해 말하자면\",\"대해서\",\"댕그\",\"더구나\",\"더군다나\",\"더라도\",\"더불어\",\"더욱더\",\"더욱이는\",\"도달하다\",\"도착하다\",\"동시에\",\"동안\",\"된바에야\",\"된이상\",\"두번째로\",\"둘\",\"둥둥\",\"뒤따라\",\"뒤이어\",\"든간에\",\"들\",\"등\",\"등등\",\"딩동\",\"따라\",\"따라서\",\"따위\",\"따지지 않다\",\"딱\",\"때\",\"때가 되어\",\"때문에\",\"또\",\"또한\",\"뚝뚝\",\"라 해도\",\"령\",\"로\",\"로 인하여\",\"로부터\",\"로써\",\"륙\",\"를\",\"마음대로\",\"마저\",\"마저도\",\"마치\",\"막론하고\",\"만 못하다\",\"만약\",\"만약에\",\"만은 아니다\",\"만이 아니다\",\"만일\",\"만큼\",\"말하자면\",\"말할것도 없고\",\"매\",\"매번\",\"메쓰겁다\",\"몇\",\"모\",\"모두\",\"무렵\",\"무릎쓰고\",\"무슨\",\"무엇\",\"무엇때문에\",\"물론\",\"및\",\"바꾸어말하면\",\"바꾸어말하자면\",\"바꾸어서 말하면\",\"바꾸어서 한다면\",\"바꿔 말하면\",\"바로\",\"바와같이\",\"밖에 안된다\",\"반대로\",\"반대로 말하자면\",\"반드시\",\"버금\",\"보는데서\",\"보다더\",\"보드득\",\"본대로\",\"봐\",\"봐라\",\"부류의 사람들\",\"부터\",\"불구하고\",\"불문하고\",\"붕붕\",\"비걱거리다\",\"비교적\",\"비길수 없다\",\"비로소\",\"비록\",\"비슷하다\",\"비추어 보아\",\"비하면\",\"뿐만 아니라\",\"뿐만아니라\",\"뿐이다\",\"삐걱\",\"삐걱거리다\",\"사\",\"삼\",\"상대적으로 말하자면\",\"생각한대로\",\"설령\",\"설마\",\"설사\",\"셋\",\"소생\",\"소인\",\"솨\",\"쉿\",\"습니까\",\"습니다\",\"시각\",\"시간\",\"시작하여\",\"시초에\",\"시키다\",\"실로\",\"심지어\",\"아\",\"아니\",\"아니나다를가\",\"아니라면\",\"아니면\",\"아니었다면\",\"아래윗\",\"아무거나\",\"아무도\",\"아야\",\"아울러\",\"아이\",\"아이고\",\"아이구\",\"아이야\",\"아이쿠\",\"아하\",\"아홉\",\"안 그러면\",\"않기 위하여\",\"않기 위해서\",\"알 수 있다\",\"알았어\",\"앗\",\"앞에서\",\"앞의것\",\"야\",\"약간\",\"양자\",\"어\",\"어기여차\",\"어느\",\"어느 년도\",\"어느것\",\"어느곳\",\"어느때\",\"어느쪽\",\"어느해\",\"어디\",\"어때\",\"어떠한\",\"어떤\",\"어떤것\",\"어떤것들\",\"어떻게\",\"어떻해\",\"어이\",\"어째서\",\"어쨋든\",\"어쩔수 없다\",\"어찌\",\"어찌됏든\",\"어찌됏어\",\"어찌하든지\",\"어찌하여\",\"언제\",\"언젠가\",\"얼마\",\"얼마 안 되는 것\",\"얼마간\",\"얼마나\",\"얼마든지\",\"얼마만큼\",\"얼마큼\",\"엉엉\",\"에\",\"에 가서\",\"에 달려 있다\",\"에 대해\",\"에 있다\",\"에 한하다\",\"에게\",\"에서\",\"여\",\"여기\",\"여덟\",\"여러분\",\"여보시오\",\"여부\",\"여섯\",\"여전히\",\"여차\",\"연관되다\",\"연이서\",\"영\",\"영차\",\"옆사람\",\"예\",\"예를 들면\",\"예를 들자면\",\"예컨대\",\"예하면\",\"오\",\"오로지\",\"오르다\",\"오자마자\",\"오직\",\"오호\",\"오히려\",\"와\",\"와 같은 사람들\",\"와르르\",\"와아\",\"왜\",\"왜냐하면\",\"외에도\",\"요만큼\",\"요만한 것\",\"요만한걸\",\"요컨대\",\"우르르\",\"우리\",\"우리들\",\"우선\",\"우에 종합한것과같이\",\"운운\",\"월\",\"위에서 서술한바와같이\",\"위하여\",\"위해서\",\"윙윙\",\"육\",\"으로\",\"으로 인하여\",\"으로서\",\"으로써\",\"을\",\"응\",\"응당\",\"의\",\"의거하여\",\"의지하여\",\"의해\",\"의해되다\",\"의해서\",\"이\",\"이 되다\",\"이 때문에\",\"이 밖에\",\"이 외에\",\"이 정도의\",\"이것\",\"이곳\",\"이때\",\"이라면\",\"이래\",\"이러이러하다\",\"이러한\",\"이런\",\"이럴정도로\",\"이렇게 많은 것\",\"이렇게되면\",\"이렇게말하자면\",\"이렇구나\",\"이로 인하여\",\"이르기까지\",\"이리하여\",\"이만큼\",\"이번\",\"이봐\",\"이상\",\"이어서\",\"이었다\",\"이와 같다\",\"이와 같은\",\"이와 반대로\",\"이와같다면\",\"이외에도\",\"이용하여\",\"이유만으로\",\"이젠\",\"이지만\",\"이쪽\",\"이천구\",\"이천육\",\"이천칠\",\"이천팔\",\"인 듯하다\",\"인젠\",\"일\",\"일것이다\",\"일곱\",\"일단\",\"일때\",\"일반적으로\",\"일지라도\",\"임에 틀림없다\",\"입각하여\",\"입장에서\",\"잇따라\",\"있다\",\"자\",\"자기\",\"자기집\",\"자마자\",\"자신\",\"잠깐\",\"잠시\",\"저\",\"저것\",\"저것만큼\",\"저기\",\"저쪽\",\"저희\",\"전부\",\"전자\",\"전후\",\"점에서 보아\",\"정도에 이르다\",\"제\",\"제각기\",\"제외하고\",\"조금\",\"조차\",\"조차도\",\"졸졸\",\"좀\",\"좋아\",\"좍좍\",\"주룩주룩\",\"주저하지 않고\",\"줄은 몰랏다\",\"줄은모른다\",\"중에서\",\"중의하나\",\"즈음하여\",\"즉\",\"즉시\",\"지든지\",\"지만\",\"지말고\",\"진짜로\",\"쪽으로\",\"차라리\",\"참\",\"참나\",\"첫번째로\",\"쳇\",\"총적으로\",\"총적으로 말하면\",\"총적으로 보면\",\"칠\",\"콸콸\",\"쾅쾅\",\"쿵\",\"타다\",\"타인\",\"탕탕\",\"토하다\",\"통하여\",\"툭\",\"퉤\",\"틈타\",\"팍\",\"팔\",\"퍽\",\"펄렁\",\"하\",\"하게될것이다\",\"하게하다\",\"하겠는가\",\"하고 있다\",\"하고있었다\",\"하곤하였다\",\"하구나\",\"하기 때문에\",\"하기 위하여\",\"하기는한데\",\"하기만 하면\",\"하기보다는\",\"하기에\",\"하나\",\"하느니\",\"하는 김에\",\"하는 편이 낫다\",\"하는것도\",\"하는것만 못하다\",\"하는것이 낫다\",\"하는바\",\"하더라도\",\"하도다\",\"하도록시키다\",\"하도록하다\",\"하든지\",\"하려고하다\",\"하마터면\",\"하면 할수록\",\"하면된다\",\"하면서\",\"하물며\",\"하여금\",\"하여야\",\"하자마자\",\"하지 않는다면\",\"하지 않도록\",\"하지마\",\"하지마라\",\"하지만\",\"하하\",\"한 까닭에\",\"한 이유는\",\"한 후\",\"한다면\",\"한다면 몰라도\",\"한데\",\"한마디\",\"한적이있다\",\"한켠으로는\",\"한항목\",\"할 따름이다\",\"할 생각이다\",\"할 줄 안다\",\"할 지경이다\",\"할 힘이 있다\",\"할때\",\"할만하다\",\"할망정\",\"할뿐\",\"할수있다\",\"할수있어\",\"할줄알다\",\"할지라도\",\"할지언정\",\"함께\",\"해도된다\",\"해도좋다\",\"해봐요\",\"해서는 안된다\",\"해야한다\",\"해요\",\"했어요\",\"향하다\",\"향하여\",\"향해서\",\"허\",\"허걱\",\"허허\",\"헉\",\"헉헉\",\"헐떡헐떡\",\"형식으로 쓰여\",\"혹시\",\"혹은\",\"혼자\",\"훨씬\",\"휘익\",\"휴\",\"흐흐\",\"흥\",\"힘입어\",\"︿\",\"！\",\"＃\",\"＄\",\"％\",\"＆\",\"（\",\"）\",\"＊\",\"＋\",\"，\",\"０\",\"１\",\"２\",\"３\",\"４\",\"５\",\"６\",\"７\",\"８\",\"９\",\"：\",\"；\",\"＜\",\"＞\",\"？\",\"＠\",\"［\",\"］\",\"｛\",\"｜\",\"｝\",\"～\",\"￥\"],ku:[\"ئێمە\",\"ئێوە\",\"ئەم\",\"ئەو\",\"ئەوان\",\"ئەوەی\",\"بۆ\",\"بێ\",\"بێجگە\",\"بە\",\"بەبێ\",\"بەدەم\",\"بەردەم\",\"بەرلە\",\"بەرەوی\",\"بەرەوە\",\"بەلای\",\"بەپێی\",\"تۆ\",\"تێ\",\"جگە\",\"دوای\",\"دوو\",\"دە\",\"دەکات\",\"دەگەڵ\",\"سەر\",\"لێ\",\"لە\",\"لەبابەت\",\"لەباتی\",\"لەبارەی\",\"لەبرێتی\",\"لەبن\",\"لەبەر\",\"لەبەینی\",\"لەدەم\",\"لەرێ\",\"لەرێگا\",\"لەرەوی\",\"لەسەر\",\"لەلایەن\",\"لەناو\",\"لەنێو\",\"لەو\",\"لەپێناوی\",\"لەژێر\",\"لەگەڵ\",\"من\",\"ناو\",\"نێوان\",\"هەر\",\"هەروەها\",\"و\",\"وەک\",\"پاش\",\"پێ\",\"پێش\",\"چەند\",\"کرد\",\"کە\",\"ی\"],la:[\"a\",\"ab\",\"ac\",\"ad\",\"at\",\"atque\",\"aut\",\"autem\",\"cum\",\"de\",\"dum\",\"e\",\"erant\",\"erat\",\"est\",\"et\",\"etiam\",\"ex\",\"haec\",\"hic\",\"hoc\",\"in\",\"ita\",\"me\",\"nec\",\"neque\",\"non\",\"per\",\"qua\",\"quae\",\"quam\",\"qui\",\"quibus\",\"quidem\",\"quo\",\"quod\",\"re\",\"rebus\",\"rem\",\"res\",\"sed\",\"si\",\"sic\",\"sunt\",\"tamen\",\"tandem\",\"te\",\"ut\",\"vel\"],lt:[\"abi\",\"abidvi\",\"abiejose\",\"abiejuose\",\"abiejø\",\"abiem\",\"abigaliai\",\"abipus\",\"abu\",\"abudu\",\"ai\",\"ana\",\"anaiptol\",\"anaisiais\",\"anajai\",\"anajam\",\"anajame\",\"anapus\",\"anas\",\"anasai\",\"anasis\",\"anei\",\"aniedvi\",\"anieji\",\"aniesiems\",\"anoji\",\"anojo\",\"anojoje\",\"anokia\",\"anoks\",\"anosiomis\",\"anosioms\",\"anosios\",\"anosiose\",\"anot\",\"ant\",\"antai\",\"anuodu\",\"anuoju\",\"anuosiuose\",\"anuosius\",\"anàja\",\"anàjà\",\"anàjá\",\"anàsias\",\"anøjø\",\"apie\",\"aplink\",\"ar\",\"arba\",\"argi\",\"arti\",\"aukðèiau\",\"að\",\"be\",\"bei\",\"beje\",\"bemaþ\",\"bent\",\"bet\",\"betgi\",\"beveik\",\"dar\",\"dargi\",\"daugmaþ\",\"deja\",\"dëka\",\"dël\",\"dëlei\",\"dëlto\",\"ech\",\"et\",\"gal\",\"galbût\",\"galgi\",\"gan\",\"gana\",\"gi\",\"greta\",\"idant\",\"iki\",\"ir\",\"irgi\",\"it\",\"itin\",\"ið\",\"iðilgai\",\"iðvis\",\"jaisiais\",\"jajai\",\"jajam\",\"jajame\",\"jei\",\"jeigu\",\"ji\",\"jiedu\",\"jiedvi\",\"jieji\",\"jiesiems\",\"jinai\",\"jis\",\"jisai\",\"jog\",\"joji\",\"jojo\",\"jojoje\",\"jokia\",\"joks\",\"josiomis\",\"josioms\",\"josios\",\"josiose\",\"judu\",\"judvi\",\"juk\",\"jumis\",\"jums\",\"jumyse\",\"juodu\",\"juoju\",\"juosiuose\",\"juosius\",\"jus\",\"jàja\",\"jàjà\",\"jàsias\",\"jájá\",\"jøjø\",\"jûs\",\"jûsiðkis\",\"jûsiðkë\",\"jûsø\",\"kad\",\"kada\",\"kadangi\",\"kai\",\"kaip\",\"kaipgi\",\"kas\",\"katra\",\"katras\",\"katriedvi\",\"katruodu\",\"kaþin\",\"kaþkas\",\"kaþkatra\",\"kaþkatras\",\"kaþkokia\",\"kaþkoks\",\"kaþkuri\",\"kaþkuris\",\"kiaurai\",\"kiek\",\"kiekvienas\",\"kieno\",\"kita\",\"kitas\",\"kitokia\",\"kitoks\",\"kodël\",\"kokia\",\"koks\",\"kol\",\"kolei\",\"kone\",\"kuomet\",\"kur\",\"kurgi\",\"kuri\",\"kuriedvi\",\"kuris\",\"kuriuodu\",\"lai\",\"lig\",\"ligi\",\"link\",\"lyg\",\"man\",\"manaisiais\",\"manajai\",\"manajam\",\"manajame\",\"manas\",\"manasai\",\"manasis\",\"mane\",\"manieji\",\"maniesiems\",\"manim\",\"manimi\",\"maniðkis\",\"maniðkë\",\"mano\",\"manoji\",\"manojo\",\"manojoje\",\"manosiomis\",\"manosioms\",\"manosios\",\"manosiose\",\"manuoju\",\"manuosiuose\",\"manuosius\",\"manyje\",\"manàja\",\"manàjà\",\"manàjá\",\"manàsias\",\"manæs\",\"manøjø\",\"mat\",\"maþdaug\",\"maþne\",\"mes\",\"mudu\",\"mudvi\",\"mumis\",\"mums\",\"mumyse\",\"mus\",\"mûsiðkis\",\"mûsiðkë\",\"mûsø\",\"na\",\"nagi\",\"ne\",\"nebe\",\"nebent\",\"negi\",\"negu\",\"nei\",\"nejau\",\"nejaugi\",\"nekaip\",\"nelyginant\",\"nes\",\"net\",\"netgi\",\"netoli\",\"neva\",\"nors\",\"nuo\",\"në\",\"o\",\"ogi\",\"oi\",\"paeiliui\",\"pagal\",\"pakeliui\",\"palaipsniui\",\"palei\",\"pas\",\"pasak\",\"paskos\",\"paskui\",\"paskum\",\"pat\",\"pati\",\"patiems\",\"paties\",\"pats\",\"patys\",\"patá\",\"paèiais\",\"paèiam\",\"paèiame\",\"paèiu\",\"paèiuose\",\"paèius\",\"paèiø\",\"per\",\"pernelyg\",\"pirm\",\"pirma\",\"pirmiau\",\"po\",\"prie\",\"prieð\",\"prieðais\",\"pro\",\"pusiau\",\"rasi\",\"rodos\",\"sau\",\"savaisiais\",\"savajai\",\"savajam\",\"savajame\",\"savas\",\"savasai\",\"savasis\",\"save\",\"savieji\",\"saviesiems\",\"savimi\",\"saviðkis\",\"saviðkë\",\"savo\",\"savoji\",\"savojo\",\"savojoje\",\"savosiomis\",\"savosioms\",\"savosios\",\"savosiose\",\"savuoju\",\"savuosiuose\",\"savuosius\",\"savyje\",\"savàja\",\"savàjà\",\"savàjá\",\"savàsias\",\"savæs\",\"savøjø\",\"skersai\",\"skradþiai\",\"staèiai\",\"su\",\"sulig\",\"ta\",\"tad\",\"tai\",\"taigi\",\"taip\",\"taipogi\",\"taisiais\",\"tajai\",\"tajam\",\"tajame\",\"tamsta\",\"tarp\",\"tarsi\",\"tartum\",\"tarytum\",\"tas\",\"tasai\",\"tau\",\"tavaisiais\",\"tavajai\",\"tavajam\",\"tavajame\",\"tavas\",\"tavasai\",\"tavasis\",\"tave\",\"tavieji\",\"taviesiems\",\"tavimi\",\"taviðkis\",\"taviðkë\",\"tavo\",\"tavoji\",\"tavojo\",\"tavojoje\",\"tavosiomis\",\"tavosioms\",\"tavosios\",\"tavosiose\",\"tavuoju\",\"tavuosiuose\",\"tavuosius\",\"tavyje\",\"tavàja\",\"tavàjà\",\"tavàjá\",\"tavàsias\",\"tavæs\",\"tavøjø\",\"taèiau\",\"te\",\"tegu\",\"tegul\",\"tiedvi\",\"tieji\",\"ties\",\"tiesiems\",\"tiesiog\",\"tik\",\"tikriausiai\",\"tiktai\",\"toji\",\"tojo\",\"tojoje\",\"tokia\",\"toks\",\"tol\",\"tolei\",\"toliau\",\"tosiomis\",\"tosioms\",\"tosios\",\"tosiose\",\"tu\",\"tuodu\",\"tuoju\",\"tuosiuose\",\"tuosius\",\"turbût\",\"tàja\",\"tàjà\",\"tàjá\",\"tàsias\",\"tøjø\",\"tûlas\",\"uþ\",\"uþtat\",\"uþvis\",\"va\",\"vai\",\"viduj\",\"vidury\",\"vien\",\"vienas\",\"vienokia\",\"vienoks\",\"vietoj\",\"virð\",\"virðuj\",\"virðum\",\"vis\",\"vis dëlto\",\"visa\",\"visas\",\"visgi\",\"visokia\",\"visoks\",\"vos\",\"vël\",\"vëlgi\",\"ypaè\",\"á\",\"ákypai\",\"ástriþai\",\"ðalia\",\"ðe\",\"ði\",\"ðiaisiais\",\"ðiajai\",\"ðiajam\",\"ðiajame\",\"ðiapus\",\"ðiedvi\",\"ðieji\",\"ðiesiems\",\"ðioji\",\"ðiojo\",\"ðiojoje\",\"ðiokia\",\"ðioks\",\"ðiosiomis\",\"ðiosioms\",\"ðiosios\",\"ðiosiose\",\"ðis\",\"ðisai\",\"ðit\",\"ðita\",\"ðitas\",\"ðitiedvi\",\"ðitokia\",\"ðitoks\",\"ðituodu\",\"ðiuodu\",\"ðiuoju\",\"ðiuosiuose\",\"ðiuosius\",\"ðiàja\",\"ðiàjà\",\"ðiàsias\",\"ðiøjø\",\"ðtai\",\"ðájá\",\"þemiau\"],lv:[\"aiz\",\"ap\",\"apakš\",\"apakšpus\",\"ar\",\"arī\",\"augšpus\",\"bet\",\"bez\",\"bija\",\"biji\",\"biju\",\"bijām\",\"bijāt\",\"būs\",\"būsi\",\"būsiet\",\"būsim\",\"būt\",\"būšu\",\"caur\",\"diemžēl\",\"diezin\",\"droši\",\"dēļ\",\"esam\",\"esat\",\"esi\",\"esmu\",\"gan\",\"gar\",\"iekam\",\"iekams\",\"iekām\",\"iekāms\",\"iekš\",\"iekšpus\",\"ik\",\"ir\",\"it\",\"itin\",\"iz\",\"ja\",\"jau\",\"jeb\",\"jebšu\",\"jel\",\"jo\",\"jā\",\"ka\",\"kamēr\",\"kaut\",\"kolīdz\",\"kopš\",\"kā\",\"kļuva\",\"kļuvi\",\"kļuvu\",\"kļuvām\",\"kļuvāt\",\"kļūs\",\"kļūsi\",\"kļūsiet\",\"kļūsim\",\"kļūst\",\"kļūstam\",\"kļūstat\",\"kļūsti\",\"kļūstu\",\"kļūt\",\"kļūšu\",\"labad\",\"lai\",\"lejpus\",\"līdz\",\"līdzko\",\"ne\",\"nebūt\",\"nedz\",\"nekā\",\"nevis\",\"nezin\",\"no\",\"nu\",\"nē\",\"otrpus\",\"pa\",\"par\",\"pat\",\"pie\",\"pirms\",\"pret\",\"priekš\",\"pār\",\"pēc\",\"starp\",\"tad\",\"tak\",\"tapi\",\"taps\",\"tapsi\",\"tapsiet\",\"tapsim\",\"tapt\",\"tapāt\",\"tapšu\",\"taču\",\"te\",\"tiec\",\"tiek\",\"tiekam\",\"tiekat\",\"tieku\",\"tik\",\"tika\",\"tikai\",\"tiki\",\"tikko\",\"tiklab\",\"tiklīdz\",\"tiks\",\"tiksiet\",\"tiksim\",\"tikt\",\"tiku\",\"tikvien\",\"tikām\",\"tikāt\",\"tikšu\",\"tomēr\",\"topat\",\"turpretim\",\"turpretī\",\"tā\",\"tādēļ\",\"tālab\",\"tāpēc\",\"un\",\"uz\",\"vai\",\"var\",\"varat\",\"varēja\",\"varēji\",\"varēju\",\"varējām\",\"varējāt\",\"varēs\",\"varēsi\",\"varēsiet\",\"varēsim\",\"varēt\",\"varēšu\",\"vien\",\"virs\",\"virspus\",\"vis\",\"viņpus\",\"zem\",\"ārpus\",\"šaipus\"],ms:[\"abdul\",\"abdullah\",\"acara\",\"ada\",\"adalah\",\"ahmad\",\"air\",\"akan\",\"akhbar\",\"akhir\",\"aktiviti\",\"alam\",\"amat\",\"amerika\",\"anak\",\"anggota\",\"antara\",\"antarabangsa\",\"apa\",\"apabila\",\"april\",\"as\",\"asas\",\"asean\",\"asia\",\"asing\",\"atas\",\"atau\",\"australia\",\"awal\",\"awam\",\"bagaimanapun\",\"bagi\",\"bahagian\",\"bahan\",\"baharu\",\"bahawa\",\"baik\",\"bandar\",\"bank\",\"banyak\",\"barangan\",\"baru\",\"baru-baru\",\"bawah\",\"beberapa\",\"bekas\",\"beliau\",\"belum\",\"berada\",\"berakhir\",\"berbanding\",\"berdasarkan\",\"berharap\",\"berikutan\",\"berjaya\",\"berjumlah\",\"berkaitan\",\"berkata\",\"berkenaan\",\"berlaku\",\"bermula\",\"bernama\",\"bernilai\",\"bersama\",\"berubah\",\"besar\",\"bhd\",\"bidang\",\"bilion\",\"bn\",\"boleh\",\"bukan\",\"bulan\",\"bursa\",\"cadangan\",\"china\",\"dagangan\",\"dalam\",\"dan\",\"dana\",\"dapat\",\"dari\",\"daripada\",\"dasar\",\"datang\",\"datuk\",\"demikian\",\"dengan\",\"depan\",\"derivatives\",\"dewan\",\"di\",\"diadakan\",\"dibuka\",\"dicatatkan\",\"dijangka\",\"diniagakan\",\"dis\",\"disember\",\"ditutup\",\"dolar\",\"dr\",\"dua\",\"dunia\",\"ekonomi\",\"eksekutif\",\"eksport\",\"empat\",\"enam\",\"faedah\",\"feb\",\"global\",\"hadapan\",\"hanya\",\"harga\",\"hari\",\"hasil\",\"hingga\",\"hubungan\",\"ia\",\"iaitu\",\"ialah\",\"indeks\",\"india\",\"indonesia\",\"industri\",\"ini\",\"islam\",\"isnin\",\"isu\",\"itu\",\"jabatan\",\"jalan\",\"jan\",\"jawatan\",\"jawatankuasa\",\"jepun\",\"jika\",\"jualan\",\"juga\",\"julai\",\"jumaat\",\"jumlah\",\"jun\",\"juta\",\"kadar\",\"kalangan\",\"kali\",\"kami\",\"kata\",\"katanya\",\"kaunter\",\"kawasan\",\"ke\",\"keadaan\",\"kecil\",\"kedua\",\"kedua-dua\",\"kedudukan\",\"kekal\",\"kementerian\",\"kemudahan\",\"kenaikan\",\"kenyataan\",\"kepada\",\"kepentingan\",\"keputusan\",\"kerajaan\",\"kerana\",\"kereta\",\"kerja\",\"kerjasama\",\"kes\",\"keselamatan\",\"keseluruhan\",\"kesihatan\",\"ketika\",\"ketua\",\"keuntungan\",\"kewangan\",\"khamis\",\"kini\",\"kira-kira\",\"kita\",\"klci\",\"klibor\",\"komposit\",\"kontrak\",\"kos\",\"kuala\",\"kuasa\",\"kukuh\",\"kumpulan\",\"lagi\",\"lain\",\"langkah\",\"laporan\",\"lebih\",\"lepas\",\"lima\",\"lot\",\"luar\",\"lumpur\",\"mac\",\"mahkamah\",\"mahu\",\"majlis\",\"makanan\",\"maklumat\",\"malam\",\"malaysia\",\"mana\",\"manakala\",\"masa\",\"masalah\",\"masih\",\"masing-masing\",\"masyarakat\",\"mata\",\"media\",\"mei\",\"melalui\",\"melihat\",\"memandangkan\",\"memastikan\",\"membantu\",\"membawa\",\"memberi\",\"memberikan\",\"membolehkan\",\"membuat\",\"mempunyai\",\"menambah\",\"menarik\",\"menawarkan\",\"mencapai\",\"mencatatkan\",\"mendapat\",\"mendapatkan\",\"menerima\",\"menerusi\",\"mengadakan\",\"mengambil\",\"mengenai\",\"menggalakkan\",\"menggunakan\",\"mengikut\",\"mengumumkan\",\"mengurangkan\",\"meningkat\",\"meningkatkan\",\"menjadi\",\"menjelang\",\"menokok\",\"menteri\",\"menunjukkan\",\"menurut\",\"menyaksikan\",\"menyediakan\",\"mereka\",\"merosot\",\"merupakan\",\"mesyuarat\",\"minat\",\"minggu\",\"minyak\",\"modal\",\"mohd\",\"mudah\",\"mungkin\",\"naik\",\"najib\",\"nasional\",\"negara\",\"negara-negara\",\"negeri\",\"niaga\",\"nilai\",\"nov\",\"ogos\",\"okt\",\"oleh\",\"operasi\",\"orang\",\"pada\",\"pagi\",\"paling\",\"pameran\",\"papan\",\"para\",\"paras\",\"parlimen\",\"parti\",\"pasaran\",\"pasukan\",\"pegawai\",\"pejabat\",\"pekerja\",\"pelabur\",\"pelaburan\",\"pelancongan\",\"pelanggan\",\"pelbagai\",\"peluang\",\"pembangunan\",\"pemberita\",\"pembinaan\",\"pemimpin\",\"pendapatan\",\"pendidikan\",\"penduduk\",\"penerbangan\",\"pengarah\",\"pengeluaran\",\"pengerusi\",\"pengguna\",\"pengurusan\",\"peniaga\",\"peningkatan\",\"penting\",\"peratus\",\"perdagangan\",\"perdana\",\"peringkat\",\"perjanjian\",\"perkara\",\"perkhidmatan\",\"perladangan\",\"perlu\",\"permintaan\",\"perniagaan\",\"persekutuan\",\"persidangan\",\"pertama\",\"pertubuhan\",\"pertumbuhan\",\"perusahaan\",\"peserta\",\"petang\",\"pihak\",\"pilihan\",\"pinjaman\",\"polis\",\"politik\",\"presiden\",\"prestasi\",\"produk\",\"program\",\"projek\",\"proses\",\"proton\",\"pukul\",\"pula\",\"pusat\",\"rabu\",\"rakan\",\"rakyat\",\"ramai\",\"rantau\",\"raya\",\"rendah\",\"ringgit\",\"rumah\",\"sabah\",\"sahaja\",\"saham\",\"sama\",\"sarawak\",\"satu\",\"sawit\",\"saya\",\"sdn\",\"sebagai\",\"sebahagian\",\"sebanyak\",\"sebarang\",\"sebelum\",\"sebelumnya\",\"sebuah\",\"secara\",\"sedang\",\"segi\",\"sehingga\",\"sejak\",\"sekarang\",\"sektor\",\"sekuriti\",\"selain\",\"selama\",\"selasa\",\"selatan\",\"selepas\",\"seluruh\",\"semakin\",\"semalam\",\"semasa\",\"sementara\",\"semua\",\"semula\",\"sen\",\"sendiri\",\"seorang\",\"sepanjang\",\"seperti\",\"sept\",\"september\",\"serantau\",\"seri\",\"serta\",\"sesi\",\"setiap\",\"setiausaha\",\"sidang\",\"singapura\",\"sini\",\"sistem\",\"sokongan\",\"sri\",\"sudah\",\"sukan\",\"suku\",\"sumber\",\"supaya\",\"susut\",\"syarikat\",\"syed\",\"tahap\",\"tahun\",\"tan\",\"tanah\",\"tanpa\",\"tawaran\",\"teknologi\",\"telah\",\"tempat\",\"tempatan\",\"tempoh\",\"tenaga\",\"tengah\",\"tentang\",\"terbaik\",\"terbang\",\"terbesar\",\"terbuka\",\"terdapat\",\"terhadap\",\"termasuk\",\"tersebut\",\"terus\",\"tetapi\",\"thailand\",\"tiada\",\"tidak\",\"tiga\",\"timbalan\",\"timur\",\"tindakan\",\"tinggi\",\"tun\",\"tunai\",\"turun\",\"turut\",\"umno\",\"unit\",\"untuk\",\"untung\",\"urus\",\"usaha\",\"utama\",\"walaupun\",\"wang\",\"wanita\",\"wilayah\",\"yang\"],mr:[\"अधिक\",\"अनेक\",\"अशी\",\"असलयाचे\",\"असलेल्या\",\"असा\",\"असून\",\"असे\",\"आज\",\"आणि\",\"आता\",\"आपल्या\",\"आला\",\"आली\",\"आले\",\"आहे\",\"आहेत\",\"एक\",\"एका\",\"कमी\",\"करणयात\",\"करून\",\"का\",\"काम\",\"काय\",\"काही\",\"किवा\",\"की\",\"केला\",\"केली\",\"केले\",\"कोटी\",\"गेल्या\",\"घेऊन\",\"जात\",\"झाला\",\"झाली\",\"झाले\",\"झालेल्या\",\"टा\",\"डॉ\",\"तर\",\"तरी\",\"तसेच\",\"ता\",\"ती\",\"तीन\",\"ते\",\"तो\",\"त्या\",\"त्याचा\",\"त्याची\",\"त्याच्या\",\"त्याना\",\"त्यानी\",\"त्यामुळे\",\"त्री\",\"दिली\",\"दोन\",\"न\",\"नाही\",\"निर्ण्य\",\"पण\",\"पम\",\"परयतन\",\"पाटील\",\"म\",\"मात्र\",\"माहिती\",\"मी\",\"मुबी\",\"म्हणजे\",\"म्हणाले\",\"म्हणून\",\"या\",\"याचा\",\"याची\",\"याच्या\",\"याना\",\"यानी\",\"येणार\",\"येत\",\"येथील\",\"येथे\",\"लाख\",\"व\",\"व्यकत\",\"सर्व\",\"सागित्ले\",\"सुरू\",\"हजार\",\"हा\",\"ही\",\"हे\",\"होणार\",\"होत\",\"होता\",\"होती\",\"होते\"],no:[\"alle\",\"andre\",\"arbeid\",\"at\",\"av\",\"bare\",\"begge\",\"ble\",\"blei\",\"bli\",\"blir\",\"blitt\",\"bort\",\"bra\",\"bruke\",\"både\",\"båe\",\"da\",\"de\",\"deg\",\"dei\",\"deim\",\"deira\",\"deires\",\"dem\",\"den\",\"denne\",\"der\",\"dere\",\"deres\",\"det\",\"dette\",\"di\",\"din\",\"disse\",\"ditt\",\"du\",\"dykk\",\"dykkar\",\"då\",\"eg\",\"ein\",\"eit\",\"eitt\",\"eller\",\"elles\",\"en\",\"ene\",\"eneste\",\"enhver\",\"enn\",\"er\",\"et\",\"ett\",\"etter\",\"folk\",\"for\",\"fordi\",\"forsûke\",\"fra\",\"få\",\"før\",\"fûr\",\"fûrst\",\"gjorde\",\"gjûre\",\"god\",\"gå\",\"ha\",\"hadde\",\"han\",\"hans\",\"har\",\"hennar\",\"henne\",\"hennes\",\"her\",\"hjå\",\"ho\",\"hoe\",\"honom\",\"hoss\",\"hossen\",\"hun\",\"hva\",\"hvem\",\"hver\",\"hvilke\",\"hvilken\",\"hvis\",\"hvor\",\"hvordan\",\"hvorfor\",\"i\",\"ikke\",\"ikkje\",\"ingen\",\"ingi\",\"inkje\",\"inn\",\"innen\",\"inni\",\"ja\",\"jeg\",\"kan\",\"kom\",\"korleis\",\"korso\",\"kun\",\"kunne\",\"kva\",\"kvar\",\"kvarhelst\",\"kven\",\"kvi\",\"kvifor\",\"lage\",\"lang\",\"lik\",\"like\",\"makt\",\"man\",\"mange\",\"me\",\"med\",\"medan\",\"meg\",\"meget\",\"mellom\",\"men\",\"mens\",\"mer\",\"mest\",\"mi\",\"min\",\"mine\",\"mitt\",\"mot\",\"mye\",\"mykje\",\"må\",\"måte\",\"navn\",\"ned\",\"nei\",\"no\",\"noe\",\"noen\",\"noka\",\"noko\",\"nokon\",\"nokor\",\"nokre\",\"ny\",\"nå\",\"når\",\"og\",\"også\",\"om\",\"opp\",\"oss\",\"over\",\"part\",\"punkt\",\"på\",\"rett\",\"riktig\",\"samme\",\"sant\",\"seg\",\"selv\",\"si\",\"sia\",\"sidan\",\"siden\",\"sin\",\"sine\",\"sist\",\"sitt\",\"sjøl\",\"skal\",\"skulle\",\"slik\",\"slutt\",\"so\",\"som\",\"somme\",\"somt\",\"start\",\"stille\",\"så\",\"sånn\",\"tid\",\"til\",\"tilbake\",\"tilstand\",\"um\",\"under\",\"upp\",\"ut\",\"uten\",\"var\",\"vart\",\"varte\",\"ved\",\"verdi\",\"vere\",\"verte\",\"vi\",\"vil\",\"ville\",\"vite\",\"vore\",\"vors\",\"vort\",\"vår\",\"være\",\"vært\",\"vöre\",\"vört\",\"å\"],fa:[\"!\",\",\",\".\",\":\",\";\",\"،\",\"؛\",\"؟\",\"آباد\",\"آره\",\"آری\",\"آمد\",\"آمده\",\"آن\",\"آنان\",\"آنجا\",\"آنطور\",\"آنقدر\",\"آنكه\",\"آنها\",\"آنچه\",\"آنکه\",\"آورد\",\"آورده\",\"آيد\",\"آی\",\"آیا\",\"آیند\",\"اتفاقا\",\"اثرِ\",\"احتراما\",\"احتمالا\",\"اخیر\",\"اری\",\"از\",\"ازجمله\",\"اساسا\",\"است\",\"استفاد\",\"استفاده\",\"اش\",\"اشکارا\",\"اصلا\",\"اصولا\",\"اعلام\",\"اغلب\",\"اكنون\",\"الان\",\"البته\",\"البتّه\",\"ام\",\"اما\",\"امروز\",\"امروزه\",\"امسال\",\"امشب\",\"امور\",\"ان\",\"انجام\",\"اند\",\"انشاالله\",\"انصافا\",\"انطور\",\"انقدر\",\"انها\",\"انچنان\",\"انکه\",\"انگار\",\"او\",\"اول\",\"اولا\",\"اي\",\"ايشان\",\"ايم\",\"اين\",\"اينكه\",\"اکثرا\",\"اکنون\",\"اگر\",\"ای\",\"ایا\",\"اید\",\"ایشان\",\"ایم\",\"این\",\"اینجا\",\"ایند\",\"اینطور\",\"اینقدر\",\"اینها\",\"اینچنین\",\"اینک\",\"اینکه\",\"اینگونه\",\"با\",\"بار\",\"بارة\",\"باره\",\"بارها\",\"باز\",\"بازهم\",\"باش\",\"باشد\",\"باشم\",\"باشند\",\"باشيم\",\"باشی\",\"باشید\",\"باشیم\",\"بالا\",\"بالاخره\",\"بالایِ\",\"بالطبع\",\"بايد\",\"باید\",\"بتوان\",\"بتواند\",\"بتوانی\",\"بتوانیم\",\"بخش\",\"بخشی\",\"بخواه\",\"بخواهد\",\"بخواهم\",\"بخواهند\",\"بخواهی\",\"بخواهید\",\"بخواهیم\",\"بد\",\"بدون\",\"بر\",\"برابر\",\"برابرِ\",\"براحتی\",\"براساس\",\"براستی\",\"براي\",\"برای\",\"برایِ\",\"برخوردار\",\"برخي\",\"برخی\",\"برداري\",\"برعکس\",\"بروز\",\"بزرگ\",\"بزودی\",\"بسا\",\"بسيار\",\"بسياري\",\"بسیار\",\"بسیاری\",\"بطور\",\"بعد\",\"بعدا\",\"بعدها\",\"بعری\",\"بعضا\",\"بعضي\",\"بلافاصله\",\"بلكه\",\"بله\",\"بلکه\",\"بلی\",\"بنابراين\",\"بنابراین\",\"بندي\",\"به\",\"بهتر\",\"بهترين\",\"بود\",\"بودم\",\"بودن\",\"بودند\",\"بوده\",\"بودی\",\"بودید\",\"بودیم\",\"بویژه\",\"بي\",\"بيست\",\"بيش\",\"بيشتر\",\"بيشتري\",\"بين\",\"بکن\",\"بکند\",\"بکنم\",\"بکنند\",\"بکنی\",\"بکنید\",\"بکنیم\",\"بگو\",\"بگوید\",\"بگویم\",\"بگویند\",\"بگویی\",\"بگویید\",\"بگوییم\",\"بگیر\",\"بگیرد\",\"بگیرم\",\"بگیرند\",\"بگیری\",\"بگیرید\",\"بگیریم\",\"بی\",\"بیا\",\"بیاب\",\"بیابد\",\"بیابم\",\"بیابند\",\"بیابی\",\"بیابید\",\"بیابیم\",\"بیاور\",\"بیاورد\",\"بیاورم\",\"بیاورند\",\"بیاوری\",\"بیاورید\",\"بیاوریم\",\"بیاید\",\"بیایم\",\"بیایند\",\"بیایی\",\"بیایید\",\"بیاییم\",\"بیرون\",\"بیرونِ\",\"بیش\",\"بیشتر\",\"بیشتری\",\"بین\",\"ت\",\"تا\",\"تازه\",\"تاكنون\",\"تان\",\"تاکنون\",\"تحت\",\"تر\",\"تر  براساس\",\"ترين\",\"تقریبا\",\"تلویحا\",\"تمام\",\"تماما\",\"تمامي\",\"تنها\",\"تو\",\"تواند\",\"توانست\",\"توانستم\",\"توانستن\",\"توانستند\",\"توانسته\",\"توانستی\",\"توانستیم\",\"توانم\",\"توانند\",\"توانی\",\"توانید\",\"توانیم\",\"توسط\",\"تولِ\",\"تویِ\",\"ثانیا\",\"جا\",\"جاي\",\"جايي\",\"جای\",\"جدا\",\"جديد\",\"جدید\",\"جريان\",\"جریان\",\"جز\",\"جلوگيري\",\"جلویِ\",\"جمعا\",\"جناح\",\"جهت\",\"حاضر\",\"حال\",\"حالا\",\"حتما\",\"حتي\",\"حتی\",\"حداکثر\",\"حدودا\",\"حدودِ\",\"حق\",\"خارجِ\",\"خب\",\"خدمات\",\"خصوصا\",\"خلاصه\",\"خواست\",\"خواستم\",\"خواستن\",\"خواستند\",\"خواسته\",\"خواستی\",\"خواستید\",\"خواستیم\",\"خواهد\",\"خواهم\",\"خواهند\",\"خواهيم\",\"خواهی\",\"خواهید\",\"خواهیم\",\"خوب\",\"خود\",\"خودت\",\"خودتان\",\"خودش\",\"خودشان\",\"خودم\",\"خودمان\",\"خوشبختانه\",\"خويش\",\"خویش\",\"خویشتن\",\"خیاه\",\"خیر\",\"خیلی\",\"داد\",\"دادم\",\"دادن\",\"دادند\",\"داده\",\"دادی\",\"دادید\",\"دادیم\",\"دار\",\"دارد\",\"دارم\",\"دارند\",\"داريم\",\"داری\",\"دارید\",\"داریم\",\"داشت\",\"داشتم\",\"داشتن\",\"داشتند\",\"داشته\",\"داشتی\",\"داشتید\",\"داشتیم\",\"دانست\",\"دانند\",\"دایم\",\"دایما\",\"در\",\"درباره\",\"درمجموع\",\"درون\",\"دریغ\",\"دقیقا\",\"دنبالِ\",\"ده\",\"دهد\",\"دهم\",\"دهند\",\"دهی\",\"دهید\",\"دهیم\",\"دو\",\"دوباره\",\"دوم\",\"ديده\",\"ديروز\",\"ديگر\",\"ديگران\",\"ديگري\",\"دیر\",\"دیروز\",\"دیگر\",\"دیگران\",\"دیگری\",\"را\",\"راحت\",\"راسا\",\"راستی\",\"راه\",\"رسما\",\"رسید\",\"رفت\",\"رفته\",\"رو\",\"روب\",\"روز\",\"روزانه\",\"روزهاي\",\"روي\",\"روی\",\"رویِ\",\"ريزي\",\"زمان\",\"زمانی\",\"زمینه\",\"زود\",\"زياد\",\"زير\",\"زيرا\",\"زیر\",\"زیرِ\",\"سابق\",\"ساخته\",\"سازي\",\"سالانه\",\"سالیانه\",\"سایر\",\"سراسر\",\"سرانجام\",\"سریعا\",\"سریِ\",\"سعي\",\"سمتِ\",\"سوم\",\"سوي\",\"سوی\",\"سویِ\",\"سپس\",\"شان\",\"شايد\",\"شاید\",\"شخصا\",\"شد\",\"شدم\",\"شدن\",\"شدند\",\"شده\",\"شدی\",\"شدید\",\"شدیدا\",\"شدیم\",\"شش\",\"شش  نداشته\",\"شما\",\"شناسي\",\"شود\",\"شوم\",\"شوند\",\"شونده\",\"شوی\",\"شوید\",\"شویم\",\"صرفا\",\"صورت\",\"ضدِّ\",\"ضدِّ\",\"ضمن\",\"طبعا\",\"طبقِ\",\"طبیعتا\",\"طرف\",\"طريق\",\"طریق\",\"طور\",\"طي\",\"طی\",\"ظاهرا\",\"عدم\",\"عقبِ\",\"علّتِ\",\"علیه\",\"عمدا\",\"عمدتا\",\"عمل\",\"عملا\",\"عنوان\",\"عنوانِ\",\"غالبا\",\"غير\",\"غیر\",\"فردا\",\"فعلا\",\"فقط\",\"فكر\",\"فوق\",\"قابل\",\"قبل\",\"قبلا\",\"قدری\",\"قصدِ\",\"قطعا\",\"كرد\",\"كردم\",\"كردن\",\"كردند\",\"كرده\",\"كسي\",\"كل\",\"كمتر\",\"كند\",\"كنم\",\"كنند\",\"كنيد\",\"كنيم\",\"كه\",\"لااقل\",\"لطفا\",\"لطفاً\",\"ما\",\"مان\",\"مانند\",\"مانندِ\",\"مبادا\",\"متاسفانه\",\"متعاقبا\",\"مثل\",\"مثلا\",\"مثلِ\",\"مجانی\",\"مجددا\",\"مجموعا\",\"مختلف\",\"مدام\",\"مدت\",\"مدّتی\",\"مردم\",\"مرسی\",\"مستقیما\",\"مسلما\",\"مطمینا\",\"معمولا\",\"مقابل\",\"ممکن\",\"من\",\"موارد\",\"مورد\",\"موقتا\",\"مي\",\"ميليارد\",\"ميليون\",\"مگر\",\"می\",\"می شود\",\"میان\",\"می‌رسد\",\"می‌رود\",\"می‌شود\",\"می‌کنیم\",\"ناشي\",\"نام\",\"ناگاه\",\"ناگهان\",\"ناگهانی\",\"نبايد\",\"نباید\",\"نبود\",\"نخست\",\"نخستين\",\"نخواهد\",\"نخواهم\",\"نخواهند\",\"نخواهی\",\"نخواهید\",\"نخواهیم\",\"ندارد\",\"ندارم\",\"ندارند\",\"نداری\",\"ندارید\",\"نداریم\",\"نداشت\",\"نداشتم\",\"نداشتند\",\"نداشته\",\"نداشتی\",\"نداشتید\",\"نداشتیم\",\"نزديك\",\"نزدِ\",\"نزدیکِ\",\"نسبتا\",\"نشان\",\"نشده\",\"نظير\",\"نظیر\",\"نكرده\",\"نمايد\",\"نمي\",\"نمی\",\"نمی‌شود\",\"نه\",\"نهایتا\",\"نوع\",\"نوعي\",\"نوعی\",\"نيز\",\"نيست\",\"نگاه\",\"نیز\",\"نیست\",\"ها\",\"هاي\",\"هايي\",\"های\",\"هایی\",\"هبچ\",\"هر\",\"هرچه\",\"هرگز\",\"هزار\",\"هست\",\"هستم\",\"هستند\",\"هستيم\",\"هستی\",\"هستید\",\"هستیم\",\"هفت\",\"هم\",\"همان\",\"همه\",\"همواره\",\"همين\",\"همچنان\",\"همچنين\",\"همچنین\",\"همچون\",\"همیشه\",\"همین\",\"هنوز\",\"هنگام\",\"هنگامِ\",\"هنگامی\",\"هيچ\",\"هیچ\",\"هیچگاه\",\"و\",\"واقعا\",\"واقعی\",\"وجود\",\"وسطِ\",\"وضع\",\"وقتي\",\"وقتی\",\"وقتیکه\",\"ولی\",\"وي\",\"وگو\",\"وی\",\"ویژه\",\"يا\",\"يابد\",\"يك\",\"يكديگر\",\"يكي\",\"ّه\",\"٪\",\"پارسال\",\"پاعینِ\",\"پس\",\"پنج\",\"پيش\",\"پیدا\",\"پیش\",\"پیشاپیش\",\"پیشتر\",\"پیشِ\",\"چرا\",\"چطور\",\"چقدر\",\"چنان\",\"چنانچه\",\"چنانکه\",\"چند\",\"چندین\",\"چنين\",\"چنین\",\"چه\",\"چهار\",\"چو\",\"چون\",\"چيزي\",\"چگونه\",\"چیز\",\"چیزی\",\"چیست\",\"کاش\",\"کامل\",\"کاملا\",\"کتبا\",\"کجا\",\"کجاست\",\"کدام\",\"کرد\",\"کردم\",\"کردن\",\"کردند\",\"کرده\",\"کردی\",\"کردید\",\"کردیم\",\"کس\",\"کسانی\",\"کسی\",\"کل\",\"کلا\",\"کم\",\"کماکان\",\"کمتر\",\"کمتری\",\"کمی\",\"کن\",\"کنار\",\"کنارِ\",\"کند\",\"کنم\",\"کنند\",\"کننده\",\"کنون\",\"کنونی\",\"کنی\",\"کنید\",\"کنیم\",\"که\",\"کو\",\"کَی\",\"کی\",\"گاه\",\"گاهی\",\"گذاري\",\"گذاشته\",\"گذشته\",\"گردد\",\"گرفت\",\"گرفتم\",\"گرفتن\",\"گرفتند\",\"گرفته\",\"گرفتی\",\"گرفتید\",\"گرفتیم\",\"گروهي\",\"گفت\",\"گفتم\",\"گفتن\",\"گفتند\",\"گفته\",\"گفتی\",\"گفتید\",\"گفتیم\",\"گه\",\"گهگاه\",\"گو\",\"گويد\",\"گويند\",\"گویا\",\"گوید\",\"گویم\",\"گویند\",\"گویی\",\"گویید\",\"گوییم\",\"گيرد\",\"گيري\",\"گیرد\",\"گیرم\",\"گیرند\",\"گیری\",\"گیرید\",\"گیریم\",\"ی\",\"یا\",\"یابد\",\"یابم\",\"یابند\",\"یابی\",\"یابید\",\"یابیم\",\"یافت\",\"یافتم\",\"یافتن\",\"یافته\",\"یافتی\",\"یافتید\",\"یافتیم\",\"یعنی\",\"یقینا\",\"یه\",\"یک\",\"یکی\",\"۰\",\"۱\",\"۲\",\"۳\",\"۴\",\"۵\",\"۶\",\"۷\",\"۸\",\"۹\"],pl:[\"a\",\"aby\",\"ach\",\"acz\",\"aczkolwiek\",\"aj\",\"albo\",\"ale\",\"ależ\",\"ani\",\"aż\",\"bardziej\",\"bardzo\",\"bez\",\"bo\",\"bowiem\",\"by\",\"byli\",\"bym\",\"bynajmniej\",\"być\",\"był\",\"była\",\"było\",\"były\",\"będzie\",\"będą\",\"cali\",\"cała\",\"cały\",\"chce\",\"choć\",\"ci\",\"ciebie\",\"cię\",\"co\",\"cokolwiek\",\"coraz\",\"coś\",\"czasami\",\"czasem\",\"czemu\",\"czy\",\"czyli\",\"często\",\"daleko\",\"dla\",\"dlaczego\",\"dlatego\",\"do\",\"dobrze\",\"dokąd\",\"dość\",\"dr\",\"dużo\",\"dwa\",\"dwaj\",\"dwie\",\"dwoje\",\"dzisiaj\",\"dziś\",\"gdy\",\"gdyby\",\"gdyż\",\"gdzie\",\"gdziekolwiek\",\"gdzieś\",\"go\",\"godz\",\"hab\",\"i\",\"ich\",\"ii\",\"iii\",\"ile\",\"im\",\"inna\",\"inne\",\"inny\",\"innych\",\"inż\",\"iv\",\"ix\",\"iż\",\"ja\",\"jak\",\"jakaś\",\"jakby\",\"jaki\",\"jakichś\",\"jakie\",\"jakiś\",\"jakiż\",\"jakkolwiek\",\"jako\",\"jakoś\",\"je\",\"jeden\",\"jedna\",\"jednak\",\"jednakże\",\"jedno\",\"jednym\",\"jedynie\",\"jego\",\"jej\",\"jemu\",\"jest\",\"jestem\",\"jeszcze\",\"jeśli\",\"jeżeli\",\"już\",\"ją\",\"każdy\",\"kiedy\",\"kierunku\",\"kilka\",\"kilku\",\"kimś\",\"kto\",\"ktokolwiek\",\"ktoś\",\"która\",\"które\",\"którego\",\"której\",\"który\",\"których\",\"którym\",\"którzy\",\"ku\",\"lat\",\"lecz\",\"lub\",\"ma\",\"mają\",\"mam\",\"mamy\",\"mało\",\"mgr\",\"mi\",\"miał\",\"mimo\",\"między\",\"mnie\",\"mną\",\"mogą\",\"moi\",\"moim\",\"moja\",\"moje\",\"może\",\"możliwe\",\"można\",\"mu\",\"musi\",\"my\",\"mój\",\"na\",\"nad\",\"nam\",\"nami\",\"nas\",\"nasi\",\"nasz\",\"nasza\",\"nasze\",\"naszego\",\"naszych\",\"natomiast\",\"natychmiast\",\"nawet\",\"nic\",\"nich\",\"nie\",\"niech\",\"niego\",\"niej\",\"niemu\",\"nigdy\",\"nim\",\"nimi\",\"nią\",\"niż\",\"no\",\"nowe\",\"np\",\"nr\",\"o\",\"o.o.\",\"obok\",\"od\",\"ok\",\"około\",\"on\",\"ona\",\"one\",\"oni\",\"ono\",\"oraz\",\"oto\",\"owszem\",\"pan\",\"pana\",\"pani\",\"pl\",\"po\",\"pod\",\"podczas\",\"pomimo\",\"ponad\",\"ponieważ\",\"powinien\",\"powinna\",\"powinni\",\"powinno\",\"poza\",\"prawie\",\"prof\",\"przecież\",\"przed\",\"przede\",\"przedtem\",\"przez\",\"przy\",\"raz\",\"razie\",\"roku\",\"również\",\"sam\",\"sama\",\"się\",\"skąd\",\"sobie\",\"sobą\",\"sposób\",\"swoje\",\"są\",\"ta\",\"tak\",\"taka\",\"taki\",\"takich\",\"takie\",\"także\",\"tam\",\"te\",\"tego\",\"tej\",\"tel\",\"temu\",\"ten\",\"teraz\",\"też\",\"to\",\"tobie\",\"tobą\",\"toteż\",\"totobą\",\"trzeba\",\"tu\",\"tutaj\",\"twoi\",\"twoim\",\"twoja\",\"twoje\",\"twym\",\"twój\",\"ty\",\"tych\",\"tylko\",\"tym\",\"tys\",\"tzw\",\"tę\",\"u\",\"ul\",\"vi\",\"vii\",\"viii\",\"vol\",\"w\",\"wam\",\"wami\",\"was\",\"wasi\",\"wasz\",\"wasza\",\"wasze\",\"we\",\"według\",\"wie\",\"wiele\",\"wielu\",\"więc\",\"więcej\",\"wszyscy\",\"wszystkich\",\"wszystkie\",\"wszystkim\",\"wszystko\",\"wtedy\",\"www\",\"wy\",\"właśnie\",\"wśród\",\"xi\",\"xii\",\"xiii\",\"xiv\",\"xv\",\"z\",\"za\",\"zapewne\",\"zawsze\",\"zaś\",\"ze\",\"zeznowu\",\"znowu\",\"znów\",\"został\",\"zł\",\"żaden\",\"żadna\",\"żadne\",\"żadnych\",\"że\",\"żeby\"],pt:[\"a\",\"acerca\",\"adeus\",\"agora\",\"ainda\",\"alem\",\"algmas\",\"algo\",\"algumas\",\"alguns\",\"ali\",\"além\",\"ambas\",\"ambos\",\"ano\",\"anos\",\"antes\",\"ao\",\"aonde\",\"aos\",\"apenas\",\"apoio\",\"apontar\",\"apos\",\"após\",\"aquela\",\"aquelas\",\"aquele\",\"aqueles\",\"aqui\",\"aquilo\",\"as\",\"assim\",\"através\",\"atrás\",\"até\",\"aí\",\"baixo\",\"bastante\",\"bem\",\"boa\",\"boas\",\"bom\",\"bons\",\"breve\",\"cada\",\"caminho\",\"catorze\",\"cedo\",\"cento\",\"certamente\",\"certeza\",\"cima\",\"cinco\",\"coisa\",\"com\",\"como\",\"comprido\",\"conhecido\",\"conselho\",\"contra\",\"contudo\",\"corrente\",\"cuja\",\"cujas\",\"cujo\",\"cujos\",\"custa\",\"cá\",\"da\",\"daquela\",\"daquelas\",\"daquele\",\"daqueles\",\"dar\",\"das\",\"de\",\"debaixo\",\"dela\",\"delas\",\"dele\",\"deles\",\"demais\",\"dentro\",\"depois\",\"desde\",\"desligado\",\"dessa\",\"dessas\",\"desse\",\"desses\",\"desta\",\"destas\",\"deste\",\"destes\",\"deve\",\"devem\",\"deverá\",\"dez\",\"dezanove\",\"dezasseis\",\"dezassete\",\"dezoito\",\"dia\",\"diante\",\"direita\",\"dispoe\",\"dispoem\",\"diversa\",\"diversas\",\"diversos\",\"diz\",\"dizem\",\"dizer\",\"do\",\"dois\",\"dos\",\"doze\",\"duas\",\"durante\",\"dá\",\"dão\",\"dúvida\",\"e\",\"ela\",\"elas\",\"ele\",\"eles\",\"em\",\"embora\",\"enquanto\",\"entao\",\"entre\",\"então\",\"era\",\"eram\",\"essa\",\"essas\",\"esse\",\"esses\",\"esta\",\"estado\",\"estamos\",\"estar\",\"estará\",\"estas\",\"estava\",\"estavam\",\"este\",\"esteja\",\"estejam\",\"estejamos\",\"estes\",\"esteve\",\"estive\",\"estivemos\",\"estiver\",\"estivera\",\"estiveram\",\"estiverem\",\"estivermos\",\"estivesse\",\"estivessem\",\"estiveste\",\"estivestes\",\"estivéramos\",\"estivéssemos\",\"estou\",\"está\",\"estás\",\"estávamos\",\"estão\",\"eu\",\"exemplo\",\"falta\",\"fará\",\"favor\",\"faz\",\"fazeis\",\"fazem\",\"fazemos\",\"fazer\",\"fazes\",\"fazia\",\"faço\",\"fez\",\"fim\",\"final\",\"foi\",\"fomos\",\"for\",\"fora\",\"foram\",\"forem\",\"forma\",\"formos\",\"fosse\",\"fossem\",\"foste\",\"fostes\",\"fui\",\"fôramos\",\"fôssemos\",\"geral\",\"grande\",\"grandes\",\"grupo\",\"ha\",\"haja\",\"hajam\",\"hajamos\",\"havemos\",\"havia\",\"hei\",\"hoje\",\"hora\",\"horas\",\"houve\",\"houvemos\",\"houver\",\"houvera\",\"houveram\",\"houverei\",\"houverem\",\"houveremos\",\"houveria\",\"houveriam\",\"houvermos\",\"houverá\",\"houverão\",\"houveríamos\",\"houvesse\",\"houvessem\",\"houvéramos\",\"houvéssemos\",\"há\",\"hão\",\"iniciar\",\"inicio\",\"ir\",\"irá\",\"isso\",\"ista\",\"iste\",\"isto\",\"já\",\"lado\",\"lhe\",\"lhes\",\"ligado\",\"local\",\"logo\",\"longe\",\"lugar\",\"lá\",\"maior\",\"maioria\",\"maiorias\",\"mais\",\"mal\",\"mas\",\"me\",\"mediante\",\"meio\",\"menor\",\"menos\",\"meses\",\"mesma\",\"mesmas\",\"mesmo\",\"mesmos\",\"meu\",\"meus\",\"mil\",\"minha\",\"minhas\",\"momento\",\"muito\",\"muitos\",\"máximo\",\"mês\",\"na\",\"nada\",\"nao\",\"naquela\",\"naquelas\",\"naquele\",\"naqueles\",\"nas\",\"nem\",\"nenhuma\",\"nessa\",\"nessas\",\"nesse\",\"nesses\",\"nesta\",\"nestas\",\"neste\",\"nestes\",\"no\",\"noite\",\"nome\",\"nos\",\"nossa\",\"nossas\",\"nosso\",\"nossos\",\"nova\",\"novas\",\"nove\",\"novo\",\"novos\",\"num\",\"numa\",\"numas\",\"nunca\",\"nuns\",\"não\",\"nível\",\"nós\",\"número\",\"o\",\"obra\",\"obrigada\",\"obrigado\",\"oitava\",\"oitavo\",\"oito\",\"onde\",\"ontem\",\"onze\",\"os\",\"ou\",\"outra\",\"outras\",\"outro\",\"outros\",\"para\",\"parece\",\"parte\",\"partir\",\"paucas\",\"pegar\",\"pela\",\"pelas\",\"pelo\",\"pelos\",\"perante\",\"perto\",\"pessoas\",\"pode\",\"podem\",\"poder\",\"poderá\",\"podia\",\"pois\",\"ponto\",\"pontos\",\"por\",\"porque\",\"porquê\",\"portanto\",\"posição\",\"possivelmente\",\"posso\",\"possível\",\"pouca\",\"pouco\",\"poucos\",\"povo\",\"primeira\",\"primeiras\",\"primeiro\",\"primeiros\",\"promeiro\",\"propios\",\"proprio\",\"própria\",\"próprias\",\"próprio\",\"próprios\",\"próxima\",\"próximas\",\"próximo\",\"próximos\",\"puderam\",\"pôde\",\"põe\",\"põem\",\"quais\",\"qual\",\"qualquer\",\"quando\",\"quanto\",\"quarta\",\"quarto\",\"quatro\",\"que\",\"quem\",\"quer\",\"quereis\",\"querem\",\"queremas\",\"queres\",\"quero\",\"questão\",\"quieto\",\"quinta\",\"quinto\",\"quinze\",\"quáis\",\"quê\",\"relação\",\"sabe\",\"sabem\",\"saber\",\"se\",\"segunda\",\"segundo\",\"sei\",\"seis\",\"seja\",\"sejam\",\"sejamos\",\"sem\",\"sempre\",\"sendo\",\"ser\",\"serei\",\"seremos\",\"seria\",\"seriam\",\"será\",\"serão\",\"seríamos\",\"sete\",\"seu\",\"seus\",\"sexta\",\"sexto\",\"sim\",\"sistema\",\"sob\",\"sobre\",\"sois\",\"somente\",\"somos\",\"sou\",\"sua\",\"suas\",\"são\",\"sétima\",\"sétimo\",\"só\",\"tal\",\"talvez\",\"tambem\",\"também\",\"tanta\",\"tantas\",\"tanto\",\"tarde\",\"te\",\"tem\",\"temos\",\"tempo\",\"tendes\",\"tenha\",\"tenham\",\"tenhamos\",\"tenho\",\"tens\",\"tentar\",\"tentaram\",\"tente\",\"tentei\",\"ter\",\"terceira\",\"terceiro\",\"terei\",\"teremos\",\"teria\",\"teriam\",\"terá\",\"terão\",\"teríamos\",\"teu\",\"teus\",\"teve\",\"tinha\",\"tinham\",\"tipo\",\"tive\",\"tivemos\",\"tiver\",\"tivera\",\"tiveram\",\"tiverem\",\"tivermos\",\"tivesse\",\"tivessem\",\"tiveste\",\"tivestes\",\"tivéramos\",\"tivéssemos\",\"toda\",\"todas\",\"todo\",\"todos\",\"trabalhar\",\"trabalho\",\"treze\",\"três\",\"tu\",\"tua\",\"tuas\",\"tudo\",\"tão\",\"tém\",\"têm\",\"tínhamos\",\"um\",\"uma\",\"umas\",\"uns\",\"usa\",\"usar\",\"vai\",\"vais\",\"valor\",\"veja\",\"vem\",\"vens\",\"ver\",\"verdade\",\"verdadeiro\",\"vez\",\"vezes\",\"viagem\",\"vindo\",\"vinte\",\"você\",\"vocês\",\"vos\",\"vossa\",\"vossas\",\"vosso\",\"vossos\",\"vários\",\"vão\",\"vêm\",\"vós\",\"zero\",\"à\",\"às\",\"área\",\"é\",\"éramos\",\"és\",\"último\"],ro:[\"a\",\"abia\",\"acea\",\"aceasta\",\"această\",\"aceea\",\"aceeasi\",\"acei\",\"aceia\",\"acel\",\"acela\",\"acelasi\",\"acele\",\"acelea\",\"acest\",\"acesta\",\"aceste\",\"acestea\",\"acestei\",\"acestia\",\"acestui\",\"aceşti\",\"aceştia\",\"acolo\",\"acord\",\"acum\",\"adica\",\"ai\",\"aia\",\"aibă\",\"aici\",\"aiurea\",\"al\",\"ala\",\"alaturi\",\"ale\",\"alea\",\"alt\",\"alta\",\"altceva\",\"altcineva\",\"alte\",\"altfel\",\"alti\",\"altii\",\"altul\",\"am\",\"anume\",\"apoi\",\"ar\",\"are\",\"as\",\"asa\",\"asemenea\",\"asta\",\"astazi\",\"astea\",\"astfel\",\"astăzi\",\"asupra\",\"atare\",\"atat\",\"atata\",\"atatea\",\"atatia\",\"ati\",\"atit\",\"atita\",\"atitea\",\"atitia\",\"atunci\",\"au\",\"avea\",\"avem\",\"aveţi\",\"avut\",\"azi\",\"aş\",\"aşadar\",\"aţi\",\"b\",\"ba\",\"bine\",\"bucur\",\"bună\",\"c\",\"ca\",\"cam\",\"cand\",\"capat\",\"care\",\"careia\",\"carora\",\"caruia\",\"cat\",\"catre\",\"caut\",\"ce\",\"cea\",\"ceea\",\"cei\",\"ceilalti\",\"cel\",\"cele\",\"celor\",\"ceva\",\"chiar\",\"ci\",\"cinci\",\"cind\",\"cine\",\"cineva\",\"cit\",\"cita\",\"cite\",\"citeva\",\"citi\",\"citiva\",\"conform\",\"contra\",\"cu\",\"cui\",\"cum\",\"cumva\",\"curând\",\"curînd\",\"când\",\"cât\",\"câte\",\"câtva\",\"câţi\",\"cînd\",\"cît\",\"cîte\",\"cîtva\",\"cîţi\",\"că\",\"căci\",\"cărei\",\"căror\",\"cărui\",\"către\",\"d\",\"da\",\"daca\",\"dacă\",\"dar\",\"dat\",\"datorită\",\"dată\",\"dau\",\"de\",\"deasupra\",\"deci\",\"decit\",\"degraba\",\"deja\",\"deoarece\",\"departe\",\"desi\",\"despre\",\"deşi\",\"din\",\"dinaintea\",\"dintr\",\"dintr-\",\"dintre\",\"doar\",\"doi\",\"doilea\",\"două\",\"drept\",\"dupa\",\"după\",\"dă\",\"e\",\"ea\",\"ei\",\"el\",\"ele\",\"era\",\"eram\",\"este\",\"eu\",\"exact\",\"eşti\",\"f\",\"face\",\"fara\",\"fata\",\"fel\",\"fi\",\"fie\",\"fiecare\",\"fii\",\"fim\",\"fiu\",\"fiţi\",\"foarte\",\"fost\",\"frumos\",\"fără\",\"g\",\"geaba\",\"graţie\",\"h\",\"halbă\",\"i\",\"ia\",\"iar\",\"ieri\",\"ii\",\"il\",\"imi\",\"in\",\"inainte\",\"inapoi\",\"inca\",\"incit\",\"insa\",\"intr\",\"intre\",\"isi\",\"iti\",\"j\",\"k\",\"l\",\"la\",\"le\",\"li\",\"lor\",\"lui\",\"lângă\",\"lîngă\",\"m\",\"ma\",\"mai\",\"mare\",\"mea\",\"mei\",\"mele\",\"mereu\",\"meu\",\"mi\",\"mie\",\"mine\",\"mod\",\"mult\",\"multa\",\"multe\",\"multi\",\"multă\",\"mulţi\",\"mulţumesc\",\"mâine\",\"mîine\",\"mă\",\"n\",\"ne\",\"nevoie\",\"ni\",\"nici\",\"niciodata\",\"nicăieri\",\"nimeni\",\"nimeri\",\"nimic\",\"niste\",\"nişte\",\"noastre\",\"noastră\",\"noi\",\"noroc\",\"nostri\",\"nostru\",\"nou\",\"noua\",\"nouă\",\"noştri\",\"nu\",\"numai\",\"o\",\"opt\",\"or\",\"ori\",\"oricare\",\"orice\",\"oricine\",\"oricum\",\"oricând\",\"oricât\",\"oricînd\",\"oricît\",\"oriunde\",\"p\",\"pai\",\"parca\",\"patra\",\"patru\",\"patrulea\",\"pe\",\"pentru\",\"peste\",\"pic\",\"pina\",\"plus\",\"poate\",\"pot\",\"prea\",\"prima\",\"primul\",\"prin\",\"printr-\",\"putini\",\"puţin\",\"puţina\",\"puţină\",\"până\",\"pînă\",\"r\",\"rog\",\"s\",\"sa\",\"sa-mi\",\"sa-ti\",\"sai\",\"sale\",\"sau\",\"se\",\"si\",\"sint\",\"sintem\",\"spate\",\"spre\",\"sub\",\"sunt\",\"suntem\",\"sunteţi\",\"sus\",\"sută\",\"sînt\",\"sîntem\",\"sînteţi\",\"să\",\"săi\",\"său\",\"t\",\"ta\",\"tale\",\"te\",\"ti\",\"timp\",\"tine\",\"toata\",\"toate\",\"toată\",\"tocmai\",\"tot\",\"toti\",\"totul\",\"totusi\",\"totuşi\",\"toţi\",\"trei\",\"treia\",\"treilea\",\"tu\",\"tuturor\",\"tăi\",\"tău\",\"u\",\"ul\",\"ului\",\"un\",\"una\",\"unde\",\"undeva\",\"unei\",\"uneia\",\"unele\",\"uneori\",\"unii\",\"unor\",\"unora\",\"unu\",\"unui\",\"unuia\",\"unul\",\"v\",\"va\",\"vi\",\"voastre\",\"voastră\",\"voi\",\"vom\",\"vor\",\"vostru\",\"vouă\",\"voştri\",\"vreme\",\"vreo\",\"vreun\",\"vă\",\"x\",\"z\",\"zece\",\"zero\",\"zi\",\"zice\",\"îi\",\"îl\",\"îmi\",\"împotriva\",\"în\",\"înainte\",\"înaintea\",\"încotro\",\"încât\",\"încît\",\"între\",\"întrucât\",\"întrucît\",\"îţi\",\"ăla\",\"ălea\",\"ăsta\",\"ăstea\",\"ăştia\",\"şapte\",\"şase\",\"şi\",\"ştiu\",\"ţi\",\"ţie\"],ru:[\"c\",\"а\",\"алло\",\"без\",\"белый\",\"близко\",\"более\",\"больше\",\"большой\",\"будем\",\"будет\",\"будете\",\"будешь\",\"будто\",\"буду\",\"будут\",\"будь\",\"бы\",\"бывает\",\"бывь\",\"был\",\"была\",\"были\",\"было\",\"быть\",\"в\",\"важная\",\"важное\",\"важные\",\"важный\",\"вам\",\"вами\",\"вас\",\"ваш\",\"ваша\",\"ваше\",\"ваши\",\"вверх\",\"вдали\",\"вдруг\",\"ведь\",\"везде\",\"вернуться\",\"весь\",\"вечер\",\"взгляд\",\"взять\",\"вид\",\"видел\",\"видеть\",\"вместе\",\"вне\",\"вниз\",\"внизу\",\"во\",\"вода\",\"война\",\"вокруг\",\"вон\",\"вообще\",\"вопрос\",\"восемнадцатый\",\"восемнадцать\",\"восемь\",\"восьмой\",\"вот\",\"впрочем\",\"времени\",\"время\",\"все\",\"все еще\",\"всегда\",\"всего\",\"всем\",\"всеми\",\"всему\",\"всех\",\"всею\",\"всю\",\"всюду\",\"вся\",\"всё\",\"второй\",\"вы\",\"выйти\",\"г\",\"где\",\"главный\",\"глаз\",\"говорил\",\"говорит\",\"говорить\",\"год\",\"года\",\"году\",\"голова\",\"голос\",\"город\",\"да\",\"давать\",\"давно\",\"даже\",\"далекий\",\"далеко\",\"дальше\",\"даром\",\"дать\",\"два\",\"двадцатый\",\"двадцать\",\"две\",\"двенадцатый\",\"двенадцать\",\"дверь\",\"двух\",\"девятнадцатый\",\"девятнадцать\",\"девятый\",\"девять\",\"действительно\",\"дел\",\"делал\",\"делать\",\"делаю\",\"дело\",\"день\",\"деньги\",\"десятый\",\"десять\",\"для\",\"до\",\"довольно\",\"долго\",\"должен\",\"должно\",\"должный\",\"дом\",\"дорога\",\"друг\",\"другая\",\"другие\",\"других\",\"друго\",\"другое\",\"другой\",\"думать\",\"душа\",\"е\",\"его\",\"ее\",\"ей\",\"ему\",\"если\",\"есть\",\"еще\",\"ещё\",\"ею\",\"её\",\"ж\",\"ждать\",\"же\",\"жена\",\"женщина\",\"жизнь\",\"жить\",\"за\",\"занят\",\"занята\",\"занято\",\"заняты\",\"затем\",\"зато\",\"зачем\",\"здесь\",\"земля\",\"знать\",\"значит\",\"значить\",\"и\",\"иди\",\"идти\",\"из\",\"или\",\"им\",\"имеет\",\"имел\",\"именно\",\"иметь\",\"ими\",\"имя\",\"иногда\",\"их\",\"к\",\"каждая\",\"каждое\",\"каждые\",\"каждый\",\"кажется\",\"казаться\",\"как\",\"какая\",\"какой\",\"кем\",\"книга\",\"когда\",\"кого\",\"ком\",\"комната\",\"кому\",\"конец\",\"конечно\",\"которая\",\"которого\",\"которой\",\"которые\",\"который\",\"которых\",\"кроме\",\"кругом\",\"кто\",\"куда\",\"лежать\",\"лет\",\"ли\",\"лицо\",\"лишь\",\"лучше\",\"любить\",\"люди\",\"м\",\"маленький\",\"мало\",\"мать\",\"машина\",\"между\",\"меля\",\"менее\",\"меньше\",\"меня\",\"место\",\"миллионов\",\"мимо\",\"минута\",\"мир\",\"мира\",\"мне\",\"много\",\"многочисленная\",\"многочисленное\",\"многочисленные\",\"многочисленный\",\"мной\",\"мною\",\"мог\",\"могу\",\"могут\",\"мож\",\"может\",\"может быть\",\"можно\",\"можхо\",\"мои\",\"мой\",\"мор\",\"москва\",\"мочь\",\"моя\",\"моё\",\"мы\",\"на\",\"наверху\",\"над\",\"надо\",\"назад\",\"наиболее\",\"найти\",\"наконец\",\"нам\",\"нами\",\"народ\",\"нас\",\"начала\",\"начать\",\"наш\",\"наша\",\"наше\",\"наши\",\"не\",\"него\",\"недавно\",\"недалеко\",\"нее\",\"ней\",\"некоторый\",\"нельзя\",\"нем\",\"немного\",\"нему\",\"непрерывно\",\"нередко\",\"несколько\",\"нет\",\"нею\",\"неё\",\"ни\",\"нибудь\",\"ниже\",\"низко\",\"никакой\",\"никогда\",\"никто\",\"никуда\",\"ним\",\"ними\",\"них\",\"ничего\",\"ничто\",\"но\",\"новый\",\"нога\",\"ночь\",\"ну\",\"нужно\",\"нужный\",\"нх\",\"о\",\"об\",\"оба\",\"обычно\",\"один\",\"одиннадцатый\",\"одиннадцать\",\"однажды\",\"однако\",\"одного\",\"одной\",\"оказаться\",\"окно\",\"около\",\"он\",\"она\",\"они\",\"оно\",\"опять\",\"особенно\",\"остаться\",\"от\",\"ответить\",\"отец\",\"откуда\",\"отовсюду\",\"отсюда\",\"очень\",\"первый\",\"перед\",\"писать\",\"плечо\",\"по\",\"под\",\"подойди\",\"подумать\",\"пожалуйста\",\"позже\",\"пойти\",\"пока\",\"пол\",\"получить\",\"помнить\",\"понимать\",\"понять\",\"пор\",\"пора\",\"после\",\"последний\",\"посмотреть\",\"посреди\",\"потом\",\"потому\",\"почему\",\"почти\",\"правда\",\"прекрасно\",\"при\",\"про\",\"просто\",\"против\",\"процентов\",\"путь\",\"пятнадцатый\",\"пятнадцать\",\"пятый\",\"пять\",\"работа\",\"работать\",\"раз\",\"разве\",\"рано\",\"раньше\",\"ребенок\",\"решить\",\"россия\",\"рука\",\"русский\",\"ряд\",\"рядом\",\"с\",\"с кем\",\"сам\",\"сама\",\"сами\",\"самим\",\"самими\",\"самих\",\"само\",\"самого\",\"самой\",\"самом\",\"самому\",\"саму\",\"самый\",\"свет\",\"свое\",\"своего\",\"своей\",\"свои\",\"своих\",\"свой\",\"свою\",\"сделать\",\"сеаой\",\"себе\",\"себя\",\"сегодня\",\"седьмой\",\"сейчас\",\"семнадцатый\",\"семнадцать\",\"семь\",\"сидеть\",\"сила\",\"сих\",\"сказал\",\"сказала\",\"сказать\",\"сколько\",\"слишком\",\"слово\",\"случай\",\"смотреть\",\"сначала\",\"снова\",\"со\",\"собой\",\"собою\",\"советский\",\"совсем\",\"спасибо\",\"спросить\",\"сразу\",\"стал\",\"старый\",\"стать\",\"стол\",\"сторона\",\"стоять\",\"страна\",\"суть\",\"считать\",\"т\",\"та\",\"так\",\"такая\",\"также\",\"таки\",\"такие\",\"такое\",\"такой\",\"там\",\"твои\",\"твой\",\"твоя\",\"твоё\",\"те\",\"тебе\",\"тебя\",\"тем\",\"теми\",\"теперь\",\"тех\",\"то\",\"тобой\",\"тобою\",\"товарищ\",\"тогда\",\"того\",\"тоже\",\"только\",\"том\",\"тому\",\"тот\",\"тою\",\"третий\",\"три\",\"тринадцатый\",\"тринадцать\",\"ту\",\"туда\",\"тут\",\"ты\",\"тысяч\",\"у\",\"увидеть\",\"уж\",\"уже\",\"улица\",\"уметь\",\"утро\",\"хороший\",\"хорошо\",\"хотел бы\",\"хотеть\",\"хоть\",\"хотя\",\"хочешь\",\"час\",\"часто\",\"часть\",\"чаще\",\"чего\",\"человек\",\"чем\",\"чему\",\"через\",\"четвертый\",\"четыре\",\"четырнадцатый\",\"четырнадцать\",\"что\",\"чтоб\",\"чтобы\",\"чуть\",\"шестнадцатый\",\"шестнадцать\",\"шестой\",\"шесть\",\"эта\",\"эти\",\"этим\",\"этими\",\"этих\",\"это\",\"этого\",\"этой\",\"этом\",\"этому\",\"этот\",\"эту\",\"я\",\"являюсь\"],sk:[\"a\",\"aby\",\"aj\",\"ak\",\"akej\",\"akejže\",\"ako\",\"akom\",\"akomže\",\"akou\",\"akouže\",\"akože\",\"aká\",\"akáže\",\"aké\",\"akého\",\"akéhože\",\"akému\",\"akémuže\",\"akéže\",\"akú\",\"akúže\",\"aký\",\"akých\",\"akýchže\",\"akým\",\"akými\",\"akýmiže\",\"akýmže\",\"akýže\",\"ale\",\"alebo\",\"ani\",\"asi\",\"avšak\",\"až\",\"ba\",\"bez\",\"bezo\",\"bol\",\"bola\",\"boli\",\"bolo\",\"bude\",\"budem\",\"budeme\",\"budete\",\"budeš\",\"budú\",\"buď\",\"by\",\"byť\",\"cez\",\"cezo\",\"dnes\",\"do\",\"ešte\",\"ho\",\"hoci\",\"i\",\"iba\",\"ich\",\"im\",\"inej\",\"inom\",\"iná\",\"iné\",\"iného\",\"inému\",\"iní\",\"inú\",\"iný\",\"iných\",\"iným\",\"inými\",\"ja\",\"je\",\"jeho\",\"jej\",\"jemu\",\"ju\",\"k\",\"kam\",\"kamže\",\"každou\",\"každá\",\"každé\",\"každého\",\"každému\",\"každí\",\"každú\",\"každý\",\"každých\",\"každým\",\"každými\",\"kde\",\"kej\",\"kejže\",\"keď\",\"keďže\",\"kie\",\"kieho\",\"kiehože\",\"kiemu\",\"kiemuže\",\"kieže\",\"koho\",\"kom\",\"komu\",\"kou\",\"kouže\",\"kto\",\"ktorej\",\"ktorou\",\"ktorá\",\"ktoré\",\"ktorí\",\"ktorú\",\"ktorý\",\"ktorých\",\"ktorým\",\"ktorými\",\"ku\",\"ká\",\"káže\",\"ké\",\"kéže\",\"kú\",\"kúže\",\"ký\",\"kýho\",\"kýhože\",\"kým\",\"kýmu\",\"kýmuže\",\"kýže\",\"lebo\",\"leda\",\"ledaže\",\"len\",\"ma\",\"majú\",\"mal\",\"mala\",\"mali\",\"mať\",\"medzi\",\"mi\",\"mne\",\"mnou\",\"moja\",\"moje\",\"mojej\",\"mojich\",\"mojim\",\"mojimi\",\"mojou\",\"moju\",\"možno\",\"mu\",\"musia\",\"musieť\",\"musí\",\"musím\",\"musíme\",\"musíte\",\"musíš\",\"my\",\"má\",\"mám\",\"máme\",\"máte\",\"máš\",\"môcť\",\"môj\",\"môjho\",\"môže\",\"môžem\",\"môžeme\",\"môžete\",\"môžeš\",\"môžu\",\"mňa\",\"na\",\"nad\",\"nado\",\"najmä\",\"nami\",\"naša\",\"naše\",\"našej\",\"naši\",\"našich\",\"našim\",\"našimi\",\"našou\",\"ne\",\"nech\",\"neho\",\"nej\",\"nejakej\",\"nejakom\",\"nejakou\",\"nejaká\",\"nejaké\",\"nejakého\",\"nejakému\",\"nejakú\",\"nejaký\",\"nejakých\",\"nejakým\",\"nejakými\",\"nemu\",\"než\",\"nich\",\"nie\",\"niektorej\",\"niektorom\",\"niektorou\",\"niektorá\",\"niektoré\",\"niektorého\",\"niektorému\",\"niektorú\",\"niektorý\",\"niektorých\",\"niektorým\",\"niektorými\",\"nielen\",\"niečo\",\"nim\",\"nimi\",\"nič\",\"ničoho\",\"ničom\",\"ničomu\",\"ničím\",\"no\",\"nám\",\"nás\",\"náš\",\"nášho\",\"ním\",\"o\",\"od\",\"odo\",\"on\",\"ona\",\"oni\",\"ono\",\"ony\",\"oň\",\"oňho\",\"po\",\"pod\",\"podo\",\"podľa\",\"pokiaľ\",\"popod\",\"popri\",\"potom\",\"poza\",\"pre\",\"pred\",\"predo\",\"preto\",\"pretože\",\"prečo\",\"pri\",\"práve\",\"s\",\"sa\",\"seba\",\"sebe\",\"sebou\",\"sem\",\"si\",\"sme\",\"so\",\"som\",\"ste\",\"svoj\",\"svoja\",\"svoje\",\"svojho\",\"svojich\",\"svojim\",\"svojimi\",\"svojou\",\"svoju\",\"svojím\",\"sú\",\"ta\",\"tak\",\"takej\",\"takejto\",\"taká\",\"takáto\",\"také\",\"takého\",\"takéhoto\",\"takému\",\"takémuto\",\"takéto\",\"takí\",\"takú\",\"takúto\",\"taký\",\"takýto\",\"takže\",\"tam\",\"teba\",\"tebe\",\"tebou\",\"teda\",\"tej\",\"tejto\",\"ten\",\"tento\",\"ti\",\"tie\",\"tieto\",\"tiež\",\"to\",\"toho\",\"tohoto\",\"tohto\",\"tom\",\"tomto\",\"tomu\",\"tomuto\",\"toto\",\"tou\",\"touto\",\"tu\",\"tvoj\",\"tvoja\",\"tvoje\",\"tvojej\",\"tvojho\",\"tvoji\",\"tvojich\",\"tvojim\",\"tvojimi\",\"tvojím\",\"ty\",\"tá\",\"táto\",\"tí\",\"títo\",\"tú\",\"túto\",\"tých\",\"tým\",\"tými\",\"týmto\",\"u\",\"už\",\"v\",\"vami\",\"vaša\",\"vaše\",\"vašej\",\"vaši\",\"vašich\",\"vašim\",\"vaším\",\"veď\",\"viac\",\"vo\",\"vy\",\"vám\",\"vás\",\"váš\",\"vášho\",\"však\",\"všetci\",\"všetka\",\"všetko\",\"všetky\",\"všetok\",\"z\",\"za\",\"začo\",\"začože\",\"zo\",\"áno\",\"čej\",\"či\",\"čia\",\"čie\",\"čieho\",\"čiemu\",\"čiu\",\"čo\",\"čoho\",\"čom\",\"čomu\",\"čou\",\"čože\",\"čí\",\"čím\",\"čími\",\"ďalšia\",\"ďalšie\",\"ďalšieho\",\"ďalšiemu\",\"ďalšiu\",\"ďalšom\",\"ďalšou\",\"ďalší\",\"ďalších\",\"ďalším\",\"ďalšími\",\"ňom\",\"ňou\",\"ňu\",\"že\"],sl:[\"a\",\"ali\",\"april\",\"avgust\",\"b\",\"bi\",\"bil\",\"bila\",\"bile\",\"bili\",\"bilo\",\"biti\",\"blizu\",\"bo\",\"bodo\",\"bojo\",\"bolj\",\"bom\",\"bomo\",\"boste\",\"bova\",\"boš\",\"brez\",\"c\",\"cel\",\"cela\",\"celi\",\"celo\",\"d\",\"da\",\"daleč\",\"dan\",\"danes\",\"datum\",\"december\",\"deset\",\"deseta\",\"deseti\",\"deseto\",\"devet\",\"deveta\",\"deveti\",\"deveto\",\"do\",\"dober\",\"dobra\",\"dobri\",\"dobro\",\"dokler\",\"dol\",\"dolg\",\"dolga\",\"dolgi\",\"dovolj\",\"drug\",\"druga\",\"drugi\",\"drugo\",\"dva\",\"dve\",\"e\",\"eden\",\"en\",\"ena\",\"ene\",\"eni\",\"enkrat\",\"eno\",\"etc.\",\"f\",\"februar\",\"g\",\"g.\",\"ga\",\"ga.\",\"gor\",\"gospa\",\"gospod\",\"h\",\"halo\",\"i\",\"idr.\",\"ii\",\"iii\",\"in\",\"iv\",\"ix\",\"iz\",\"j\",\"januar\",\"jaz\",\"je\",\"ji\",\"jih\",\"jim\",\"jo\",\"julij\",\"junij\",\"jutri\",\"k\",\"kadarkoli\",\"kaj\",\"kajti\",\"kako\",\"kakor\",\"kamor\",\"kamorkoli\",\"kar\",\"karkoli\",\"katerikoli\",\"kdaj\",\"kdo\",\"kdorkoli\",\"ker\",\"ki\",\"kje\",\"kjer\",\"kjerkoli\",\"ko\",\"koder\",\"koderkoli\",\"koga\",\"komu\",\"kot\",\"kratek\",\"kratka\",\"kratke\",\"kratki\",\"l\",\"lahka\",\"lahke\",\"lahki\",\"lahko\",\"le\",\"lep\",\"lepa\",\"lepe\",\"lepi\",\"lepo\",\"leto\",\"m\",\"maj\",\"majhen\",\"majhna\",\"majhni\",\"malce\",\"malo\",\"manj\",\"marec\",\"me\",\"med\",\"medtem\",\"mene\",\"mesec\",\"mi\",\"midva\",\"midve\",\"mnogo\",\"moj\",\"moja\",\"moje\",\"mora\",\"morajo\",\"moram\",\"moramo\",\"morate\",\"moraš\",\"morem\",\"mu\",\"n\",\"na\",\"nad\",\"naj\",\"najina\",\"najino\",\"najmanj\",\"naju\",\"največ\",\"nam\",\"narobe\",\"nas\",\"nato\",\"nazaj\",\"naš\",\"naša\",\"naše\",\"ne\",\"nedavno\",\"nedelja\",\"nek\",\"neka\",\"nekaj\",\"nekatere\",\"nekateri\",\"nekatero\",\"nekdo\",\"neke\",\"nekega\",\"neki\",\"nekje\",\"neko\",\"nekoga\",\"nekoč\",\"ni\",\"nikamor\",\"nikdar\",\"nikjer\",\"nikoli\",\"nič\",\"nje\",\"njega\",\"njegov\",\"njegova\",\"njegovo\",\"njej\",\"njemu\",\"njen\",\"njena\",\"njeno\",\"nji\",\"njih\",\"njihov\",\"njihova\",\"njihovo\",\"njiju\",\"njim\",\"njo\",\"njun\",\"njuna\",\"njuno\",\"no\",\"nocoj\",\"november\",\"npr.\",\"o\",\"ob\",\"oba\",\"obe\",\"oboje\",\"od\",\"odprt\",\"odprta\",\"odprti\",\"okoli\",\"oktober\",\"on\",\"onadva\",\"one\",\"oni\",\"onidve\",\"osem\",\"osma\",\"osmi\",\"osmo\",\"oz.\",\"p\",\"pa\",\"pet\",\"peta\",\"petek\",\"peti\",\"peto\",\"po\",\"pod\",\"pogosto\",\"poleg\",\"poln\",\"polna\",\"polni\",\"polno\",\"ponavadi\",\"ponedeljek\",\"ponovno\",\"potem\",\"povsod\",\"pozdravljen\",\"pozdravljeni\",\"prav\",\"prava\",\"prave\",\"pravi\",\"pravo\",\"prazen\",\"prazna\",\"prazno\",\"prbl.\",\"precej\",\"pred\",\"prej\",\"preko\",\"pri\",\"pribl.\",\"približno\",\"primer\",\"pripravljen\",\"pripravljena\",\"pripravljeni\",\"proti\",\"prva\",\"prvi\",\"prvo\",\"r\",\"ravno\",\"redko\",\"res\",\"reč\",\"s\",\"saj\",\"sam\",\"sama\",\"same\",\"sami\",\"samo\",\"se\",\"sebe\",\"sebi\",\"sedaj\",\"sedem\",\"sedma\",\"sedmi\",\"sedmo\",\"sem\",\"september\",\"seveda\",\"si\",\"sicer\",\"skoraj\",\"skozi\",\"slab\",\"smo\",\"so\",\"sobota\",\"spet\",\"sreda\",\"srednja\",\"srednji\",\"sta\",\"ste\",\"stran\",\"stvar\",\"sva\",\"t\",\"ta\",\"tak\",\"taka\",\"take\",\"taki\",\"tako\",\"takoj\",\"tam\",\"te\",\"tebe\",\"tebi\",\"tega\",\"težak\",\"težka\",\"težki\",\"težko\",\"ti\",\"tista\",\"tiste\",\"tisti\",\"tisto\",\"tj.\",\"tja\",\"to\",\"toda\",\"torek\",\"tretja\",\"tretje\",\"tretji\",\"tri\",\"tu\",\"tudi\",\"tukaj\",\"tvoj\",\"tvoja\",\"tvoje\",\"u\",\"v\",\"vaju\",\"vam\",\"vas\",\"vaš\",\"vaša\",\"vaše\",\"ve\",\"vedno\",\"velik\",\"velika\",\"veliki\",\"veliko\",\"vendar\",\"ves\",\"več\",\"vi\",\"vidva\",\"vii\",\"viii\",\"visok\",\"visoka\",\"visoke\",\"visoki\",\"vsa\",\"vsaj\",\"vsak\",\"vsaka\",\"vsakdo\",\"vsake\",\"vsaki\",\"vsakomur\",\"vse\",\"vsega\",\"vsi\",\"vso\",\"včasih\",\"včeraj\",\"x\",\"z\",\"za\",\"zadaj\",\"zadnji\",\"zakaj\",\"zaprta\",\"zaprti\",\"zaprto\",\"zdaj\",\"zelo\",\"zunaj\",\"č\",\"če\",\"često\",\"četrta\",\"četrtek\",\"četrti\",\"četrto\",\"čez\",\"čigav\",\"š\",\"šest\",\"šesta\",\"šesti\",\"šesto\",\"štiri\",\"ž\",\"že\"],so:[\"aad\",\"albaabkii\",\"atabo\",\"ay\",\"ayaa\",\"ayee\",\"ayuu\",\"dhan\",\"hadana\",\"in\",\"inuu\",\"isku\",\"jiray\",\"jirtay\",\"ka\",\"kale\",\"kasoo\",\"ku\",\"kuu\",\"lakin\",\"markii\",\"oo\",\"si\",\"soo\",\"uga\",\"ugu\",\"uu\",\"waa\",\"waxa\",\"waxuu\"],st:[\"a\",\"ba\",\"bane\",\"bona\",\"e\",\"ea\",\"eaba\",\"empa\",\"ena\",\"ha\",\"hae\",\"hape\",\"ho\",\"hore\",\"ka\",\"ke\",\"la\",\"le\",\"li\",\"me\",\"mo\",\"moo\",\"ne\",\"o\",\"oa\",\"re\",\"sa\",\"se\",\"tloha\",\"tsa\",\"tse\"],es:[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"_\",\"a\",\"actualmente\",\"acuerdo\",\"adelante\",\"ademas\",\"además\",\"adrede\",\"afirmó\",\"agregó\",\"ahi\",\"ahora\",\"ahí\",\"al\",\"algo\",\"alguna\",\"algunas\",\"alguno\",\"algunos\",\"algún\",\"alli\",\"allí\",\"alrededor\",\"ambos\",\"ampleamos\",\"antano\",\"antaño\",\"ante\",\"anterior\",\"antes\",\"apenas\",\"aproximadamente\",\"aquel\",\"aquella\",\"aquellas\",\"aquello\",\"aquellos\",\"aqui\",\"aquél\",\"aquélla\",\"aquéllas\",\"aquéllos\",\"aquí\",\"arriba\",\"arribaabajo\",\"aseguró\",\"asi\",\"así\",\"atras\",\"aun\",\"aunque\",\"ayer\",\"añadió\",\"aún\",\"b\",\"bajo\",\"bastante\",\"bien\",\"breve\",\"buen\",\"buena\",\"buenas\",\"bueno\",\"buenos\",\"c\",\"cada\",\"casi\",\"cerca\",\"cierta\",\"ciertas\",\"cierto\",\"ciertos\",\"cinco\",\"claro\",\"comentó\",\"como\",\"con\",\"conmigo\",\"conocer\",\"conseguimos\",\"conseguir\",\"considera\",\"consideró\",\"consigo\",\"consigue\",\"consiguen\",\"consigues\",\"contigo\",\"contra\",\"cosas\",\"creo\",\"cual\",\"cuales\",\"cualquier\",\"cuando\",\"cuanta\",\"cuantas\",\"cuanto\",\"cuantos\",\"cuatro\",\"cuenta\",\"cuál\",\"cuáles\",\"cuándo\",\"cuánta\",\"cuántas\",\"cuánto\",\"cuántos\",\"cómo\",\"d\",\"da\",\"dado\",\"dan\",\"dar\",\"de\",\"debajo\",\"debe\",\"deben\",\"debido\",\"decir\",\"dejó\",\"del\",\"delante\",\"demasiado\",\"demás\",\"dentro\",\"deprisa\",\"desde\",\"despacio\",\"despues\",\"después\",\"detras\",\"detrás\",\"dia\",\"dias\",\"dice\",\"dicen\",\"dicho\",\"dieron\",\"diferente\",\"diferentes\",\"dijeron\",\"dijo\",\"dio\",\"donde\",\"dos\",\"durante\",\"día\",\"días\",\"dónde\",\"e\",\"ejemplo\",\"el\",\"ella\",\"ellas\",\"ello\",\"ellos\",\"embargo\",\"empleais\",\"emplean\",\"emplear\",\"empleas\",\"empleo\",\"en\",\"encima\",\"encuentra\",\"enfrente\",\"enseguida\",\"entonces\",\"entre\",\"era\",\"erais\",\"eramos\",\"eran\",\"eras\",\"eres\",\"es\",\"esa\",\"esas\",\"ese\",\"eso\",\"esos\",\"esta\",\"estaba\",\"estabais\",\"estaban\",\"estabas\",\"estad\",\"estada\",\"estadas\",\"estado\",\"estados\",\"estais\",\"estamos\",\"estan\",\"estando\",\"estar\",\"estaremos\",\"estará\",\"estarán\",\"estarás\",\"estaré\",\"estaréis\",\"estaría\",\"estaríais\",\"estaríamos\",\"estarían\",\"estarías\",\"estas\",\"este\",\"estemos\",\"esto\",\"estos\",\"estoy\",\"estuve\",\"estuviera\",\"estuvierais\",\"estuvieran\",\"estuvieras\",\"estuvieron\",\"estuviese\",\"estuvieseis\",\"estuviesen\",\"estuvieses\",\"estuvimos\",\"estuviste\",\"estuvisteis\",\"estuviéramos\",\"estuviésemos\",\"estuvo\",\"está\",\"estábamos\",\"estáis\",\"están\",\"estás\",\"esté\",\"estéis\",\"estén\",\"estés\",\"ex\",\"excepto\",\"existe\",\"existen\",\"explicó\",\"expresó\",\"f\",\"fin\",\"final\",\"fue\",\"fuera\",\"fuerais\",\"fueran\",\"fueras\",\"fueron\",\"fuese\",\"fueseis\",\"fuesen\",\"fueses\",\"fui\",\"fuimos\",\"fuiste\",\"fuisteis\",\"fuéramos\",\"fuésemos\",\"g\",\"general\",\"gran\",\"grandes\",\"gueno\",\"h\",\"ha\",\"haber\",\"habia\",\"habida\",\"habidas\",\"habido\",\"habidos\",\"habiendo\",\"habla\",\"hablan\",\"habremos\",\"habrá\",\"habrán\",\"habrás\",\"habré\",\"habréis\",\"habría\",\"habríais\",\"habríamos\",\"habrían\",\"habrías\",\"habéis\",\"había\",\"habíais\",\"habíamos\",\"habían\",\"habías\",\"hace\",\"haceis\",\"hacemos\",\"hacen\",\"hacer\",\"hacerlo\",\"haces\",\"hacia\",\"haciendo\",\"hago\",\"han\",\"has\",\"hasta\",\"hay\",\"haya\",\"hayamos\",\"hayan\",\"hayas\",\"hayáis\",\"he\",\"hecho\",\"hemos\",\"hicieron\",\"hizo\",\"horas\",\"hoy\",\"hube\",\"hubiera\",\"hubierais\",\"hubieran\",\"hubieras\",\"hubieron\",\"hubiese\",\"hubieseis\",\"hubiesen\",\"hubieses\",\"hubimos\",\"hubiste\",\"hubisteis\",\"hubiéramos\",\"hubiésemos\",\"hubo\",\"i\",\"igual\",\"incluso\",\"indicó\",\"informo\",\"informó\",\"intenta\",\"intentais\",\"intentamos\",\"intentan\",\"intentar\",\"intentas\",\"intento\",\"ir\",\"j\",\"junto\",\"k\",\"l\",\"la\",\"lado\",\"largo\",\"las\",\"le\",\"lejos\",\"les\",\"llegó\",\"lleva\",\"llevar\",\"lo\",\"los\",\"luego\",\"lugar\",\"m\",\"mal\",\"manera\",\"manifestó\",\"mas\",\"mayor\",\"me\",\"mediante\",\"medio\",\"mejor\",\"mencionó\",\"menos\",\"menudo\",\"mi\",\"mia\",\"mias\",\"mientras\",\"mio\",\"mios\",\"mis\",\"misma\",\"mismas\",\"mismo\",\"mismos\",\"modo\",\"momento\",\"mucha\",\"muchas\",\"mucho\",\"muchos\",\"muy\",\"más\",\"mí\",\"mía\",\"mías\",\"mío\",\"míos\",\"n\",\"nada\",\"nadie\",\"ni\",\"ninguna\",\"ningunas\",\"ninguno\",\"ningunos\",\"ningún\",\"no\",\"nos\",\"nosotras\",\"nosotros\",\"nuestra\",\"nuestras\",\"nuestro\",\"nuestros\",\"nueva\",\"nuevas\",\"nuevo\",\"nuevos\",\"nunca\",\"o\",\"ocho\",\"os\",\"otra\",\"otras\",\"otro\",\"otros\",\"p\",\"pais\",\"para\",\"parece\",\"parte\",\"partir\",\"pasada\",\"pasado\",\"paìs\",\"peor\",\"pero\",\"pesar\",\"poca\",\"pocas\",\"poco\",\"pocos\",\"podeis\",\"podemos\",\"poder\",\"podria\",\"podriais\",\"podriamos\",\"podrian\",\"podrias\",\"podrá\",\"podrán\",\"podría\",\"podrían\",\"poner\",\"por\",\"por qué\",\"porque\",\"posible\",\"primer\",\"primera\",\"primero\",\"primeros\",\"principalmente\",\"pronto\",\"propia\",\"propias\",\"propio\",\"propios\",\"proximo\",\"próximo\",\"próximos\",\"pudo\",\"pueda\",\"puede\",\"pueden\",\"puedo\",\"pues\",\"q\",\"qeu\",\"que\",\"quedó\",\"queremos\",\"quien\",\"quienes\",\"quiere\",\"quiza\",\"quizas\",\"quizá\",\"quizás\",\"quién\",\"quiénes\",\"qué\",\"r\",\"raras\",\"realizado\",\"realizar\",\"realizó\",\"repente\",\"respecto\",\"s\",\"sabe\",\"sabeis\",\"sabemos\",\"saben\",\"saber\",\"sabes\",\"sal\",\"salvo\",\"se\",\"sea\",\"seamos\",\"sean\",\"seas\",\"segun\",\"segunda\",\"segundo\",\"según\",\"seis\",\"ser\",\"sera\",\"seremos\",\"será\",\"serán\",\"serás\",\"seré\",\"seréis\",\"sería\",\"seríais\",\"seríamos\",\"serían\",\"serías\",\"seáis\",\"señaló\",\"si\",\"sido\",\"siempre\",\"siendo\",\"siete\",\"sigue\",\"siguiente\",\"sin\",\"sino\",\"sobre\",\"sois\",\"sola\",\"solamente\",\"solas\",\"solo\",\"solos\",\"somos\",\"son\",\"soy\",\"soyos\",\"su\",\"supuesto\",\"sus\",\"suya\",\"suyas\",\"suyo\",\"suyos\",\"sé\",\"sí\",\"sólo\",\"t\",\"tal\",\"tambien\",\"también\",\"tampoco\",\"tan\",\"tanto\",\"tarde\",\"te\",\"temprano\",\"tendremos\",\"tendrá\",\"tendrán\",\"tendrás\",\"tendré\",\"tendréis\",\"tendría\",\"tendríais\",\"tendríamos\",\"tendrían\",\"tendrías\",\"tened\",\"teneis\",\"tenemos\",\"tener\",\"tenga\",\"tengamos\",\"tengan\",\"tengas\",\"tengo\",\"tengáis\",\"tenida\",\"tenidas\",\"tenido\",\"tenidos\",\"teniendo\",\"tenéis\",\"tenía\",\"teníais\",\"teníamos\",\"tenían\",\"tenías\",\"tercera\",\"ti\",\"tiempo\",\"tiene\",\"tienen\",\"tienes\",\"toda\",\"todas\",\"todavia\",\"todavía\",\"todo\",\"todos\",\"total\",\"trabaja\",\"trabajais\",\"trabajamos\",\"trabajan\",\"trabajar\",\"trabajas\",\"trabajo\",\"tras\",\"trata\",\"través\",\"tres\",\"tu\",\"tus\",\"tuve\",\"tuviera\",\"tuvierais\",\"tuvieran\",\"tuvieras\",\"tuvieron\",\"tuviese\",\"tuvieseis\",\"tuviesen\",\"tuvieses\",\"tuvimos\",\"tuviste\",\"tuvisteis\",\"tuviéramos\",\"tuviésemos\",\"tuvo\",\"tuya\",\"tuyas\",\"tuyo\",\"tuyos\",\"tú\",\"u\",\"ultimo\",\"un\",\"una\",\"unas\",\"uno\",\"unos\",\"usa\",\"usais\",\"usamos\",\"usan\",\"usar\",\"usas\",\"uso\",\"usted\",\"ustedes\",\"v\",\"va\",\"vais\",\"valor\",\"vamos\",\"van\",\"varias\",\"varios\",\"vaya\",\"veces\",\"ver\",\"verdad\",\"verdadera\",\"verdadero\",\"vez\",\"vosotras\",\"vosotros\",\"voy\",\"vuestra\",\"vuestras\",\"vuestro\",\"vuestros\",\"w\",\"x\",\"y\",\"ya\",\"yo\",\"z\",\"él\",\"éramos\",\"ésa\",\"ésas\",\"ése\",\"ésos\",\"ésta\",\"éstas\",\"éste\",\"éstos\",\"última\",\"últimas\",\"último\",\"últimos\"],sw:[\"akasema\",\"alikuwa\",\"alisema\",\"baada\",\"basi\",\"bila\",\"cha\",\"chini\",\"hadi\",\"hapo\",\"hata\",\"hivyo\",\"hiyo\",\"huku\",\"huo\",\"ili\",\"ilikuwa\",\"juu\",\"kama\",\"karibu\",\"katika\",\"kila\",\"kima\",\"kisha\",\"kubwa\",\"kutoka\",\"kuwa\",\"kwa\",\"kwamba\",\"kwenda\",\"kwenye\",\"la\",\"lakini\",\"mara\",\"mdogo\",\"mimi\",\"mkubwa\",\"mmoja\",\"moja\",\"muda\",\"mwenye\",\"na\",\"naye\",\"ndani\",\"ng\",\"ni\",\"nini\",\"nonkungu\",\"pamoja\",\"pia\",\"sana\",\"sasa\",\"sauti\",\"tafadhali\",\"tena\",\"tu\",\"vile\",\"wa\",\"wakati\",\"wake\",\"walikuwa\",\"wao\",\"watu\",\"wengine\",\"wote\",\"ya\",\"yake\",\"yangu\",\"yao\",\"yeye\",\"yule\",\"za\",\"zaidi\",\"zake\"],sv:[\"aderton\",\"adertonde\",\"adjö\",\"aldrig\",\"alla\",\"allas\",\"allt\",\"alltid\",\"alltså\",\"andra\",\"andras\",\"annan\",\"annat\",\"artonde\",\"artonn\",\"att\",\"av\",\"bakom\",\"bara\",\"behöva\",\"behövas\",\"behövde\",\"behövt\",\"beslut\",\"beslutat\",\"beslutit\",\"bland\",\"blev\",\"bli\",\"blir\",\"blivit\",\"bort\",\"borta\",\"bra\",\"bäst\",\"bättre\",\"båda\",\"bådas\",\"dag\",\"dagar\",\"dagarna\",\"dagen\",\"de\",\"del\",\"delen\",\"dem\",\"den\",\"denna\",\"deras\",\"dess\",\"dessa\",\"det\",\"detta\",\"dig\",\"din\",\"dina\",\"dit\",\"ditt\",\"dock\",\"dom\",\"du\",\"där\",\"därför\",\"då\",\"e\",\"efter\",\"eftersom\",\"ej\",\"elfte\",\"eller\",\"elva\",\"emot\",\"en\",\"enkel\",\"enkelt\",\"enkla\",\"enligt\",\"ens\",\"er\",\"era\",\"ers\",\"ert\",\"ett\",\"ettusen\",\"fanns\",\"fem\",\"femte\",\"femtio\",\"femtionde\",\"femton\",\"femtonde\",\"fick\",\"fin\",\"finnas\",\"finns\",\"fjorton\",\"fjortonde\",\"fjärde\",\"fler\",\"flera\",\"flesta\",\"fram\",\"framför\",\"från\",\"fyra\",\"fyrtio\",\"fyrtionde\",\"få\",\"får\",\"fått\",\"följande\",\"för\",\"före\",\"förlåt\",\"förra\",\"första\",\"genast\",\"genom\",\"gick\",\"gjorde\",\"gjort\",\"god\",\"goda\",\"godare\",\"godast\",\"gott\",\"gälla\",\"gäller\",\"gällt\",\"gärna\",\"gå\",\"går\",\"gått\",\"gör\",\"göra\",\"ha\",\"hade\",\"haft\",\"han\",\"hans\",\"har\",\"heller\",\"hellre\",\"helst\",\"helt\",\"henne\",\"hennes\",\"hit\",\"hon\",\"honom\",\"hundra\",\"hundraen\",\"hundraett\",\"hur\",\"här\",\"hög\",\"höger\",\"högre\",\"högst\",\"i\",\"ibland\",\"icke\",\"idag\",\"igen\",\"igår\",\"imorgon\",\"in\",\"inför\",\"inga\",\"ingen\",\"ingenting\",\"inget\",\"innan\",\"inne\",\"inom\",\"inte\",\"inuti\",\"ja\",\"jag\",\"jo\",\"ju\",\"just\",\"jämfört\",\"kan\",\"kanske\",\"knappast\",\"kom\",\"komma\",\"kommer\",\"kommit\",\"kr\",\"kunde\",\"kunna\",\"kunnat\",\"kvar\",\"legat\",\"ligga\",\"ligger\",\"lika\",\"likställd\",\"likställda\",\"lilla\",\"lite\",\"liten\",\"litet\",\"länge\",\"längre\",\"längst\",\"lätt\",\"lättare\",\"lättast\",\"långsam\",\"långsammare\",\"långsammast\",\"långsamt\",\"långt\",\"låt\",\"man\",\"med\",\"mej\",\"mellan\",\"men\",\"mer\",\"mera\",\"mest\",\"mig\",\"min\",\"mina\",\"mindre\",\"minst\",\"mitt\",\"mittemot\",\"mot\",\"mycket\",\"många\",\"måste\",\"möjlig\",\"möjligen\",\"möjligt\",\"möjligtvis\",\"ned\",\"nederst\",\"nedersta\",\"nedre\",\"nej\",\"ner\",\"ni\",\"nio\",\"nionde\",\"nittio\",\"nittionde\",\"nitton\",\"nittonde\",\"nog\",\"noll\",\"nr\",\"nu\",\"nummer\",\"när\",\"nästa\",\"någon\",\"någonting\",\"något\",\"några\",\"nån\",\"nånting\",\"nåt\",\"nödvändig\",\"nödvändiga\",\"nödvändigt\",\"nödvändigtvis\",\"och\",\"också\",\"ofta\",\"oftast\",\"olika\",\"olikt\",\"om\",\"oss\",\"på\",\"rakt\",\"redan\",\"rätt\",\"sa\",\"sade\",\"sagt\",\"samma\",\"sedan\",\"senare\",\"senast\",\"sent\",\"sex\",\"sextio\",\"sextionde\",\"sexton\",\"sextonde\",\"sig\",\"sin\",\"sina\",\"sist\",\"sista\",\"siste\",\"sitt\",\"sitta\",\"sju\",\"sjunde\",\"sjuttio\",\"sjuttionde\",\"sjutton\",\"sjuttonde\",\"själv\",\"sjätte\",\"ska\",\"skall\",\"skulle\",\"slutligen\",\"små\",\"smått\",\"snart\",\"som\",\"stor\",\"stora\",\"stort\",\"större\",\"störst\",\"säga\",\"säger\",\"sämre\",\"sämst\",\"så\",\"sådan\",\"sådana\",\"sådant\",\"ta\",\"tack\",\"tar\",\"tidig\",\"tidigare\",\"tidigast\",\"tidigt\",\"till\",\"tills\",\"tillsammans\",\"tio\",\"tionde\",\"tjugo\",\"tjugoen\",\"tjugoett\",\"tjugonde\",\"tjugotre\",\"tjugotvå\",\"tjungo\",\"tolfte\",\"tolv\",\"tre\",\"tredje\",\"trettio\",\"trettionde\",\"tretton\",\"trettonde\",\"två\",\"tvåhundra\",\"under\",\"upp\",\"ur\",\"ursäkt\",\"ut\",\"utan\",\"utanför\",\"ute\",\"va\",\"vad\",\"var\",\"vara\",\"varför\",\"varifrån\",\"varit\",\"varje\",\"varken\",\"vars\",\"varsågod\",\"vart\",\"vem\",\"vems\",\"verkligen\",\"vi\",\"vid\",\"vidare\",\"viktig\",\"viktigare\",\"viktigast\",\"viktigt\",\"vilka\",\"vilkas\",\"vilken\",\"vilket\",\"vill\",\"väl\",\"vänster\",\"vänstra\",\"värre\",\"vår\",\"våra\",\"vårt\",\"än\",\"ännu\",\"är\",\"även\",\"åt\",\"åtminstone\",\"åtta\",\"åttio\",\"åttionde\",\"åttonde\",\"över\",\"övermorgon\",\"överst\",\"övre\"],th:[\"กล่าว\",\"กว่า\",\"กัน\",\"กับ\",\"การ\",\"ก็\",\"ก่อน\",\"ขณะ\",\"ขอ\",\"ของ\",\"ขึ้น\",\"คง\",\"ครั้ง\",\"ความ\",\"คือ\",\"จะ\",\"จัด\",\"จาก\",\"จึง\",\"ช่วง\",\"ซึ่ง\",\"ดัง\",\"ด้วย\",\"ด้าน\",\"ตั้ง\",\"ตั้งแต่\",\"ตาม\",\"ต่อ\",\"ต่าง\",\"ต่างๆ\",\"ต้อง\",\"ถึง\",\"ถูก\",\"ถ้า\",\"ทั้ง\",\"ทั้งนี้\",\"ทาง\",\"ที่\",\"ที่สุด\",\"ทุก\",\"ทํา\",\"ทําให้\",\"นอกจาก\",\"นัก\",\"นั้น\",\"นี้\",\"น่า\",\"นํา\",\"บาง\",\"ผล\",\"ผ่าน\",\"พบ\",\"พร้อม\",\"มา\",\"มาก\",\"มี\",\"ยัง\",\"รวม\",\"ระหว่าง\",\"รับ\",\"ราย\",\"ร่วม\",\"ลง\",\"วัน\",\"ว่า\",\"สุด\",\"ส่ง\",\"ส่วน\",\"สําหรับ\",\"หนึ่ง\",\"หรือ\",\"หลัง\",\"หลังจาก\",\"หลาย\",\"หาก\",\"อยาก\",\"อยู่\",\"อย่าง\",\"ออก\",\"อะไร\",\"อาจ\",\"อีก\",\"เขา\",\"เข้า\",\"เคย\",\"เฉพาะ\",\"เช่น\",\"เดียว\",\"เดียวกัน\",\"เนื่องจาก\",\"เปิด\",\"เปิดเผย\",\"เป็น\",\"เป็นการ\",\"เพราะ\",\"เพื่อ\",\"เมื่อ\",\"เรา\",\"เริ่ม\",\"เลย\",\"เห็น\",\"เอง\",\"แต่\",\"แบบ\",\"แรก\",\"และ\",\"แล้ว\",\"แห่ง\",\"โดย\",\"ใน\",\"ให้\",\"ได้\",\"ไป\",\"ไม่\",\"ไว้\",\"้ง\"],tl:[\"akin\",\"aking\",\"ako\",\"alin\",\"am\",\"amin\",\"aming\",\"ang\",\"ano\",\"anumang\",\"apat\",\"at\",\"atin\",\"ating\",\"ay\",\"bababa\",\"bago\",\"bakit\",\"bawat\",\"bilang\",\"dahil\",\"dalawa\",\"dapat\",\"din\",\"dito\",\"doon\",\"gagawin\",\"gayunman\",\"ginagawa\",\"ginawa\",\"ginawang\",\"gumawa\",\"gusto\",\"habang\",\"hanggang\",\"hindi\",\"huwag\",\"iba\",\"ibaba\",\"ibabaw\",\"ibig\",\"ikaw\",\"ilagay\",\"ilalim\",\"ilan\",\"inyong\",\"isa\",\"isang\",\"itaas\",\"ito\",\"iyo\",\"iyon\",\"iyong\",\"ka\",\"kahit\",\"kailangan\",\"kailanman\",\"kami\",\"kanila\",\"kanilang\",\"kanino\",\"kanya\",\"kanyang\",\"kapag\",\"kapwa\",\"karamihan\",\"katiyakan\",\"katulad\",\"kaya\",\"kaysa\",\"ko\",\"kong\",\"kulang\",\"kumuha\",\"kung\",\"laban\",\"lahat\",\"lamang\",\"likod\",\"lima\",\"maaari\",\"maaaring\",\"maging\",\"mahusay\",\"makita\",\"marami\",\"marapat\",\"masyado\",\"may\",\"mayroon\",\"mga\",\"minsan\",\"mismo\",\"mula\",\"muli\",\"na\",\"nabanggit\",\"naging\",\"nagkaroon\",\"nais\",\"nakita\",\"namin\",\"napaka\",\"narito\",\"nasaan\",\"ng\",\"ngayon\",\"ni\",\"nila\",\"nilang\",\"nito\",\"niya\",\"niyang\",\"noon\",\"o\",\"pa\",\"paano\",\"pababa\",\"paggawa\",\"pagitan\",\"pagkakaroon\",\"pagkatapos\",\"palabas\",\"pamamagitan\",\"panahon\",\"pangalawa\",\"para\",\"paraan\",\"pareho\",\"pataas\",\"pero\",\"pumunta\",\"pumupunta\",\"sa\",\"saan\",\"sabi\",\"sabihin\",\"sarili\",\"sila\",\"sino\",\"siya\",\"tatlo\",\"tayo\",\"tulad\",\"tungkol\",\"una\",\"walang\"],tr:[\"acaba\",\"acep\",\"adamakıllı\",\"adeta\",\"ait\",\"altmýþ\",\"altmış\",\"altý\",\"altı\",\"ama\",\"amma\",\"anca\",\"ancak\",\"arada\",\"artýk\",\"aslında\",\"aynen\",\"ayrıca\",\"az\",\"açıkça\",\"açıkçası\",\"bana\",\"bari\",\"bazen\",\"bazý\",\"bazı\",\"başkası\",\"baţka\",\"belki\",\"ben\",\"benden\",\"beni\",\"benim\",\"beri\",\"beriki\",\"beþ\",\"beş\",\"beţ\",\"bilcümle\",\"bile\",\"bin\",\"binaen\",\"binaenaleyh\",\"bir\",\"biraz\",\"birazdan\",\"birbiri\",\"birden\",\"birdenbire\",\"biri\",\"birice\",\"birileri\",\"birisi\",\"birkaç\",\"birkaçı\",\"birkez\",\"birlikte\",\"birçok\",\"birçoğu\",\"birþey\",\"birþeyi\",\"birşey\",\"birşeyi\",\"birţey\",\"bitevi\",\"biteviye\",\"bittabi\",\"biz\",\"bizatihi\",\"bizce\",\"bizcileyin\",\"bizden\",\"bize\",\"bizi\",\"bizim\",\"bizimki\",\"bizzat\",\"boşuna\",\"bu\",\"buna\",\"bunda\",\"bundan\",\"bunlar\",\"bunları\",\"bunların\",\"bunu\",\"bunun\",\"buracıkta\",\"burada\",\"buradan\",\"burası\",\"böyle\",\"böylece\",\"böylecene\",\"böylelikle\",\"böylemesine\",\"böylesine\",\"büsbütün\",\"bütün\",\"cuk\",\"cümlesi\",\"da\",\"daha\",\"dahi\",\"dahil\",\"dahilen\",\"daima\",\"dair\",\"dayanarak\",\"de\",\"defa\",\"dek\",\"demin\",\"demincek\",\"deminden\",\"denli\",\"derakap\",\"derhal\",\"derken\",\"deđil\",\"değil\",\"değin\",\"diye\",\"diđer\",\"diğer\",\"diğeri\",\"doksan\",\"dokuz\",\"dolayı\",\"dolayısıyla\",\"doğru\",\"dört\",\"edecek\",\"eden\",\"ederek\",\"edilecek\",\"ediliyor\",\"edilmesi\",\"ediyor\",\"elbet\",\"elbette\",\"elli\",\"emme\",\"en\",\"enikonu\",\"epey\",\"epeyce\",\"epeyi\",\"esasen\",\"esnasında\",\"etmesi\",\"etraflı\",\"etraflıca\",\"etti\",\"ettiği\",\"ettiğini\",\"evleviyetle\",\"evvel\",\"evvela\",\"evvelce\",\"evvelden\",\"evvelemirde\",\"evveli\",\"eđer\",\"eğer\",\"fakat\",\"filanca\",\"gah\",\"gayet\",\"gayetle\",\"gayri\",\"gayrı\",\"gelgelelim\",\"gene\",\"gerek\",\"gerçi\",\"geçende\",\"geçenlerde\",\"gibi\",\"gibilerden\",\"gibisinden\",\"gine\",\"göre\",\"gırla\",\"hakeza\",\"halbuki\",\"halen\",\"halihazırda\",\"haliyle\",\"handiyse\",\"hangi\",\"hangisi\",\"hani\",\"hariç\",\"hasebiyle\",\"hasılı\",\"hatta\",\"hele\",\"hem\",\"henüz\",\"hep\",\"hepsi\",\"her\",\"herhangi\",\"herkes\",\"herkesin\",\"hiç\",\"hiçbir\",\"hiçbiri\",\"hoş\",\"hulasaten\",\"iken\",\"iki\",\"ila\",\"ile\",\"ilen\",\"ilgili\",\"ilk\",\"illa\",\"illaki\",\"imdi\",\"indinde\",\"inen\",\"insermi\",\"ise\",\"ister\",\"itibaren\",\"itibariyle\",\"itibarıyla\",\"iyi\",\"iyice\",\"iyicene\",\"için\",\"iş\",\"işte\",\"iţte\",\"kadar\",\"kaffesi\",\"kah\",\"kala\",\"kanýmca\",\"karşın\",\"katrilyon\",\"kaynak\",\"kaçı\",\"kelli\",\"kendi\",\"kendilerine\",\"kendini\",\"kendisi\",\"kendisine\",\"kendisini\",\"kere\",\"kez\",\"keza\",\"kezalik\",\"keşke\",\"keţke\",\"ki\",\"kim\",\"kimden\",\"kime\",\"kimi\",\"kimisi\",\"kimse\",\"kimsecik\",\"kimsecikler\",\"külliyen\",\"kýrk\",\"kýsaca\",\"kırk\",\"kısaca\",\"lakin\",\"leh\",\"lütfen\",\"maada\",\"madem\",\"mademki\",\"mamafih\",\"mebni\",\"međer\",\"meğer\",\"meğerki\",\"meğerse\",\"milyar\",\"milyon\",\"mu\",\"mü\",\"mý\",\"mı\",\"nasýl\",\"nasıl\",\"nasılsa\",\"nazaran\",\"naşi\",\"ne\",\"neden\",\"nedeniyle\",\"nedenle\",\"nedense\",\"nerde\",\"nerden\",\"nerdeyse\",\"nere\",\"nerede\",\"nereden\",\"neredeyse\",\"neresi\",\"nereye\",\"netekim\",\"neye\",\"neyi\",\"neyse\",\"nice\",\"nihayet\",\"nihayetinde\",\"nitekim\",\"niye\",\"niçin\",\"o\",\"olan\",\"olarak\",\"oldu\",\"olduklarını\",\"oldukça\",\"olduğu\",\"olduğunu\",\"olmadı\",\"olmadığı\",\"olmak\",\"olması\",\"olmayan\",\"olmaz\",\"olsa\",\"olsun\",\"olup\",\"olur\",\"olursa\",\"oluyor\",\"on\",\"ona\",\"onca\",\"onculayın\",\"onda\",\"ondan\",\"onlar\",\"onlardan\",\"onlari\",\"onlarýn\",\"onları\",\"onların\",\"onu\",\"onun\",\"oracık\",\"oracıkta\",\"orada\",\"oradan\",\"oranca\",\"oranla\",\"oraya\",\"otuz\",\"oysa\",\"oysaki\",\"pek\",\"pekala\",\"peki\",\"pekçe\",\"peyderpey\",\"rağmen\",\"sadece\",\"sahi\",\"sahiden\",\"sana\",\"sanki\",\"sekiz\",\"seksen\",\"sen\",\"senden\",\"seni\",\"senin\",\"siz\",\"sizden\",\"sizi\",\"sizin\",\"sonra\",\"sonradan\",\"sonraları\",\"sonunda\",\"tabii\",\"tam\",\"tamam\",\"tamamen\",\"tamamıyla\",\"tarafından\",\"tek\",\"trilyon\",\"tüm\",\"var\",\"vardı\",\"vasıtasıyla\",\"ve\",\"velev\",\"velhasıl\",\"velhasılıkelam\",\"veya\",\"veyahut\",\"ya\",\"yahut\",\"yakinen\",\"yakında\",\"yakından\",\"yakınlarda\",\"yalnız\",\"yalnızca\",\"yani\",\"yapacak\",\"yapmak\",\"yaptı\",\"yaptıkları\",\"yaptığı\",\"yaptığını\",\"yapılan\",\"yapılması\",\"yapıyor\",\"yedi\",\"yeniden\",\"yenilerde\",\"yerine\",\"yetmiþ\",\"yetmiş\",\"yetmiţ\",\"yine\",\"yirmi\",\"yok\",\"yoksa\",\"yoluyla\",\"yüz\",\"yüzünden\",\"zarfında\",\"zaten\",\"zati\",\"zira\",\"çabuk\",\"çabukça\",\"çeşitli\",\"çok\",\"çokları\",\"çoklarınca\",\"çokluk\",\"çoklukla\",\"çokça\",\"çoğu\",\"çoğun\",\"çoğunca\",\"çoğunlukla\",\"çünkü\",\"öbür\",\"öbürkü\",\"öbürü\",\"önce\",\"önceden\",\"önceleri\",\"öncelikle\",\"öteki\",\"ötekisi\",\"öyle\",\"öylece\",\"öylelikle\",\"öylemesine\",\"öz\",\"üzere\",\"üç\",\"þey\",\"þeyden\",\"þeyi\",\"þeyler\",\"þu\",\"þuna\",\"þunda\",\"þundan\",\"þunu\",\"şayet\",\"şey\",\"şeyden\",\"şeyi\",\"şeyler\",\"şu\",\"şuna\",\"şuncacık\",\"şunda\",\"şundan\",\"şunlar\",\"şunları\",\"şunu\",\"şunun\",\"şura\",\"şuracık\",\"şuracıkta\",\"şurası\",\"şöyle\",\"ţayet\",\"ţimdi\",\"ţu\",\"ţöyle\"],uk:[\"авжеж\",\"адже\",\"але\",\"б\",\"без\",\"був\",\"була\",\"були\",\"було\",\"бути\",\"більш\",\"вам\",\"вас\",\"весь\",\"вздовж\",\"ви\",\"вниз\",\"внизу\",\"вона\",\"вони\",\"воно\",\"все\",\"всередині\",\"всіх\",\"від\",\"він\",\"да\",\"давай\",\"давати\",\"де\",\"дещо\",\"для\",\"до\",\"з\",\"завжди\",\"замість\",\"й\",\"коли\",\"ледве\",\"майже\",\"ми\",\"навколо\",\"навіть\",\"нам\",\"от\",\"отже\",\"отож\",\"поза\",\"про\",\"під\",\"та\",\"так\",\"такий\",\"також\",\"те\",\"ти\",\"тобто\",\"тож\",\"тощо\",\"хоча\",\"це\",\"цей\",\"чи\",\"чого\",\"що\",\"як\",\"який\",\"якої\",\"є\",\"із\",\"інших\",\"їх\",\"її\"],ur:[\"آئی\",\"آئے\",\"آج\",\"آخر\",\"آخرکبر\",\"آدهی\",\"آًب\",\"آٹھ\",\"آیب\",\"اة\",\"اخبزت\",\"اختتبم\",\"ادھر\",\"ارد\",\"اردگرد\",\"ارکبى\",\"اش\",\"اضتعوبل\",\"اضتعوبلات\",\"اضطرذ\",\"اضکب\",\"اضکی\",\"اضکے\",\"اطراف\",\"اغیب\",\"افراد\",\"الگ\",\"اور\",\"اوًچب\",\"اوًچبئی\",\"اوًچی\",\"اوًچے\",\"اى\",\"اً\",\"اًذر\",\"اًہیں\",\"اٹھبًب\",\"اپٌب\",\"اپٌے\",\"اچھب\",\"اچھی\",\"اچھے\",\"اکثر\",\"اکٹھب\",\"اکٹھی\",\"اکٹھے\",\"اکیلا\",\"اکیلی\",\"اکیلے\",\"اگرچہ\",\"اہن\",\"ایطے\",\"ایک\",\"ب\",\"ت\",\"تبزٍ\",\"تت\",\"تر\",\"ترتیت\",\"تریي\",\"تعذاد\",\"تن\",\"تو\",\"توبم\",\"توہی\",\"توہیں\",\"تٌہب\",\"تک\",\"تھب\",\"تھوڑا\",\"تھوڑی\",\"تھوڑے\",\"تھی\",\"تھے\",\"تیي\",\"ثب\",\"ثبئیں\",\"ثبترتیت\",\"ثبری\",\"ثبرے\",\"ثبعث\",\"ثبلا\",\"ثبلترتیت\",\"ثبہر\",\"ثدبئے\",\"ثرآں\",\"ثراں\",\"ثرش\",\"ثعذ\",\"ثغیر\",\"ثلٌذ\",\"ثلٌذوثبلا\",\"ثلکہ\",\"ثي\",\"ثٌب\",\"ثٌبرہب\",\"ثٌبرہی\",\"ثٌبرہے\",\"ثٌبًب\",\"ثٌذ\",\"ثٌذکرو\",\"ثٌذکرًب\",\"ثٌذی\",\"ثڑا\",\"ثڑوں\",\"ثڑی\",\"ثڑے\",\"ثھر\",\"ثھرا\",\"ثھراہوا\",\"ثھرپور\",\"ثھی\",\"ثہت\",\"ثہتر\",\"ثہتری\",\"ثہتریي\",\"ثیچ\",\"ج\",\"خب\",\"خبرہب\",\"خبرہی\",\"خبرہے\",\"خبهوظ\",\"خبًب\",\"خبًتب\",\"خبًتی\",\"خبًتے\",\"خبًٌب\",\"خت\",\"ختن\",\"خجکہ\",\"خص\",\"خططرذ\",\"خلذی\",\"خو\",\"خواى\",\"خوًہی\",\"خوکہ\",\"خٌبة\",\"خگہ\",\"خگہوں\",\"خگہیں\",\"خیطب\",\"خیطبکہ\",\"در\",\"درخبت\",\"درخہ\",\"درخے\",\"درزقیقت\",\"درضت\",\"دش\",\"دفعہ\",\"دلچطپ\",\"دلچطپی\",\"دلچطپیبں\",\"دو\",\"دور\",\"دوراى\",\"دوضرا\",\"دوضروں\",\"دوضری\",\"دوضرے\",\"دوًوں\",\"دکھبئیں\",\"دکھبتب\",\"دکھبتی\",\"دکھبتے\",\"دکھبو\",\"دکھبًب\",\"دکھبیب\",\"دی\",\"دیب\",\"دیتب\",\"دیتی\",\"دیتے\",\"دیر\",\"دیٌب\",\"دیکھو\",\"دیکھٌب\",\"دیکھی\",\"دیکھیں\",\"دے\",\"ر\",\"راضتوں\",\"راضتہ\",\"راضتے\",\"رریعہ\",\"رریعے\",\"رکي\",\"رکھ\",\"رکھب\",\"رکھتب\",\"رکھتبہوں\",\"رکھتی\",\"رکھتے\",\"رکھی\",\"رکھے\",\"رہب\",\"رہی\",\"رہے\",\"ز\",\"زبصل\",\"زبضر\",\"زبل\",\"زبلات\",\"زبلیہ\",\"زصوں\",\"زصہ\",\"زصے\",\"زقبئق\",\"زقیتیں\",\"زقیقت\",\"زکن\",\"زکویہ\",\"زیبدٍ\",\"صبف\",\"صسیر\",\"صفر\",\"صورت\",\"صورتسبل\",\"صورتوں\",\"صورتیں\",\"ض\",\"ضبت\",\"ضبتھ\",\"ضبدٍ\",\"ضبرا\",\"ضبرے\",\"ضبل\",\"ضبلوں\",\"ضت\",\"ضرور\",\"ضرورت\",\"ضروری\",\"ضلطلہ\",\"ضوچ\",\"ضوچب\",\"ضوچتب\",\"ضوچتی\",\"ضوچتے\",\"ضوچو\",\"ضوچٌب\",\"ضوچی\",\"ضوچیں\",\"ضکب\",\"ضکتب\",\"ضکتی\",\"ضکتے\",\"ضکٌب\",\"ضکی\",\"ضکے\",\"ضیذھب\",\"ضیذھی\",\"ضیذھے\",\"ضیکٌڈ\",\"ضے\",\"طرف\",\"طریق\",\"طریقوں\",\"طریقہ\",\"طریقے\",\"طور\",\"طورپر\",\"ظبہر\",\"ع\",\"عذد\",\"عظین\",\"علاقوں\",\"علاقہ\",\"علاقے\",\"علاوٍ\",\"عووهی\",\"غبیذ\",\"غخص\",\"غذ\",\"غروع\",\"غروعبت\",\"غے\",\"فرد\",\"فی\",\"ق\",\"قجل\",\"قجیلہ\",\"قطن\",\"لئے\",\"لا\",\"لازهی\",\"لو\",\"لوجب\",\"لوجی\",\"لوجے\",\"لوسبت\",\"لوسہ\",\"لوگ\",\"لوگوں\",\"لڑکپي\",\"لگتب\",\"لگتی\",\"لگتے\",\"لگٌب\",\"لگی\",\"لگیں\",\"لگے\",\"لی\",\"لیب\",\"لیٌب\",\"لیں\",\"لے\",\"ه\",\"هتعلق\",\"هختلف\",\"هسترم\",\"هسترهہ\",\"هسطوش\",\"هسیذ\",\"هطئلہ\",\"هطئلے\",\"هطبئل\",\"هطتعول\",\"هطلق\",\"هعلوم\",\"هػتول\",\"هلا\",\"هوکي\",\"هوکٌبت\",\"هوکٌہ\",\"هٌبضت\",\"هڑا\",\"هڑًب\",\"هڑے\",\"هکول\",\"هگر\",\"هہرثبى\",\"هیرا\",\"هیری\",\"هیرے\",\"هیں\",\"و\",\"وار\",\"والے\",\"وٍ\",\"ًئی\",\"ًئے\",\"ًب\",\"ًبپطٌذ\",\"ًبگسیر\",\"ًطجت\",\"ًقطہ\",\"ًو\",\"ًوخواى\",\"ًکبلٌب\",\"ًکتہ\",\"ًہ\",\"ًہیں\",\"ًیب\",\"ًے\",\"ٓ آش\",\"ٹھیک\",\"پبئے\",\"پبش\",\"پبًب\",\"پبًچ\",\"پر\",\"پراًب\",\"پطٌذ\",\"پل\",\"پورا\",\"پوچھب\",\"پوچھتب\",\"پوچھتی\",\"پوچھتے\",\"پوچھو\",\"پوچھوں\",\"پوچھٌب\",\"پوچھیں\",\"پچھلا\",\"پھر\",\"پہلا\",\"پہلی\",\"پہلےضی\",\"پہلےضے\",\"پہلےضےہی\",\"پیع\",\"چبر\",\"چبہب\",\"چبہٌب\",\"چبہے\",\"چلا\",\"چلو\",\"چلیں\",\"چلے\",\"چکب\",\"چکی\",\"چکیں\",\"چکے\",\"چھوٹب\",\"چھوٹوں\",\"چھوٹی\",\"چھوٹے\",\"چھہ\",\"چیسیں\",\"ڈھوًڈا\",\"ڈھوًڈلیب\",\"ڈھوًڈو\",\"ڈھوًڈًب\",\"ڈھوًڈی\",\"ڈھوًڈیں\",\"ک\",\"کئی\",\"کئے\",\"کب\",\"کبفی\",\"کبم\",\"کت\",\"کجھی\",\"کرا\",\"کرتب\",\"کرتبہوں\",\"کرتی\",\"کرتے\",\"کرتےہو\",\"کررہب\",\"کررہی\",\"کررہے\",\"کرو\",\"کرًب\",\"کریں\",\"کرے\",\"کطی\",\"کل\",\"کن\",\"کوئی\",\"کوتر\",\"کورا\",\"کوروں\",\"کورٍ\",\"کورے\",\"کوطي\",\"کوى\",\"کوًطب\",\"کوًطی\",\"کوًطے\",\"کھولا\",\"کھولو\",\"کھولٌب\",\"کھولی\",\"کھولیں\",\"کھولے\",\"کہ\",\"کہب\",\"کہتب\",\"کہتی\",\"کہتے\",\"کہو\",\"کہوں\",\"کہٌب\",\"کہی\",\"کہیں\",\"کہے\",\"کی\",\"کیب\",\"کیطب\",\"کیطرف\",\"کیطے\",\"کیلئے\",\"کیوًکہ\",\"کیوں\",\"کیے\",\"کے\",\"کےثعذ\",\"کےرریعے\",\"گئی\",\"گئے\",\"گب\",\"گرد\",\"گروٍ\",\"گروپ\",\"گروہوں\",\"گٌتی\",\"گی\",\"گیب\",\"گے\",\"ہر\",\"ہن\",\"ہو\",\"ہوئی\",\"ہوئے\",\"ہوا\",\"ہوبرا\",\"ہوبری\",\"ہوبرے\",\"ہوتب\",\"ہوتی\",\"ہوتے\",\"ہورہب\",\"ہورہی\",\"ہورہے\",\"ہوضکتب\",\"ہوضکتی\",\"ہوضکتے\",\"ہوًب\",\"ہوًی\",\"ہوًے\",\"ہوچکب\",\"ہوچکی\",\"ہوچکے\",\"ہوگئی\",\"ہوگئے\",\"ہوگیب\",\"ہوں\",\"ہی\",\"ہیں\",\"ہے\",\"ی\",\"یقیٌی\",\"یہ\",\"یہبں\"],vi:[\"a ha\",\"a-lô\",\"ai\",\"ai ai\",\"ai nấy\",\"alô\",\"amen\",\"anh\",\"bao giờ\",\"bao lâu\",\"bao nhiêu\",\"bao nả\",\"bay biến\",\"biết\",\"biết bao\",\"biết bao nhiêu\",\"biết chừng nào\",\"biết mấy\",\"biết đâu\",\"biết đâu chừng\",\"biết đâu đấy\",\"bà\",\"bài\",\"bác\",\"bây bẩy\",\"bây chừ\",\"bây giờ\",\"bây nhiêu\",\"bèn\",\"béng\",\"bông\",\"bạn\",\"bản\",\"bất chợt\",\"bất cứ\",\"bất giác\",\"bất kì\",\"bất kể\",\"bất kỳ\",\"bất luận\",\"bất nhược\",\"bất quá\",\"bất thình lình\",\"bất tử\",\"bất đồ\",\"bấy\",\"bấy chầy\",\"bấy chừ\",\"bấy giờ\",\"bấy lâu\",\"bấy lâu nay\",\"bấy nay\",\"bấy nhiêu\",\"bập bà bập bõm\",\"bập bõm\",\"bắt đầu từ\",\"bằng\",\"bằng không\",\"bằng nấy\",\"bằng ấy\",\"bển\",\"bệt\",\"bị\",\"bỏ mẹ\",\"bỗng\",\"bỗng chốc\",\"bỗng dưng\",\"bỗng không\",\"bỗng nhiên\",\"bỗng đâu\",\"bộ\",\"bội phần\",\"bớ\",\"bởi\",\"bởi chưng\",\"bởi nhưng\",\"bởi thế\",\"bởi vì\",\"bởi vậy\",\"bức\",\"cao\",\"cha\",\"cha chả\",\"chao ôi\",\"chiếc\",\"cho\",\"cho nên\",\"cho tới\",\"cho tới khi\",\"cho đến\",\"cho đến khi\",\"choa\",\"chu cha\",\"chui cha\",\"chung cục\",\"chung qui\",\"chung quy\",\"chung quy lại\",\"chuyện\",\"chành chạnh\",\"chí chết\",\"chính\",\"chính là\",\"chính thị\",\"chùn chùn\",\"chùn chũn\",\"chú\",\"chú mày\",\"chú mình\",\"chúng mình\",\"chúng ta\",\"chúng tôi\",\"chăn chắn\",\"chăng\",\"chưa\",\"chầm chập\",\"chậc\",\"chắc\",\"chắc hẳn\",\"chẳng lẽ\",\"chẳng những\",\"chẳng nữa\",\"chẳng phải\",\"chết nỗi\",\"chết thật\",\"chết tiệt\",\"chỉ\",\"chỉn\",\"chốc chốc\",\"chớ\",\"chớ chi\",\"chợt\",\"chủn\",\"chứ\",\"chứ lị\",\"coi bộ\",\"coi mòi\",\"con\",\"cu cậu\",\"cuốn\",\"cuộc\",\"càng\",\"các\",\"cái\",\"cây\",\"còn\",\"có\",\"có chăng là\",\"có dễ\",\"có thể\",\"có vẻ\",\"cóc khô\",\"cô\",\"cô mình\",\"công nhiên\",\"cùng\",\"cùng cực\",\"cùng nhau\",\"cùng với\",\"căn\",\"căn cắt\",\"cũng\",\"cũng như\",\"cũng vậy\",\"cũng vậy thôi\",\"cơ\",\"cơ chừng\",\"cơ hồ\",\"cơ mà\",\"cơn\",\"cả\",\"cả thảy\",\"cả thể\",\"cảm ơn\",\"cần\",\"cật lực\",\"cật sức\",\"cậu\",\"cổ lai\",\"của\",\"cứ\",\"cứ việc\",\"cực lực\",\"do\",\"do vì\",\"do vậy\",\"do đó\",\"duy\",\"dào\",\"dì\",\"dù cho\",\"dù rằng\",\"dưới\",\"dạ\",\"dần dà\",\"dần dần\",\"dầu sao\",\"dẫu\",\"dẫu sao\",\"dễ sợ\",\"dễ thường\",\"dở chừng\",\"dữ\",\"em\",\"giữa\",\"gì\",\"hay\",\"hoàn toàn\",\"hoặc\",\"hơn\",\"hầu hết\",\"họ\",\"hỏi\",\"khi\",\"khác\",\"không\",\"luôn\",\"là\",\"làm\",\"lên\",\"lúc\",\"lại\",\"lần\",\"lớn\",\"muốn\",\"mà\",\"mình\",\"mỗi\",\"một\",\"một cách\",\"mới\",\"mợ\",\"ngay\",\"ngay cả\",\"ngay khi\",\"ngay lúc\",\"ngay lập tức\",\"ngay tức khắc\",\"ngay từ\",\"nghe chừng\",\"nghe đâu\",\"nghen\",\"nghiễm nhiên\",\"nghỉm\",\"ngoài\",\"ngoài ra\",\"ngoải\",\"ngày\",\"ngày càng\",\"ngày ngày\",\"ngày xưa\",\"ngày xửa\",\"ngôi\",\"ngõ hầu\",\"ngăn ngắt\",\"ngươi\",\"người\",\"ngọn\",\"ngọt\",\"ngộ nhỡ\",\"nh\",\"nhau\",\"nhiên hậu\",\"nhiều\",\"nhiệt liệt\",\"nhung nhăng\",\"nhà\",\"nhân dịp\",\"nhân tiện\",\"nhé\",\"nhón nhén\",\"như\",\"như chơi\",\"như không\",\"như quả\",\"như thể\",\"như tuồng\",\"như vậy\",\"nhưng\",\"nhưng mà\",\"nhược bằng\",\"nhất\",\"nhất loạt\",\"nhất luật\",\"nhất mực\",\"nhất nhất\",\"nhất quyết\",\"nhất sinh\",\"nhất thiết\",\"nhất tâm\",\"nhất tề\",\"nhất đán\",\"nhất định\",\"nhận\",\"nhỉ\",\"nhỡ ra\",\"những\",\"những ai\",\"những như\",\"nào\",\"này\",\"nên\",\"nên chi\",\"nó\",\"nóc\",\"nói\",\"năm\",\"nơi\",\"nấy\",\"nếu\",\"nếu như\",\"nền\",\"nọ\",\"nớ\",\"nức nở\",\"nữa\",\"oai oái\",\"oái\",\"pho\",\"phè\",\"phóc\",\"phót\",\"phăn phắt\",\"phương chi\",\"phải\",\"phải chi\",\"phải chăng\",\"phắt\",\"phỉ phui\",\"phỏng\",\"phỏng như\",\"phốc\",\"phụt\",\"phứt\",\"qua\",\"qua quít\",\"qua quýt\",\"quyết\",\"quyết nhiên\",\"quyển\",\"quá\",\"quá chừng\",\"quá lắm\",\"quá sá\",\"quá thể\",\"quá trời\",\"quá xá\",\"quá đỗi\",\"quá độ\",\"quá ư\",\"quý hồ\",\"quả\",\"quả là\",\"quả tang\",\"quả thật\",\"quả tình\",\"quả vậy\",\"quả đúng\",\"ra\",\"ra phết\",\"ra sao\",\"ra trò\",\"ren rén\",\"riu ríu\",\"riêng\",\"riệt\",\"rày\",\"ráo\",\"ráo trọi\",\"rén\",\"rích\",\"rón rén\",\"rút cục\",\"răng\",\"rất\",\"rằng\",\"rằng là\",\"rốt cuộc\",\"rốt cục\",\"rồi\",\"rứa\",\"sa sả\",\"sao\",\"sau\",\"sau chót\",\"sau cuối\",\"sau cùng\",\"sau đó\",\"so\",\"song le\",\"suýt\",\"sì\",\"sạch\",\"sất\",\"sắp\",\"sẽ\",\"số\",\"số là\",\"sốt sột\",\"sở dĩ\",\"sự\",\"tanh\",\"tha hồ\",\"than ôi\",\"thanh\",\"theo\",\"thi thoảng\",\"thoạt\",\"thoạt nhiên\",\"thoắt\",\"thuần\",\"thà\",\"thà là\",\"thà rằng\",\"thành ra\",\"thành thử\",\"thái quá\",\"tháng\",\"thì\",\"thì thôi\",\"thình lình\",\"thím\",\"thôi\",\"thúng thắng\",\"thương ôi\",\"thường\",\"thảo hèn\",\"thảo nào\",\"thấy\",\"thẩy\",\"thậm\",\"thậm chí\",\"thật lực\",\"thật ra\",\"thật vậy\",\"thế\",\"thế là\",\"thế mà\",\"thế nào\",\"thế nên\",\"thế ra\",\"thế thì\",\"thế à\",\"thếch\",\"thỉnh thoảng\",\"thỏm\",\"thốc\",\"thốc tháo\",\"thốt\",\"thốt nhiên\",\"thộc\",\"thời gian\",\"thục mạng\",\"thửa\",\"thực ra\",\"thực sự\",\"thực vậy\",\"tiếp theo\",\"tiếp đó\",\"tiện thể\",\"toà\",\"toé khói\",\"toẹt\",\"trong\",\"trên\",\"trước\",\"trước kia\",\"trước nay\",\"trước tiên\",\"trước đây\",\"trước đó\",\"trếu tráo\",\"trển\",\"trệt\",\"trệu trạo\",\"trỏng\",\"trời đất ơi\",\"trừ phi\",\"tuy\",\"tuy nhiên\",\"tuy rằng\",\"tuy thế\",\"tuy vậy\",\"tuyệt nhiên\",\"tuần tự\",\"tuốt luốt\",\"tuốt tuồn tuột\",\"tuốt tuột\",\"tà tà\",\"tênh\",\"tít mù\",\"tò te\",\"tôi\",\"tông tốc\",\"tù tì\",\"tăm tắp\",\"tại\",\"tại vì\",\"tấm\",\"tấn\",\"tất cả\",\"tất thảy\",\"tất tần tật\",\"tất tật\",\"tắp\",\"tắp lự\",\"tọt\",\"tỏ ra\",\"tỏ vẻ\",\"tốc tả\",\"tối ư\",\"tột\",\"tớ\",\"tới\",\"tức thì\",\"tức tốc\",\"từ\",\"từng\",\"tự vì\",\"tựu trung\",\"veo\",\"veo veo\",\"việc\",\"vung thiên địa\",\"vung tàn tán\",\"vung tán tàn\",\"và\",\"vào\",\"vâng\",\"vèo\",\"vì\",\"vì chưng\",\"vì thế\",\"vì vậy\",\"ví bằng\",\"ví dù\",\"ví phỏng\",\"ví thử\",\"vô hình trung\",\"vô kể\",\"vô luận\",\"vô vàn\",\"văng tê\",\"vạn nhất\",\"vả chăng\",\"vả lại\",\"vẫn\",\"vậy\",\"vậy là\",\"vậy thì\",\"về\",\"vị tất\",\"vốn dĩ\",\"với\",\"với lại\",\"vở\",\"vụt\",\"vừa\",\"vừa mới\",\"xa xả\",\"xiết bao\",\"xon xón\",\"xoành xoạch\",\"xoét\",\"xoẳn\",\"xoẹt\",\"xuất kì bất ý\",\"xuất kỳ bất ý\",\"xuể\",\"xuống\",\"xăm xúi\",\"xăm xăm\",\"xăm xắm\",\"xềnh xệch\",\"xệp\",\"à\",\"à ơi\",\"ào\",\"á\",\"á à\",\"ái\",\"ái chà\",\"ái dà\",\"áng\",\"âu là\",\"ô hay\",\"ô hô\",\"ô kê\",\"ô kìa\",\"ôi chao\",\"ôi thôi\",\"ông\",\"úi\",\"úi chà\",\"úi dào\",\"ý\",\"ý chừng\",\"ý da\",\"đang\",\"đi\",\"điều\",\"đành đạch\",\"đáng lí\",\"đáng lý\",\"đáng lẽ\",\"đánh đùng\",\"đáo để\",\"đây\",\"đã\",\"đó\",\"được\",\"đại loại\",\"đại nhân\",\"đại phàm\",\"đại để\",\"đến\",\"đến nỗi\",\"đều\",\"để\",\"ơ\",\"ơ hay\",\"ơ kìa\",\"ơi\",\"ư\",\"ạ\",\"ạ ơi\",\"ấy\",\"ầu ơ\",\"ắt\",\"ắt hẳn\",\"ắt là\",\"ối dào\",\"ối giời\",\"ối giời ơi\",\"ồ\",\"ổng\",\"ớ\",\"ờ\",\"ở\",\"ở trên\",\"ủa\",\"ứ hự\",\"ứ ừ\",\"ừ\",\"ử\"],yo:[\"a\",\"an\",\"bá\",\"bí\",\"bẹ̀rẹ̀\",\"fún\",\"fẹ́\",\"gbogbo\",\"inú\",\"jù\",\"jẹ\",\"jẹ́\",\"kan\",\"kì\",\"kí\",\"kò\",\"láti\",\"lè\",\"lọ\",\"mi\",\"mo\",\"máa\",\"mọ̀\",\"ni\",\"náà\",\"ní\",\"nígbà\",\"nítorí\",\"nǹkan\",\"o\",\"padà\",\"pé\",\"púpọ̀\",\"pẹ̀lú\",\"rẹ̀\",\"sì\",\"sí\",\"sínú\",\"ṣ\",\"ti\",\"tí\",\"wà\",\"wá\",\"wọn\",\"wọ́n\",\"yìí\",\"àti\",\"àwọn\",\"é\",\"í\",\"òun\",\"ó\",\"ń\",\"ńlá\",\"ṣe\",\"ṣé\",\"ṣùgbọ́n\",\"ẹmọ́\",\"ọjọ́\",\"ọ̀pọ̀lọpọ̀\"],zu:[\"futhi\",\"kahle\",\"kakhulu\",\"kanye\",\"khona\",\"kodwa\",\"kungani\",\"kusho\",\"la\",\"lakhe\",\"lapho\",\"mina\",\"ngesikhathi\",\"nje\",\"phansi\",\"phezulu\",\"u\",\"ukuba\",\"ukuthi\",\"ukuze\",\"uma\",\"wahamba\",\"wakhe\",\"wami\",\"wase\",\"wathi\",\"yakhe\",\"zakhe\",\"zonke\"]};","/* jshint maxcomplexity: 100 */\n\n(function (window, undefined) {\n    'use strict';\n\n    var normalizeForSearch = function (s) {\n\n        function filter(c) {\n            switch (c) {\n            case 'æ':\n            case 'ä':\n                return 'ae';\n\n            case 'å':\n                return 'aa';\n\n            case 'á':\n            case 'à':\n            case 'ã':\n            case 'â':\n                return 'a';\n\n            case 'ç':\n            case 'č':\n                return 'c';\n\n            case 'é':\n            case 'ê':\n            case 'è':\n            case 'ë':\n            case 'ē':\n                return 'e';\n\n            case 'î':\n            case 'ï':\n            case 'í':\n                return 'i';\n\n            case 'œ':\n            case 'ö':\n                return 'oe';\n\n            case 'ó':\n            case 'õ':\n            case 'ô':\n                return 'o';\n\n            case 'ś':\n            case 'š':\n                return 's';\n\n            case 'ü':\n                return 'ue';\n\n            case 'ù':\n            case 'ú':\n            case 'ŭ':\n                return 'u';\n\n            case 'ß':\n                return 'ss';\n\n            case 'ё':\n                return 'е';\n\n            default:\n                return c;\n            }\n        }\n\n        var normalized = '', i, l;\n        s = s.toLowerCase();\n        for (i = 0, l = s.length; i < l; i = i + 1) {\n            normalized = normalized + filter(s.charAt(i));\n        }\n        return normalized;\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = normalizeForSearch;\n    }\n    else {\n        window.normalizeForSearch = normalizeForSearch;\n    }\n}(this));\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports={tags:[{name:\"mountainbike\",words:[\"berge\",\"felsen\",\"fully\",\"mtb\"]},{name:\"rennrad\",words:[\"straße\",\"dura ace\",\"tour de france\"]},{name:\"trekking/reise\",words:[\"trekking\",\"reise\",\"langstrecke\",\"gepäcktasche\"]},{name:\"urban\",words:[\"pendeln\",\"fixed gear\",\"pegs\"]}]};","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;",null,"// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.taggy = void 0;\nconst readline = __importStar(require(\"readline\"));\nconst wink_tokenizer_1 = __importDefault(require(\"wink-tokenizer\"));\nconst stopwords_iso_1 = __importDefault(require(\"stopwords-iso\")); // object of stopwords for multiple languages\n// import stopwordsDE from de; // german stopwords\nconst normalize_for_search_1 = __importDefault(require(\"normalize-for-search\"));\nrequire(\"regenerator-runtime/runtime\");\n// import Tagify from \"@yaireo/tagify\";\n// let glossarData = require(\"../taggy/data/glossar.json\");\nlet glossarData = require(\"../data/glossar.json\");\n// import * as glossarData from \"../taggy/data/glossar.json\";\n//import synonyms from \"germansynonyms\";\n// import openthesaurus from \"openthesaurus\";\nconst openthesaurus = require(\"openthesaurus\");\nlet finalInput = [];\nlet glossarEnriched = [];\nlet tagify;\n// OPTIONAL\n// include wink-nlp (lemmatizing)\n// OPTIONAL\nexports.taggy = {\n    taggyVanilla: (input) => {\n        return processInput(input);\n    },\n    createTagify: (inputElement) => {\n        console.log(inputElement);\n        tagify = new Tagify(inputElement);\n        return tagify;\n    },\n    addTags: (input) => {\n        tagify.addTags(input);\n        return tagify;\n    },\n    taggyCLI: () => {\n        // create shell input\n        const rl = readline.createInterface({\n            input: process.stdin,\n            output: process.stdout,\n        });\n        rl.question(\"Input: \", (input) => {\n            console.log(`Tokens for \"${input}\":`);\n            // optional lemmatizer for tech words?\n            //let lemmatized = null;\n            //lemmatized = jargon.Lemmatize(input, stackexchange);\n            //console.log(lemmatized.toString());\n            // optional lemmatizer for tech words?\n            processInput(input);\n            rl.close();\n        });\n    },\n};\nasync function processInput(input) {\n    // tokenize input\n    const winkTokenizer = new wink_tokenizer_1.default();\n    const stopwordsDE = stopwords_iso_1.default.de;\n    let tokenizedItems = winkTokenizer.tokenize(input);\n    let tokenizedWords = tokenizedItems.filter((item) => {\n        return item.tag === \"word\";\n    });\n    // console.log(tokenizedItems);\n    // console.log(tokenizedWords);\n    // console.log(stopwordsDE);\n    // filter out german stopwords\n    let tokenizedWordsNoStop = tokenizedWords.filter((item) => !stopwordsDE.includes(item.value));\n    // create array with only lowercase and normalized (remove ö and stuff)\n    let tokenizedValues = [];\n    for (const element of tokenizedWordsNoStop) {\n        tokenizedValues.push(normalize_for_search_1.default(element.value));\n        // optional lemmatizer for tech words?\n        // lemmatized = jargon.Lemmatize(element.value, stackexchange);\n        // console.log(lemmatized.toString());\n        // optional lemmatizer for tech words?\n    }\n    // console.log(tokenizedValues);\n    // console.log(tokenizedValues);\n    let enrichedInputValues = [];\n    // don't call openthesaurus-API too often (-> results in too many requests error)\n    if (tokenizedValues.length < 20) {\n        // get baseforms from openthesaurus?\n        for await (const word of tokenizedValues) {\n            // enrichedInputValues.push(word);\n            console.log(\"CALLING OPENTHESAURUS API\");\n            await openthesaurus.get(word).then((response) => {\n                if (response && response.baseforms) {\n                    console.log(response.baseforms);\n                    enrichedInputValues.push(response.baseforms);\n                }\n            });\n        }\n    }\n    enrichedInputValues = enrichedInputValues.concat(tokenizedValues);\n    // get baseforms from openthesaurus?\n    // read glossar data\n    // let rawData = fs.readFileSync(\"../taggy/data/glossar.json\");\n    // console.log(process.cwd());\n    // console.log(glossarData);\n    // let glossar = JSON.parse(glossarData.toString());\n    // console.log(glossar);\n    let glossarTags = [];\n    for (const tag of glossarData.tags) {\n        for (const word of tag.words) {\n            glossarTags.push(word);\n        }\n    }\n    // ASYNC AWAIT OR PROMOISE NEEDED\n    // let glossarEnriched = enrichWithOpenThesaurus(glossarTags);\n    let glossarEnriched = glossarTags;\n    console.log(\"GLOSSARENRICHED\");\n    console.log(glossarEnriched);\n    console.log(\"ENRICHEDINPUTVALUE\");\n    console.log(enrichedInputValues);\n    let returnValues = [];\n    // look for matches in glossar\n    for (const word of glossarEnriched) {\n        // console.log(\"- \" + word);\n        if (enrichedInputValues.includes(normalize_for_search_1.default(word))) {\n            console.log(\"-> MATCH\");\n            returnValues.push(word);\n        }\n    }\n    return returnValues;\n}\nfunction enrichWithOpenThesaurus(inputArray) {\n    let enrichedArray = [];\n    for (const word of inputArray) {\n        // get baseforms from openthesaurus?\n        openthesaurus.get(word).then((response) => {\n            if (response && response.baseforms) {\n                console.log(response.baseforms);\n                enrichedArray.push(response.baseforms);\n            }\n            // get baseforms from openthesaurus?\n        });\n    }\n    return enrichedArray;\n}\n","import { taggy } from \"../../taggy-base/taggy/lib/index\";\n\nconsole.log(taggy);\n// import Tagify from \"@yaireo/tagify\";\n\n// const Tagify = window.tagify;\n// let myCanvas = create(\"myCanvas\", document.body, 480, 320);\n// let reportList = createReportList(myCanvas.id);\n\n// let square1 = draw(myCanvas.ctx, 50, 50, 100, \"blue\");\n// reportArea(square1.length, reportList);\n// reportPerimeter(square1.length, reportList);\n\n// // Use the default\n// let square2 = randomSquare(myCanvas.ctx);\n\nlet divWrapper = document.createElement(\"div\");\nlet outputField = document.createElement(\"input\");\noutputField.id = \"output\";\ndivWrapper.appendChild(outputField);\ndocument.body.appendChild(divWrapper);\n\nlet outputFieldForTagify = document.getElementById(\"output\");\n// var tagify = new Tagify(outputFieldForTagify);\nlet myTaggy = taggyCreate(\"myTaggy\", document.body, outputFieldForTagify);\n\nfunction taggyCreate(id, parent, outputFieldForTagify) {\n  let divWrapper = document.createElement(\"div\");\n  let inputField = document.createElement(\"textarea\");\n  divWrapper.setAttribute(\"type\", \"text\");\n  divWrapper.appendChild(inputField);\n  divWrapper.id = id;\n\n  //   let canvasElem = document.createElement(\"canvas\");\n  parent.appendChild(divWrapper);\n  //   divWrapper.appendChild(canvasElem);\n\n  //   canvasElem.width = width;\n  //   canvasElem.height = height;\n\n  //   let ctx = canvasElem.getContext(\"2d\");\n\n  let timeout = null;\n\n  inputField.addEventListener(\"input\", async function (event) {\n    clearTimeout(timeout);\n\n    // Make a new timeout set to go off in 1000ms (1 second)\n    timeout = setTimeout(async function () {\n      console.log(\"INPUTFIELDVALUE\");\n      console.log(inputField.value);\n\n      // createSimpleTag(taggy.taggyVanilla(inputField.value));\n      let result = await taggy.taggyVanilla(inputField.value);\n      console.log(\"RESULT\", result);\n\n      // tagify.addTags(result);\n      // tagify.addTags(\"yes\");\n      let inputElementForTagify = await taggy.createTagify(\n        outputFieldForTagify\n      );\n      \n      let addedTag = await taggy.addTags(result);\n      console.log(addedTag);\n\n      // createSimpleTag(inputField.value);\n    }, 1000);\n\n    return {\n      inputField: inputField,\n    };\n  });\n\n  function createSimpleTag(value) {\n    // let tagDivWrapper = document.createElement(\"div\");\n    // let pField = document.createElement(\"p\");\n    // tagDivWrapper.appendChild(pField);\n    // console.log(pField);\n    // pField.innerText = value;\n    // pField.style.border = \"solid 1px black\";\n    // let myTaggy = document.getElementById(\"myTaggy\");\n    // console.log(myTaggy);\n\n    // myTaggy.appendChild(tagDivWrapper);\n\n    // tagify.addTags([\n    //   { value: \"banana\", color: \"yellow\" },\n    //   { value: \"apple\", color: \"red\" },\n    //   { value: \"watermelon\", color: \"green\" },\n    // ]);\n\n    tagify.addTags([{ value: value, color: \"yellow\" }]);\n  }\n}\n"]}