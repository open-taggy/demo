{"version":3,"sources":["js/main.js"],"names":["inputFieldForTaggy","document","getElementById","outputFieldForTaggy","frequencySpan","taggyObject","Taggy","loader","timeout","addEventListener","event","clearTimeout","setTimeout","style","display","processAndAddTags","value","result","includes","undefined","getMostFrequent","join","innerHTML","inputField"],"mappings":";AAkCA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MA5BA,IAAIA,EAAqBC,SAASC,eAAe,cAK7CC,EAAsBF,SAASC,eAAe,eAI9CE,EAAgBH,SAASC,eAAe,aAExCG,EAAc,IAAIC,MACpBN,EACAG,EACAC,GACA,GAIEG,EAASN,SAASC,eAAe,UAMjCM,EAAU,KAGdR,EAAmBS,iBAAiB,QAApC,WAA6C,IAAA,EAAA,EAAA,mBAAA,KAAA,SAAgBC,EAAAA,GAAhB,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAuBpC,OAtBPC,aAAaH,GAGbA,EAAUI,WAAW,EAAA,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAKAP,OAJnBE,EAAOM,MAAMC,QAAU,QADJ,EAAA,KAAA,EAKAT,EAAYU,kBAC7Bf,EAAmBgB,MACnBb,GAPiB,KAAA,EAWfc,GANAA,EALe,EAAA,KASnBV,EAAOM,MAAMC,QAAU,QAEnBG,GAAWA,EAAOC,cAASC,GAXZ,CAAA,EAAA,KAAA,GAAA,MAaad,OAbb,EAAA,KAAA,EAaaA,EAAYe,kBAAkBC,KAAK,MAbhD,KAAA,EAAA,EAAA,GAAA,EAAA,KAYjBjB,EAAckB,UACZ,mBAbe,EAAA,GAAA,EAAA,KAAA,GAAA,MAAA,KAAA,GAejBlB,EAAckB,UAAY,wBAfT,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MAiBlB,KAEI,EAAA,OAAA,SAAA,CACLC,WAAYvB,IAxB6B,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,MAA7C,OAAA,SAAA,GAAA,OAAA,EAAA,MAAA,KAAA,YAAA","file":"main.11745d95.js","sourceRoot":"..","sourcesContent":["// import { Taggy } from \"../../taggy/lib/index\";\n\n// create instance of taggy\n// let taggyObject = new Taggy();\n\n// set input field for taggy\nlet inputFieldForTaggy = document.getElementById(\"taggyInput\");\n// taggyObject.setInputField(inputFieldForTaggy);\n// console.log(inputFieldForTaggy);\n\n// // set output field for taggy\nlet outputFieldForTaggy = document.getElementById(\"taggyOutput\");\n// taggyObject.setOutputField(outputFieldForTaggy);\n// console.log(outputFieldForTaggy);\n\nlet frequencySpan = document.getElementById(\"frequency\");\n\nlet taggyObject = new Taggy(\n  inputFieldForTaggy,\n  outputFieldForTaggy,\n  frequencySpan,\n  true\n);\n\n// loading animation\nlet loader = document.getElementById(\"loader\");\n// let divWrapperLoading = document.createElement(\"div\");\n// divWrapperLoading.className = \"loader\";\n// divWrapperLoading.style.display = \"none\";\n// document.getElementById(\"myTaggy\").appendChild(divWrapperLoading);\n\nlet timeout = null;\n\n// setup processing after feedback input -> TOTO: put into taggy\ninputFieldForTaggy.addEventListener(\"input\", async function (event) {\n  clearTimeout(timeout);\n\n  // make a new timeout set to go off in 1000ms\n  timeout = setTimeout(async function () {\n    loader.style.display = \"block\";\n    // createSimpleTag(taggy.taggyVanilla(inputField.value));\n    // let result = await taggyObject.processInput(inputFieldForTaggy.value);\n\n    let result = await taggyObject.processAndAddTags(\n      inputFieldForTaggy.value,\n      outputFieldForTaggy\n    );\n    loader.style.display = \"none\";\n\n    if (result && !result.includes(undefined)) {\n      frequencySpan.innerHTML =\n        \"top candidates: \" + (await taggyObject.getMostFrequent().join(\", \"));\n    } else {\n      frequencySpan.innerHTML = \"No match with glossar\";\n    }\n  }, 1000);\n\n  return {\n    inputField: inputFieldForTaggy,\n  };\n});\n"]}